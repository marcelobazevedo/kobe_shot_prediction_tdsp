2025-03-29 18:23:10,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:23:10,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:23:10,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:23:10,516:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:23:20,955:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:24:57,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:24:57,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:24:57,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:24:57,004:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:24:58,624:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:26:19,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:19,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:19,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:19,926:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:20,412:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:26:21,046:INFO:PyCaret ClassificationExperiment
2025-03-29 18:26:21,046:INFO:Logging name: clf-default-name
2025-03-29 18:26:21,046:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-29 18:26:21,046:INFO:version 3.0.0
2025-03-29 18:26:21,046:INFO:Initializing setup()
2025-03-29 18:26:21,046:INFO:self.USI: 5308
2025-03-29 18:26:21,046:INFO:self._variable_keys: {'y', 'X', '_ml_usecase', 'log_plots_param', 'X_test', 'exp_id', 'seed', 'fix_imbalance', 'memory', 'html_param', 'exp_name_log', 'is_multiclass', 'USI', 'fold_shuffle_param', 'y_train', 'gpu_n_jobs_param', 'y_test', 'fold_generator', 'logging_param', 'fold_groups_param', 'n_jobs_param', 'idx', '_available_plots', 'target_param', 'data', 'gpu_param', 'X_train', 'pipeline'}
2025-03-29 18:26:21,046:INFO:Checking environment
2025-03-29 18:26:21,046:INFO:python_version: 3.10.16
2025-03-29 18:26:21,046:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-03-29 18:26:21,046:INFO:machine: arm64
2025-03-29 18:26:21,062:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-03-29 18:26:21,062:INFO:Memory: svmem(total=17179869184, available=6622134272, percent=61.5, used=8846082048, free=69009408, active=6554615808, inactive=6497009664, wired=2291466240)
2025-03-29 18:26:21,062:INFO:Physical Core: 8
2025-03-29 18:26:21,063:INFO:Logical Core: 8
2025-03-29 18:26:21,063:INFO:Checking libraries
2025-03-29 18:26:21,063:INFO:System:
2025-03-29 18:26:21,063:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-03-29 18:26:21,063:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-03-29 18:26:21,063:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-03-29 18:26:21,063:INFO:PyCaret required dependencies:
2025-03-29 18:26:21,375:INFO:                 pip: 25.0.1
2025-03-29 18:26:21,375:INFO:          setuptools: 75.8.2
2025-03-29 18:26:21,375:INFO:             pycaret: 3.0.0
2025-03-29 18:26:21,375:INFO:             IPython: 8.34.0
2025-03-29 18:26:21,375:INFO:          ipywidgets: 8.1.5
2025-03-29 18:26:21,375:INFO:                tqdm: 4.67.1
2025-03-29 18:26:21,375:INFO:               numpy: 1.24.4
2025-03-29 18:26:21,375:INFO:              pandas: 1.5.3
2025-03-29 18:26:21,375:INFO:              jinja2: 3.1.6
2025-03-29 18:26:21,375:INFO:               scipy: 1.9.3
2025-03-29 18:26:21,375:INFO:              joblib: 1.2.0
2025-03-29 18:26:21,375:INFO:             sklearn: 1.1.3
2025-03-29 18:26:21,375:INFO:                pyod: 2.0.4
2025-03-29 18:26:21,375:INFO:            imblearn: 0.12.4
2025-03-29 18:26:21,375:INFO:   category_encoders: 2.7.0
2025-03-29 18:26:21,376:INFO:            lightgbm: 4.6.0
2025-03-29 18:26:21,376:INFO:               numba: 0.61.0
2025-03-29 18:26:21,376:INFO:            requests: 2.32.3
2025-03-29 18:26:21,376:INFO:          matplotlib: 3.10.1
2025-03-29 18:26:21,376:INFO:          scikitplot: 0.3.7
2025-03-29 18:26:21,376:INFO:         yellowbrick: 1.5
2025-03-29 18:26:21,376:INFO:              plotly: 5.24.1
2025-03-29 18:26:21,376:INFO:             kaleido: 0.2.1
2025-03-29 18:26:21,376:INFO:         statsmodels: 0.14.4
2025-03-29 18:26:21,376:INFO:              sktime: 0.36.0
2025-03-29 18:26:21,376:INFO:               tbats: 1.1.3
2025-03-29 18:26:21,376:INFO:            pmdarima: 2.0.4
2025-03-29 18:26:21,376:INFO:              psutil: 7.0.0
2025-03-29 18:26:21,376:INFO:PyCaret optional dependencies:
2025-03-29 18:26:21,839:INFO:                shap: Not installed
2025-03-29 18:26:21,839:INFO:           interpret: Not installed
2025-03-29 18:26:21,839:INFO:                umap: Not installed
2025-03-29 18:26:21,839:INFO:    pandas_profiling: Not installed
2025-03-29 18:26:21,839:INFO:  explainerdashboard: Not installed
2025-03-29 18:26:21,840:INFO:             autoviz: Not installed
2025-03-29 18:26:21,840:INFO:           fairlearn: Not installed
2025-03-29 18:26:21,840:INFO:             xgboost: Not installed
2025-03-29 18:26:21,840:INFO:            catboost: Not installed
2025-03-29 18:26:21,840:INFO:              kmodes: Not installed
2025-03-29 18:26:21,840:INFO:             mlxtend: Not installed
2025-03-29 18:26:21,840:INFO:       statsforecast: Not installed
2025-03-29 18:26:21,840:INFO:        tune_sklearn: Not installed
2025-03-29 18:26:21,840:INFO:                 ray: Not installed
2025-03-29 18:26:21,840:INFO:            hyperopt: Not installed
2025-03-29 18:26:21,840:INFO:              optuna: Not installed
2025-03-29 18:26:21,840:INFO:               skopt: Not installed
2025-03-29 18:26:21,840:INFO:              mlflow: 2.21.2
2025-03-29 18:26:21,840:INFO:              gradio: Not installed
2025-03-29 18:26:21,840:INFO:             fastapi: 0.115.12
2025-03-29 18:26:21,840:INFO:             uvicorn: 0.34.0
2025-03-29 18:26:21,840:INFO:              m2cgen: Not installed
2025-03-29 18:26:21,840:INFO:           evidently: Not installed
2025-03-29 18:26:21,840:INFO:               fugue: Not installed
2025-03-29 18:26:21,840:INFO:           streamlit: 1.44.0
2025-03-29 18:26:21,840:INFO:             prophet: Not installed
2025-03-29 18:26:21,840:INFO:None
2025-03-29 18:26:21,840:INFO:Set up data.
2025-03-29 18:26:21,849:INFO:Set up train/test split.
2025-03-29 18:26:21,856:INFO:Set up index.
2025-03-29 18:26:21,856:INFO:Set up folding strategy.
2025-03-29 18:26:21,856:INFO:Assigning column types.
2025-03-29 18:26:21,858:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 18:26:21,884:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:26:21,885:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:26:21,901:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,922:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:26:21,922:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:26:21,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,934:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 18:26:21,954:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:26:21,965:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,965:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,984:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:26:21,996:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:21,996:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-29 18:26:22,026:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,026:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,056:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,058:INFO:Preparing preprocessing pipeline...
2025-03-29 18:26:22,059:INFO:Set up simple imputation.
2025-03-29 18:26:22,070:INFO:Finished creating preprocessing pipeline.
2025-03-29 18:26:22,072:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-03-29 18:26:22,072:INFO:Creating final display dataframe.
2025-03-29 18:26:22,099:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5308
2025-03-29 18:26:22,131:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,131:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,162:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:26:22,163:INFO:setup() successfully completed in 1.12s...............
2025-03-29 18:26:22,163:INFO:Initializing create_model()
2025-03-29 18:26:22,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100c87e20>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:26:22,163:INFO:Checking exceptions
2025-03-29 18:26:22,344:INFO:Importing libraries
2025-03-29 18:26:22,344:INFO:Copying training dataset
2025-03-29 18:26:22,350:INFO:Defining folds
2025-03-29 18:26:22,350:INFO:Declaring metric variables
2025-03-29 18:26:22,350:INFO:Importing untrained model
2025-03-29 18:26:22,351:INFO:Logistic Regression Imported successfully
2025-03-29 18:26:22,351:INFO:Starting cross validation
2025-03-29 18:26:22,353:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:26:25,966:INFO:Calculating mean and std
2025-03-29 18:26:25,967:INFO:Creating metrics dataframe
2025-03-29 18:26:25,971:INFO:Finalizing model
2025-03-29 18:26:26,046:INFO:Uploading results into container
2025-03-29 18:26:26,046:INFO:Uploading model into container now
2025-03-29 18:26:26,056:INFO:_master_model_container: 1
2025-03-29 18:26:26,057:INFO:_display_container: 2
2025-03-29 18:26:26,057:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-29 18:26:26,057:INFO:create_model() successfully completed......................................
2025-03-29 18:26:26,155:INFO:Initializing create_model()
2025-03-29 18:26:26,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100c87e20>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:26:26,155:INFO:Checking exceptions
2025-03-29 18:26:26,156:INFO:Importing libraries
2025-03-29 18:26:26,156:INFO:Copying training dataset
2025-03-29 18:26:26,158:INFO:Defining folds
2025-03-29 18:26:26,158:INFO:Declaring metric variables
2025-03-29 18:26:26,158:INFO:Importing untrained model
2025-03-29 18:26:26,158:INFO:Decision Tree Classifier Imported successfully
2025-03-29 18:26:26,158:INFO:Starting cross validation
2025-03-29 18:26:26,158:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:26:26,332:INFO:Calculating mean and std
2025-03-29 18:26:26,333:INFO:Creating metrics dataframe
2025-03-29 18:26:26,334:INFO:Finalizing model
2025-03-29 18:26:26,366:INFO:Uploading results into container
2025-03-29 18:26:26,367:INFO:Uploading model into container now
2025-03-29 18:26:26,371:INFO:_master_model_container: 2
2025-03-29 18:26:26,371:INFO:_display_container: 3
2025-03-29 18:26:26,371:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-03-29 18:26:26,371:INFO:create_model() successfully completed......................................
2025-03-29 18:26:26,430:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-03-29 18:26:26,432:INFO:Initializing save_model()
2025-03-29 18:26:26,432:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-29 18:26:26,432:INFO:Adding model into prep_pipe
2025-03-29 18:26:26,434:INFO:./data/processed/final_model.pkl saved in current working directory
2025-03-29 18:26:26,436:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-03-29 18:26:26,436:INFO:save_model() successfully completed......................................
2025-03-29 18:26:31,241:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:31,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:31,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:31,242:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:26:31,675:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:26:31,957:INFO:Initializing load_model()
2025-03-29 18:26:31,957:INFO:load_model(model_name=./data/processed/final_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-29 18:30:12,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:12,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:12,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:12,870:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:13,233:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:30:13,637:INFO:PyCaret ClassificationExperiment
2025-03-29 18:30:13,637:INFO:Logging name: clf-default-name
2025-03-29 18:30:13,637:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-29 18:30:13,637:INFO:version 3.0.0
2025-03-29 18:30:13,637:INFO:Initializing setup()
2025-03-29 18:30:13,638:INFO:self.USI: bd82
2025-03-29 18:30:13,638:INFO:self._variable_keys: {'log_plots_param', 'target_param', 'X_test', 'html_param', 'seed', 'USI', 'pipeline', '_ml_usecase', 'fix_imbalance', 'fold_groups_param', 'y_train', 'X_train', '_available_plots', 'data', 'idx', 'memory', 'logging_param', 'y', 'gpu_n_jobs_param', 'X', 'y_test', 'fold_shuffle_param', 'is_multiclass', 'exp_id', 'exp_name_log', 'n_jobs_param', 'gpu_param', 'fold_generator'}
2025-03-29 18:30:13,638:INFO:Checking environment
2025-03-29 18:30:13,638:INFO:python_version: 3.10.16
2025-03-29 18:30:13,638:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-03-29 18:30:13,638:INFO:machine: arm64
2025-03-29 18:30:13,650:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-03-29 18:30:13,650:INFO:Memory: svmem(total=17179869184, available=6962675712, percent=59.5, used=7789346816, free=996196352, active=5977194496, inactive=5663916032, wired=1812152320)
2025-03-29 18:30:13,650:INFO:Physical Core: 8
2025-03-29 18:30:13,650:INFO:Logical Core: 8
2025-03-29 18:30:13,650:INFO:Checking libraries
2025-03-29 18:30:13,650:INFO:System:
2025-03-29 18:30:13,650:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-03-29 18:30:13,650:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-03-29 18:30:13,650:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-03-29 18:30:13,650:INFO:PyCaret required dependencies:
2025-03-29 18:30:13,670:INFO:                 pip: 25.0.1
2025-03-29 18:30:13,670:INFO:          setuptools: 75.8.2
2025-03-29 18:30:13,670:INFO:             pycaret: 3.0.0
2025-03-29 18:30:13,670:INFO:             IPython: 8.34.0
2025-03-29 18:30:13,670:INFO:          ipywidgets: 8.1.5
2025-03-29 18:30:13,670:INFO:                tqdm: 4.67.1
2025-03-29 18:30:13,670:INFO:               numpy: 1.24.4
2025-03-29 18:30:13,670:INFO:              pandas: 1.5.3
2025-03-29 18:30:13,670:INFO:              jinja2: 3.1.6
2025-03-29 18:30:13,670:INFO:               scipy: 1.9.3
2025-03-29 18:30:13,670:INFO:              joblib: 1.2.0
2025-03-29 18:30:13,670:INFO:             sklearn: 1.1.3
2025-03-29 18:30:13,670:INFO:                pyod: 2.0.4
2025-03-29 18:30:13,670:INFO:            imblearn: 0.12.4
2025-03-29 18:30:13,670:INFO:   category_encoders: 2.7.0
2025-03-29 18:30:13,670:INFO:            lightgbm: 4.6.0
2025-03-29 18:30:13,670:INFO:               numba: 0.61.0
2025-03-29 18:30:13,670:INFO:            requests: 2.32.3
2025-03-29 18:30:13,670:INFO:          matplotlib: 3.10.1
2025-03-29 18:30:13,670:INFO:          scikitplot: 0.3.7
2025-03-29 18:30:13,670:INFO:         yellowbrick: 1.5
2025-03-29 18:30:13,670:INFO:              plotly: 5.24.1
2025-03-29 18:30:13,670:INFO:             kaleido: 0.2.1
2025-03-29 18:30:13,670:INFO:         statsmodels: 0.14.4
2025-03-29 18:30:13,670:INFO:              sktime: 0.36.0
2025-03-29 18:30:13,670:INFO:               tbats: 1.1.3
2025-03-29 18:30:13,670:INFO:            pmdarima: 2.0.4
2025-03-29 18:30:13,670:INFO:              psutil: 7.0.0
2025-03-29 18:30:13,670:INFO:PyCaret optional dependencies:
2025-03-29 18:30:13,791:INFO:                shap: Not installed
2025-03-29 18:30:13,791:INFO:           interpret: Not installed
2025-03-29 18:30:13,791:INFO:                umap: Not installed
2025-03-29 18:30:13,792:INFO:    pandas_profiling: Not installed
2025-03-29 18:30:13,792:INFO:  explainerdashboard: Not installed
2025-03-29 18:30:13,792:INFO:             autoviz: Not installed
2025-03-29 18:30:13,792:INFO:           fairlearn: Not installed
2025-03-29 18:30:13,792:INFO:             xgboost: Not installed
2025-03-29 18:30:13,792:INFO:            catboost: Not installed
2025-03-29 18:30:13,792:INFO:              kmodes: Not installed
2025-03-29 18:30:13,792:INFO:             mlxtend: Not installed
2025-03-29 18:30:13,792:INFO:       statsforecast: Not installed
2025-03-29 18:30:13,792:INFO:        tune_sklearn: Not installed
2025-03-29 18:30:13,792:INFO:                 ray: Not installed
2025-03-29 18:30:13,792:INFO:            hyperopt: Not installed
2025-03-29 18:30:13,792:INFO:              optuna: Not installed
2025-03-29 18:30:13,792:INFO:               skopt: Not installed
2025-03-29 18:30:13,792:INFO:              mlflow: 2.21.2
2025-03-29 18:30:13,792:INFO:              gradio: Not installed
2025-03-29 18:30:13,792:INFO:             fastapi: 0.115.12
2025-03-29 18:30:13,792:INFO:             uvicorn: 0.34.0
2025-03-29 18:30:13,792:INFO:              m2cgen: Not installed
2025-03-29 18:30:13,792:INFO:           evidently: Not installed
2025-03-29 18:30:13,792:INFO:               fugue: Not installed
2025-03-29 18:30:13,792:INFO:           streamlit: 1.44.0
2025-03-29 18:30:13,792:INFO:             prophet: Not installed
2025-03-29 18:30:13,792:INFO:None
2025-03-29 18:30:13,792:INFO:Set up data.
2025-03-29 18:30:13,796:INFO:Set up train/test split.
2025-03-29 18:30:13,800:INFO:Set up index.
2025-03-29 18:30:13,800:INFO:Set up folding strategy.
2025-03-29 18:30:13,800:INFO:Assigning column types.
2025-03-29 18:30:13,801:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 18:30:13,819:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:30:13,820:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:30:13,834:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,834:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,853:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:30:13,853:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:30:13,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,864:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 18:30:13,883:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:30:13,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,912:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:30:13,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,924:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-29 18:30:13,953:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:13,984:INFO:Preparing preprocessing pipeline...
2025-03-29 18:30:13,984:INFO:Set up simple imputation.
2025-03-29 18:30:13,993:INFO:Finished creating preprocessing pipeline.
2025-03-29 18:30:13,996:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-03-29 18:30:13,996:INFO:Creating final display dataframe.
2025-03-29 18:30:14,022:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              bd82
2025-03-29 18:30:14,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:14,053:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:14,084:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:14,084:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:30:14,084:INFO:setup() successfully completed in 0.45s...............
2025-03-29 18:30:14,084:INFO:Initializing create_model()
2025-03-29 18:30:14,084:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a3ffa0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:30:14,084:INFO:Checking exceptions
2025-03-29 18:30:14,095:INFO:Importing libraries
2025-03-29 18:30:14,095:INFO:Copying training dataset
2025-03-29 18:30:14,098:INFO:Defining folds
2025-03-29 18:30:14,098:INFO:Declaring metric variables
2025-03-29 18:30:14,098:INFO:Importing untrained model
2025-03-29 18:30:14,099:INFO:Logistic Regression Imported successfully
2025-03-29 18:30:14,099:INFO:Starting cross validation
2025-03-29 18:30:14,099:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:30:17,580:INFO:Calculating mean and std
2025-03-29 18:30:17,581:INFO:Creating metrics dataframe
2025-03-29 18:30:17,584:INFO:Finalizing model
2025-03-29 18:30:17,654:INFO:Uploading results into container
2025-03-29 18:30:17,655:INFO:Uploading model into container now
2025-03-29 18:30:17,666:INFO:_master_model_container: 1
2025-03-29 18:30:17,666:INFO:_display_container: 2
2025-03-29 18:30:17,666:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-29 18:30:17,666:INFO:create_model() successfully completed......................................
2025-03-29 18:30:17,755:INFO:Initializing create_model()
2025-03-29 18:30:17,755:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303a3ffa0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:30:17,755:INFO:Checking exceptions
2025-03-29 18:30:17,756:INFO:Importing libraries
2025-03-29 18:30:17,756:INFO:Copying training dataset
2025-03-29 18:30:17,758:INFO:Defining folds
2025-03-29 18:30:17,758:INFO:Declaring metric variables
2025-03-29 18:30:17,758:INFO:Importing untrained model
2025-03-29 18:30:17,758:INFO:Decision Tree Classifier Imported successfully
2025-03-29 18:30:17,758:INFO:Starting cross validation
2025-03-29 18:30:17,758:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:30:17,935:INFO:Calculating mean and std
2025-03-29 18:30:17,936:INFO:Creating metrics dataframe
2025-03-29 18:30:17,937:INFO:Finalizing model
2025-03-29 18:30:17,970:INFO:Uploading results into container
2025-03-29 18:30:17,971:INFO:Uploading model into container now
2025-03-29 18:30:17,974:INFO:_master_model_container: 2
2025-03-29 18:30:17,974:INFO:_display_container: 3
2025-03-29 18:30:17,975:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-03-29 18:30:17,975:INFO:create_model() successfully completed......................................
2025-03-29 18:30:18,035:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-03-29 18:30:18,036:INFO:Initializing save_model()
2025-03-29 18:30:18,036:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-29 18:30:18,036:INFO:Adding model into prep_pipe
2025-03-29 18:30:18,038:INFO:./data/processed/final_model.pkl saved in current working directory
2025-03-29 18:30:18,040:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-03-29 18:30:18,040:INFO:save_model() successfully completed......................................
2025-03-29 18:30:22,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:22,792:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:22,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:22,793:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:30:23,169:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:30:23,435:INFO:Initializing load_model()
2025-03-29 18:30:23,435:INFO:load_model(model_name=./data/processed/final_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-29 18:36:23,113:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:23,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:23,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:23,114:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:23,477:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:36:23,880:INFO:PyCaret ClassificationExperiment
2025-03-29 18:36:23,880:INFO:Logging name: clf-default-name
2025-03-29 18:36:23,880:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-29 18:36:23,880:INFO:version 3.0.0
2025-03-29 18:36:23,880:INFO:Initializing setup()
2025-03-29 18:36:23,880:INFO:self.USI: 10fc
2025-03-29 18:36:23,880:INFO:self._variable_keys: {'y_train', 'fold_generator', 'html_param', 'fold_shuffle_param', 'gpu_param', '_ml_usecase', 'idx', 'is_multiclass', 'exp_name_log', 'X_test', 'X_train', 'gpu_n_jobs_param', 'seed', 'logging_param', 'y', 'memory', 'exp_id', 'y_test', 'X', 'log_plots_param', '_available_plots', 'fold_groups_param', 'target_param', 'pipeline', 'data', 'USI', 'n_jobs_param', 'fix_imbalance'}
2025-03-29 18:36:23,880:INFO:Checking environment
2025-03-29 18:36:23,880:INFO:python_version: 3.10.16
2025-03-29 18:36:23,880:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-03-29 18:36:23,880:INFO:machine: arm64
2025-03-29 18:36:23,892:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-03-29 18:36:23,892:INFO:Memory: svmem(total=17179869184, available=6725287936, percent=60.9, used=7984693248, free=609370112, active=6125617152, inactive=5876219904, wired=1859076096)
2025-03-29 18:36:23,892:INFO:Physical Core: 8
2025-03-29 18:36:23,892:INFO:Logical Core: 8
2025-03-29 18:36:23,892:INFO:Checking libraries
2025-03-29 18:36:23,892:INFO:System:
2025-03-29 18:36:23,892:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-03-29 18:36:23,892:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-03-29 18:36:23,892:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-03-29 18:36:23,892:INFO:PyCaret required dependencies:
2025-03-29 18:36:23,912:INFO:                 pip: 25.0.1
2025-03-29 18:36:23,912:INFO:          setuptools: 75.8.2
2025-03-29 18:36:23,912:INFO:             pycaret: 3.0.0
2025-03-29 18:36:23,912:INFO:             IPython: 8.34.0
2025-03-29 18:36:23,912:INFO:          ipywidgets: 8.1.5
2025-03-29 18:36:23,912:INFO:                tqdm: 4.67.1
2025-03-29 18:36:23,912:INFO:               numpy: 1.24.4
2025-03-29 18:36:23,912:INFO:              pandas: 1.5.3
2025-03-29 18:36:23,912:INFO:              jinja2: 3.1.6
2025-03-29 18:36:23,912:INFO:               scipy: 1.9.3
2025-03-29 18:36:23,912:INFO:              joblib: 1.2.0
2025-03-29 18:36:23,912:INFO:             sklearn: 1.1.3
2025-03-29 18:36:23,912:INFO:                pyod: 2.0.4
2025-03-29 18:36:23,912:INFO:            imblearn: 0.12.4
2025-03-29 18:36:23,912:INFO:   category_encoders: 2.7.0
2025-03-29 18:36:23,912:INFO:            lightgbm: 4.6.0
2025-03-29 18:36:23,912:INFO:               numba: 0.61.0
2025-03-29 18:36:23,912:INFO:            requests: 2.32.3
2025-03-29 18:36:23,912:INFO:          matplotlib: 3.10.1
2025-03-29 18:36:23,912:INFO:          scikitplot: 0.3.7
2025-03-29 18:36:23,912:INFO:         yellowbrick: 1.5
2025-03-29 18:36:23,912:INFO:              plotly: 5.24.1
2025-03-29 18:36:23,912:INFO:             kaleido: 0.2.1
2025-03-29 18:36:23,912:INFO:         statsmodels: 0.14.4
2025-03-29 18:36:23,912:INFO:              sktime: 0.36.0
2025-03-29 18:36:23,912:INFO:               tbats: 1.1.3
2025-03-29 18:36:23,912:INFO:            pmdarima: 2.0.4
2025-03-29 18:36:23,912:INFO:              psutil: 7.0.0
2025-03-29 18:36:23,912:INFO:PyCaret optional dependencies:
2025-03-29 18:36:24,029:INFO:                shap: Not installed
2025-03-29 18:36:24,029:INFO:           interpret: Not installed
2025-03-29 18:36:24,029:INFO:                umap: Not installed
2025-03-29 18:36:24,029:INFO:    pandas_profiling: Not installed
2025-03-29 18:36:24,029:INFO:  explainerdashboard: Not installed
2025-03-29 18:36:24,029:INFO:             autoviz: Not installed
2025-03-29 18:36:24,029:INFO:           fairlearn: Not installed
2025-03-29 18:36:24,029:INFO:             xgboost: Not installed
2025-03-29 18:36:24,029:INFO:            catboost: Not installed
2025-03-29 18:36:24,029:INFO:              kmodes: Not installed
2025-03-29 18:36:24,029:INFO:             mlxtend: Not installed
2025-03-29 18:36:24,029:INFO:       statsforecast: Not installed
2025-03-29 18:36:24,029:INFO:        tune_sklearn: Not installed
2025-03-29 18:36:24,029:INFO:                 ray: Not installed
2025-03-29 18:36:24,030:INFO:            hyperopt: Not installed
2025-03-29 18:36:24,030:INFO:              optuna: Not installed
2025-03-29 18:36:24,030:INFO:               skopt: Not installed
2025-03-29 18:36:24,030:INFO:              mlflow: 2.21.2
2025-03-29 18:36:24,030:INFO:              gradio: Not installed
2025-03-29 18:36:24,030:INFO:             fastapi: 0.115.12
2025-03-29 18:36:24,030:INFO:             uvicorn: 0.34.0
2025-03-29 18:36:24,030:INFO:              m2cgen: Not installed
2025-03-29 18:36:24,030:INFO:           evidently: Not installed
2025-03-29 18:36:24,030:INFO:               fugue: Not installed
2025-03-29 18:36:24,030:INFO:           streamlit: 1.44.0
2025-03-29 18:36:24,030:INFO:             prophet: Not installed
2025-03-29 18:36:24,030:INFO:None
2025-03-29 18:36:24,030:INFO:Set up data.
2025-03-29 18:36:24,033:INFO:Set up train/test split.
2025-03-29 18:36:24,037:INFO:Set up index.
2025-03-29 18:36:24,037:INFO:Set up folding strategy.
2025-03-29 18:36:24,037:INFO:Assigning column types.
2025-03-29 18:36:24,038:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 18:36:24,056:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:36:24,057:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:36:24,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,089:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:36:24,090:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:36:24,101:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,101:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,101:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 18:36:24,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:36:24,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,149:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:36:24,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,160:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-29 18:36:24,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,219:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,219:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,220:INFO:Preparing preprocessing pipeline...
2025-03-29 18:36:24,221:INFO:Set up simple imputation.
2025-03-29 18:36:24,230:INFO:Finished creating preprocessing pipeline.
2025-03-29 18:36:24,232:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-03-29 18:36:24,232:INFO:Creating final display dataframe.
2025-03-29 18:36:24,258:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              10fc
2025-03-29 18:36:24,290:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,290:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,320:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:36:24,321:INFO:setup() successfully completed in 0.44s...............
2025-03-29 18:36:24,321:INFO:Initializing create_model()
2025-03-29 18:36:24,321:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16dd47c40>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:36:24,321:INFO:Checking exceptions
2025-03-29 18:36:24,332:INFO:Importing libraries
2025-03-29 18:36:24,333:INFO:Copying training dataset
2025-03-29 18:36:24,335:INFO:Defining folds
2025-03-29 18:36:24,335:INFO:Declaring metric variables
2025-03-29 18:36:24,336:INFO:Importing untrained model
2025-03-29 18:36:24,336:INFO:Logistic Regression Imported successfully
2025-03-29 18:36:24,336:INFO:Starting cross validation
2025-03-29 18:36:24,336:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:36:27,795:INFO:Calculating mean and std
2025-03-29 18:36:27,796:INFO:Creating metrics dataframe
2025-03-29 18:36:27,798:INFO:Finalizing model
2025-03-29 18:36:27,881:INFO:Uploading results into container
2025-03-29 18:36:27,881:INFO:Uploading model into container now
2025-03-29 18:36:27,887:INFO:_master_model_container: 1
2025-03-29 18:36:27,887:INFO:_display_container: 2
2025-03-29 18:36:27,887:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-29 18:36:27,887:INFO:create_model() successfully completed......................................
2025-03-29 18:36:27,979:INFO:Initializing create_model()
2025-03-29 18:36:27,979:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16dd47c40>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:36:27,979:INFO:Checking exceptions
2025-03-29 18:36:27,980:INFO:Importing libraries
2025-03-29 18:36:27,980:INFO:Copying training dataset
2025-03-29 18:36:27,982:INFO:Defining folds
2025-03-29 18:36:27,982:INFO:Declaring metric variables
2025-03-29 18:36:27,982:INFO:Importing untrained model
2025-03-29 18:36:27,982:INFO:Decision Tree Classifier Imported successfully
2025-03-29 18:36:27,982:INFO:Starting cross validation
2025-03-29 18:36:27,983:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:36:28,139:INFO:Calculating mean and std
2025-03-29 18:36:28,140:INFO:Creating metrics dataframe
2025-03-29 18:36:28,142:INFO:Finalizing model
2025-03-29 18:36:28,177:INFO:Uploading results into container
2025-03-29 18:36:28,177:INFO:Uploading model into container now
2025-03-29 18:36:28,181:INFO:_master_model_container: 2
2025-03-29 18:36:28,181:INFO:_display_container: 3
2025-03-29 18:36:28,181:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-03-29 18:36:28,181:INFO:create_model() successfully completed......................................
2025-03-29 18:36:28,242:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-03-29 18:36:28,244:INFO:Initializing save_model()
2025-03-29 18:36:28,244:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-29 18:36:28,244:INFO:Adding model into prep_pipe
2025-03-29 18:36:28,246:INFO:./data/processed/final_model.pkl saved in current working directory
2025-03-29 18:36:28,248:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-03-29 18:36:28,248:INFO:save_model() successfully completed......................................
2025-03-29 18:36:33,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:33,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:33,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:33,025:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:36:33,392:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:36:33,660:INFO:Initializing load_model()
2025-03-29 18:36:33,660:INFO:load_model(model_name=./data/processed/final_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-29 18:37:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:09,992:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:10,360:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:37:10,767:INFO:PyCaret ClassificationExperiment
2025-03-29 18:37:10,767:INFO:Logging name: clf-default-name
2025-03-29 18:37:10,767:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-29 18:37:10,767:INFO:version 3.0.0
2025-03-29 18:37:10,767:INFO:Initializing setup()
2025-03-29 18:37:10,767:INFO:self.USI: 5b5b
2025-03-29 18:37:10,767:INFO:self._variable_keys: {'_ml_usecase', 'exp_name_log', 'X_train', 'n_jobs_param', 'fold_groups_param', 'is_multiclass', 'y', '_available_plots', 'seed', 'fold_shuffle_param', 'target_param', 'gpu_n_jobs_param', 'idx', 'y_train', 'X_test', 'logging_param', 'pipeline', 'fold_generator', 'memory', 'y_test', 'X', 'data', 'log_plots_param', 'html_param', 'fix_imbalance', 'USI', 'gpu_param', 'exp_id'}
2025-03-29 18:37:10,767:INFO:Checking environment
2025-03-29 18:37:10,767:INFO:python_version: 3.10.16
2025-03-29 18:37:10,767:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-03-29 18:37:10,767:INFO:machine: arm64
2025-03-29 18:37:10,779:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-03-29 18:37:10,780:INFO:Memory: svmem(total=17179869184, available=6748897280, percent=60.7, used=7744552960, free=918585344, active=5845450752, inactive=5810421760, wired=1899102208)
2025-03-29 18:37:10,780:INFO:Physical Core: 8
2025-03-29 18:37:10,780:INFO:Logical Core: 8
2025-03-29 18:37:10,780:INFO:Checking libraries
2025-03-29 18:37:10,780:INFO:System:
2025-03-29 18:37:10,780:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-03-29 18:37:10,780:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-03-29 18:37:10,780:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-03-29 18:37:10,780:INFO:PyCaret required dependencies:
2025-03-29 18:37:10,800:INFO:                 pip: 25.0.1
2025-03-29 18:37:10,800:INFO:          setuptools: 75.8.2
2025-03-29 18:37:10,800:INFO:             pycaret: 3.0.0
2025-03-29 18:37:10,800:INFO:             IPython: 8.34.0
2025-03-29 18:37:10,800:INFO:          ipywidgets: 8.1.5
2025-03-29 18:37:10,800:INFO:                tqdm: 4.67.1
2025-03-29 18:37:10,800:INFO:               numpy: 1.24.4
2025-03-29 18:37:10,800:INFO:              pandas: 1.5.3
2025-03-29 18:37:10,800:INFO:              jinja2: 3.1.6
2025-03-29 18:37:10,800:INFO:               scipy: 1.9.3
2025-03-29 18:37:10,800:INFO:              joblib: 1.2.0
2025-03-29 18:37:10,800:INFO:             sklearn: 1.1.3
2025-03-29 18:37:10,800:INFO:                pyod: 2.0.4
2025-03-29 18:37:10,800:INFO:            imblearn: 0.12.4
2025-03-29 18:37:10,800:INFO:   category_encoders: 2.7.0
2025-03-29 18:37:10,800:INFO:            lightgbm: 4.6.0
2025-03-29 18:37:10,800:INFO:               numba: 0.61.0
2025-03-29 18:37:10,800:INFO:            requests: 2.32.3
2025-03-29 18:37:10,800:INFO:          matplotlib: 3.10.1
2025-03-29 18:37:10,800:INFO:          scikitplot: 0.3.7
2025-03-29 18:37:10,800:INFO:         yellowbrick: 1.5
2025-03-29 18:37:10,800:INFO:              plotly: 5.24.1
2025-03-29 18:37:10,800:INFO:             kaleido: 0.2.1
2025-03-29 18:37:10,800:INFO:         statsmodels: 0.14.4
2025-03-29 18:37:10,800:INFO:              sktime: 0.36.0
2025-03-29 18:37:10,800:INFO:               tbats: 1.1.3
2025-03-29 18:37:10,800:INFO:            pmdarima: 2.0.4
2025-03-29 18:37:10,800:INFO:              psutil: 7.0.0
2025-03-29 18:37:10,800:INFO:PyCaret optional dependencies:
2025-03-29 18:37:10,918:INFO:                shap: Not installed
2025-03-29 18:37:10,918:INFO:           interpret: Not installed
2025-03-29 18:37:10,918:INFO:                umap: Not installed
2025-03-29 18:37:10,918:INFO:    pandas_profiling: Not installed
2025-03-29 18:37:10,918:INFO:  explainerdashboard: Not installed
2025-03-29 18:37:10,918:INFO:             autoviz: Not installed
2025-03-29 18:37:10,918:INFO:           fairlearn: Not installed
2025-03-29 18:37:10,918:INFO:             xgboost: Not installed
2025-03-29 18:37:10,918:INFO:            catboost: Not installed
2025-03-29 18:37:10,918:INFO:              kmodes: Not installed
2025-03-29 18:37:10,918:INFO:             mlxtend: Not installed
2025-03-29 18:37:10,918:INFO:       statsforecast: Not installed
2025-03-29 18:37:10,918:INFO:        tune_sklearn: Not installed
2025-03-29 18:37:10,918:INFO:                 ray: Not installed
2025-03-29 18:37:10,918:INFO:            hyperopt: Not installed
2025-03-29 18:37:10,918:INFO:              optuna: Not installed
2025-03-29 18:37:10,918:INFO:               skopt: Not installed
2025-03-29 18:37:10,918:INFO:              mlflow: 2.21.2
2025-03-29 18:37:10,918:INFO:              gradio: Not installed
2025-03-29 18:37:10,918:INFO:             fastapi: 0.115.12
2025-03-29 18:37:10,918:INFO:             uvicorn: 0.34.0
2025-03-29 18:37:10,918:INFO:              m2cgen: Not installed
2025-03-29 18:37:10,918:INFO:           evidently: Not installed
2025-03-29 18:37:10,918:INFO:               fugue: Not installed
2025-03-29 18:37:10,918:INFO:           streamlit: 1.44.0
2025-03-29 18:37:10,918:INFO:             prophet: Not installed
2025-03-29 18:37:10,918:INFO:None
2025-03-29 18:37:10,918:INFO:Set up data.
2025-03-29 18:37:10,921:INFO:Set up train/test split.
2025-03-29 18:37:10,925:INFO:Set up index.
2025-03-29 18:37:10,925:INFO:Set up folding strategy.
2025-03-29 18:37:10,925:INFO:Assigning column types.
2025-03-29 18:37:10,927:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 18:37:10,944:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:37:10,946:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:37:10,959:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:10,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:10,977:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:37:10,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:37:10,989:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:10,989:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:10,989:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 18:37:11,008:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:37:11,019:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,019:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,037:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:37:11,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,049:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-29 18:37:11,079:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,079:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,109:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,109:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,110:INFO:Preparing preprocessing pipeline...
2025-03-29 18:37:11,110:INFO:Set up simple imputation.
2025-03-29 18:37:11,120:INFO:Finished creating preprocessing pipeline.
2025-03-29 18:37:11,122:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-03-29 18:37:11,123:INFO:Creating final display dataframe.
2025-03-29 18:37:11,149:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              5b5b
2025-03-29 18:37:11,180:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,180:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,210:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:37:11,210:INFO:setup() successfully completed in 0.44s...............
2025-03-29 18:37:11,210:INFO:Initializing create_model()
2025-03-29 18:37:11,210:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100f5fdf0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:37:11,210:INFO:Checking exceptions
2025-03-29 18:37:11,222:INFO:Importing libraries
2025-03-29 18:37:11,222:INFO:Copying training dataset
2025-03-29 18:37:11,225:INFO:Defining folds
2025-03-29 18:37:11,225:INFO:Declaring metric variables
2025-03-29 18:37:11,225:INFO:Importing untrained model
2025-03-29 18:37:11,225:INFO:Logistic Regression Imported successfully
2025-03-29 18:37:11,226:INFO:Starting cross validation
2025-03-29 18:37:11,226:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:37:14,633:INFO:Calculating mean and std
2025-03-29 18:37:14,634:INFO:Creating metrics dataframe
2025-03-29 18:37:14,637:INFO:Finalizing model
2025-03-29 18:37:14,703:INFO:Uploading results into container
2025-03-29 18:37:14,703:INFO:Uploading model into container now
2025-03-29 18:37:14,713:INFO:_master_model_container: 1
2025-03-29 18:37:14,713:INFO:_display_container: 2
2025-03-29 18:37:14,713:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-29 18:37:14,713:INFO:create_model() successfully completed......................................
2025-03-29 18:37:14,828:INFO:Initializing create_model()
2025-03-29 18:37:14,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x100f5fdf0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:37:14,828:INFO:Checking exceptions
2025-03-29 18:37:14,829:INFO:Importing libraries
2025-03-29 18:37:14,829:INFO:Copying training dataset
2025-03-29 18:37:14,831:INFO:Defining folds
2025-03-29 18:37:14,831:INFO:Declaring metric variables
2025-03-29 18:37:14,831:INFO:Importing untrained model
2025-03-29 18:37:14,831:INFO:Decision Tree Classifier Imported successfully
2025-03-29 18:37:14,831:INFO:Starting cross validation
2025-03-29 18:37:14,832:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:37:14,986:INFO:Calculating mean and std
2025-03-29 18:37:14,986:INFO:Creating metrics dataframe
2025-03-29 18:37:14,987:INFO:Finalizing model
2025-03-29 18:37:15,021:INFO:Uploading results into container
2025-03-29 18:37:15,021:INFO:Uploading model into container now
2025-03-29 18:37:15,025:INFO:_master_model_container: 2
2025-03-29 18:37:15,025:INFO:_display_container: 3
2025-03-29 18:37:15,025:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-03-29 18:37:15,025:INFO:create_model() successfully completed......................................
2025-03-29 18:37:15,086:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-03-29 18:37:15,088:INFO:Initializing save_model()
2025-03-29 18:37:15,088:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-29 18:37:15,088:INFO:Adding model into prep_pipe
2025-03-29 18:37:15,090:INFO:./data/processed/final_model.pkl saved in current working directory
2025-03-29 18:37:15,092:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-03-29 18:37:15,092:INFO:save_model() successfully completed......................................
2025-03-29 18:37:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:19,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:37:20,257:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:37:20,532:INFO:Initializing load_model()
2025-03-29 18:37:20,532:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-03-29 18:37:20,617:INFO:Initializing predict_model()
2025-03-29 18:37:20,617:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3065432b0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1302b1c60>)
2025-03-29 18:37:20,617:INFO:Checking exceptions
2025-03-29 18:37:20,617:INFO:Preloading libraries
2025-03-29 18:37:20,617:INFO:Set up data.
2025-03-29 18:41:57,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:41:57,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:41:57,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:41:57,969:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:41:58,341:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:41:58,746:INFO:PyCaret ClassificationExperiment
2025-03-29 18:41:58,746:INFO:Logging name: clf-default-name
2025-03-29 18:41:58,746:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-29 18:41:58,746:INFO:version 3.0.0
2025-03-29 18:41:58,746:INFO:Initializing setup()
2025-03-29 18:41:58,746:INFO:self.USI: cbb1
2025-03-29 18:41:58,746:INFO:self._variable_keys: {'seed', 'logging_param', 'exp_name_log', '_ml_usecase', 'fold_groups_param', 'fix_imbalance', 'fold_shuffle_param', 'X_train', 'n_jobs_param', '_available_plots', 'y', 'fold_generator', 'y_test', 'idx', 'data', 'gpu_param', 'USI', 'pipeline', 'target_param', 'exp_id', 'X_test', 'log_plots_param', 'memory', 'y_train', 'is_multiclass', 'html_param', 'X', 'gpu_n_jobs_param'}
2025-03-29 18:41:58,746:INFO:Checking environment
2025-03-29 18:41:58,746:INFO:python_version: 3.10.16
2025-03-29 18:41:58,746:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-03-29 18:41:58,746:INFO:machine: arm64
2025-03-29 18:41:58,758:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-03-29 18:41:58,758:INFO:Memory: svmem(total=17179869184, available=6889603072, percent=59.9, used=7587823616, free=1169866752, active=5729189888, inactive=5534892032, wired=1858633728)
2025-03-29 18:41:58,758:INFO:Physical Core: 8
2025-03-29 18:41:58,758:INFO:Logical Core: 8
2025-03-29 18:41:58,758:INFO:Checking libraries
2025-03-29 18:41:58,758:INFO:System:
2025-03-29 18:41:58,758:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-03-29 18:41:58,758:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-03-29 18:41:58,758:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-03-29 18:41:58,758:INFO:PyCaret required dependencies:
2025-03-29 18:41:58,778:INFO:                 pip: 25.0.1
2025-03-29 18:41:58,778:INFO:          setuptools: 75.8.2
2025-03-29 18:41:58,778:INFO:             pycaret: 3.0.0
2025-03-29 18:41:58,778:INFO:             IPython: 8.34.0
2025-03-29 18:41:58,778:INFO:          ipywidgets: 8.1.5
2025-03-29 18:41:58,778:INFO:                tqdm: 4.67.1
2025-03-29 18:41:58,778:INFO:               numpy: 1.24.4
2025-03-29 18:41:58,778:INFO:              pandas: 1.5.3
2025-03-29 18:41:58,778:INFO:              jinja2: 3.1.6
2025-03-29 18:41:58,778:INFO:               scipy: 1.9.3
2025-03-29 18:41:58,778:INFO:              joblib: 1.2.0
2025-03-29 18:41:58,778:INFO:             sklearn: 1.1.3
2025-03-29 18:41:58,778:INFO:                pyod: 2.0.4
2025-03-29 18:41:58,778:INFO:            imblearn: 0.12.4
2025-03-29 18:41:58,778:INFO:   category_encoders: 2.7.0
2025-03-29 18:41:58,778:INFO:            lightgbm: 4.6.0
2025-03-29 18:41:58,778:INFO:               numba: 0.61.0
2025-03-29 18:41:58,778:INFO:            requests: 2.32.3
2025-03-29 18:41:58,778:INFO:          matplotlib: 3.10.1
2025-03-29 18:41:58,778:INFO:          scikitplot: 0.3.7
2025-03-29 18:41:58,778:INFO:         yellowbrick: 1.5
2025-03-29 18:41:58,778:INFO:              plotly: 5.24.1
2025-03-29 18:41:58,778:INFO:             kaleido: 0.2.1
2025-03-29 18:41:58,778:INFO:         statsmodels: 0.14.4
2025-03-29 18:41:58,778:INFO:              sktime: 0.36.0
2025-03-29 18:41:58,778:INFO:               tbats: 1.1.3
2025-03-29 18:41:58,778:INFO:            pmdarima: 2.0.4
2025-03-29 18:41:58,778:INFO:              psutil: 7.0.0
2025-03-29 18:41:58,778:INFO:PyCaret optional dependencies:
2025-03-29 18:41:58,881:INFO:                shap: Not installed
2025-03-29 18:41:58,881:INFO:           interpret: Not installed
2025-03-29 18:41:58,881:INFO:                umap: Not installed
2025-03-29 18:41:58,881:INFO:    pandas_profiling: Not installed
2025-03-29 18:41:58,881:INFO:  explainerdashboard: Not installed
2025-03-29 18:41:58,881:INFO:             autoviz: Not installed
2025-03-29 18:41:58,881:INFO:           fairlearn: Not installed
2025-03-29 18:41:58,881:INFO:             xgboost: Not installed
2025-03-29 18:41:58,881:INFO:            catboost: Not installed
2025-03-29 18:41:58,881:INFO:              kmodes: Not installed
2025-03-29 18:41:58,881:INFO:             mlxtend: Not installed
2025-03-29 18:41:58,881:INFO:       statsforecast: Not installed
2025-03-29 18:41:58,881:INFO:        tune_sklearn: Not installed
2025-03-29 18:41:58,881:INFO:                 ray: Not installed
2025-03-29 18:41:58,881:INFO:            hyperopt: Not installed
2025-03-29 18:41:58,881:INFO:              optuna: Not installed
2025-03-29 18:41:58,881:INFO:               skopt: Not installed
2025-03-29 18:41:58,881:INFO:              mlflow: 2.21.2
2025-03-29 18:41:58,881:INFO:              gradio: Not installed
2025-03-29 18:41:58,881:INFO:             fastapi: 0.115.12
2025-03-29 18:41:58,881:INFO:             uvicorn: 0.34.0
2025-03-29 18:41:58,881:INFO:              m2cgen: Not installed
2025-03-29 18:41:58,881:INFO:           evidently: Not installed
2025-03-29 18:41:58,881:INFO:               fugue: Not installed
2025-03-29 18:41:58,881:INFO:           streamlit: 1.44.0
2025-03-29 18:41:58,881:INFO:             prophet: Not installed
2025-03-29 18:41:58,881:INFO:None
2025-03-29 18:41:58,881:INFO:Set up data.
2025-03-29 18:41:58,884:INFO:Set up train/test split.
2025-03-29 18:41:58,888:INFO:Set up index.
2025-03-29 18:41:58,888:INFO:Set up folding strategy.
2025-03-29 18:41:58,888:INFO:Assigning column types.
2025-03-29 18:41:58,889:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 18:41:58,908:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:41:58,909:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:41:58,921:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:58,921:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:58,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:41:58,940:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:41:58,951:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:58,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:58,951:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 18:41:58,970:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:41:58,981:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:58,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:58,999:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:41:59,011:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,011:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,011:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-29 18:41:59,041:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,071:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,072:INFO:Preparing preprocessing pipeline...
2025-03-29 18:41:59,072:INFO:Set up simple imputation.
2025-03-29 18:41:59,082:INFO:Finished creating preprocessing pipeline.
2025-03-29 18:41:59,083:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-03-29 18:41:59,083:INFO:Creating final display dataframe.
2025-03-29 18:41:59,110:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              cbb1
2025-03-29 18:41:59,142:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,142:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,173:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,173:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:41:59,173:INFO:setup() successfully completed in 0.43s...............
2025-03-29 18:41:59,173:INFO:Initializing create_model()
2025-03-29 18:41:59,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30307bfa0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:41:59,173:INFO:Checking exceptions
2025-03-29 18:41:59,185:INFO:Importing libraries
2025-03-29 18:41:59,185:INFO:Copying training dataset
2025-03-29 18:41:59,188:INFO:Defining folds
2025-03-29 18:41:59,188:INFO:Declaring metric variables
2025-03-29 18:41:59,188:INFO:Importing untrained model
2025-03-29 18:41:59,189:INFO:Logistic Regression Imported successfully
2025-03-29 18:41:59,189:INFO:Starting cross validation
2025-03-29 18:41:59,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:42:02,544:INFO:Calculating mean and std
2025-03-29 18:42:02,544:INFO:Creating metrics dataframe
2025-03-29 18:42:02,547:INFO:Finalizing model
2025-03-29 18:42:02,614:INFO:Uploading results into container
2025-03-29 18:42:02,614:INFO:Uploading model into container now
2025-03-29 18:42:02,619:INFO:_master_model_container: 1
2025-03-29 18:42:02,619:INFO:_display_container: 2
2025-03-29 18:42:02,619:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-29 18:42:02,619:INFO:create_model() successfully completed......................................
2025-03-29 18:42:02,703:INFO:Initializing create_model()
2025-03-29 18:42:02,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30307bfa0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:42:02,703:INFO:Checking exceptions
2025-03-29 18:42:02,704:INFO:Importing libraries
2025-03-29 18:42:02,704:INFO:Copying training dataset
2025-03-29 18:42:02,706:INFO:Defining folds
2025-03-29 18:42:02,706:INFO:Declaring metric variables
2025-03-29 18:42:02,706:INFO:Importing untrained model
2025-03-29 18:42:02,706:INFO:Decision Tree Classifier Imported successfully
2025-03-29 18:42:02,706:INFO:Starting cross validation
2025-03-29 18:42:02,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:42:02,916:INFO:Calculating mean and std
2025-03-29 18:42:02,916:INFO:Creating metrics dataframe
2025-03-29 18:42:02,917:INFO:Finalizing model
2025-03-29 18:42:02,949:INFO:Uploading results into container
2025-03-29 18:42:02,950:INFO:Uploading model into container now
2025-03-29 18:42:02,953:INFO:_master_model_container: 2
2025-03-29 18:42:02,954:INFO:_display_container: 3
2025-03-29 18:42:02,954:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-03-29 18:42:02,954:INFO:create_model() successfully completed......................................
2025-03-29 18:42:03,013:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-03-29 18:42:03,015:INFO:Initializing save_model()
2025-03-29 18:42:03,015:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-29 18:42:03,015:INFO:Adding model into prep_pipe
2025-03-29 18:42:03,017:INFO:./data/processed/final_model.pkl saved in current working directory
2025-03-29 18:42:03,019:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-03-29 18:42:03,019:INFO:save_model() successfully completed......................................
2025-03-29 18:42:07,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:42:07,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:42:07,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:42:07,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:42:08,146:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:44:06,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:06,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:06,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:06,165:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:06,533:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:44:06,939:INFO:PyCaret ClassificationExperiment
2025-03-29 18:44:06,940:INFO:Logging name: clf-default-name
2025-03-29 18:44:06,940:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-29 18:44:06,940:INFO:version 3.0.0
2025-03-29 18:44:06,940:INFO:Initializing setup()
2025-03-29 18:44:06,940:INFO:self.USI: b9ab
2025-03-29 18:44:06,940:INFO:self._variable_keys: {'X_test', 'idx', 'data', 'logging_param', 'fold_generator', '_ml_usecase', 'X', '_available_plots', 'fix_imbalance', 'exp_id', 'n_jobs_param', 'USI', 'fold_groups_param', 'fold_shuffle_param', 'pipeline', 'gpu_param', 'gpu_n_jobs_param', 'y', 'is_multiclass', 'exp_name_log', 'html_param', 'log_plots_param', 'memory', 'y_train', 'target_param', 'seed', 'X_train', 'y_test'}
2025-03-29 18:44:06,940:INFO:Checking environment
2025-03-29 18:44:06,940:INFO:python_version: 3.10.16
2025-03-29 18:44:06,940:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-03-29 18:44:06,940:INFO:machine: arm64
2025-03-29 18:44:06,951:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-03-29 18:44:06,952:INFO:Memory: svmem(total=17179869184, available=6858653696, percent=60.1, used=7608303616, free=1130135552, active=5739020288, inactive=5703991296, wired=1869283328)
2025-03-29 18:44:06,952:INFO:Physical Core: 8
2025-03-29 18:44:06,952:INFO:Logical Core: 8
2025-03-29 18:44:06,952:INFO:Checking libraries
2025-03-29 18:44:06,952:INFO:System:
2025-03-29 18:44:06,952:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-03-29 18:44:06,952:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-03-29 18:44:06,952:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-03-29 18:44:06,952:INFO:PyCaret required dependencies:
2025-03-29 18:44:06,971:INFO:                 pip: 25.0.1
2025-03-29 18:44:06,971:INFO:          setuptools: 75.8.2
2025-03-29 18:44:06,971:INFO:             pycaret: 3.0.0
2025-03-29 18:44:06,971:INFO:             IPython: 8.34.0
2025-03-29 18:44:06,971:INFO:          ipywidgets: 8.1.5
2025-03-29 18:44:06,971:INFO:                tqdm: 4.67.1
2025-03-29 18:44:06,971:INFO:               numpy: 1.24.4
2025-03-29 18:44:06,971:INFO:              pandas: 1.5.3
2025-03-29 18:44:06,972:INFO:              jinja2: 3.1.6
2025-03-29 18:44:06,972:INFO:               scipy: 1.9.3
2025-03-29 18:44:06,972:INFO:              joblib: 1.2.0
2025-03-29 18:44:06,972:INFO:             sklearn: 1.1.3
2025-03-29 18:44:06,972:INFO:                pyod: 2.0.4
2025-03-29 18:44:06,972:INFO:            imblearn: 0.12.4
2025-03-29 18:44:06,972:INFO:   category_encoders: 2.7.0
2025-03-29 18:44:06,972:INFO:            lightgbm: 4.6.0
2025-03-29 18:44:06,972:INFO:               numba: 0.61.0
2025-03-29 18:44:06,972:INFO:            requests: 2.32.3
2025-03-29 18:44:06,972:INFO:          matplotlib: 3.10.1
2025-03-29 18:44:06,972:INFO:          scikitplot: 0.3.7
2025-03-29 18:44:06,972:INFO:         yellowbrick: 1.5
2025-03-29 18:44:06,972:INFO:              plotly: 5.24.1
2025-03-29 18:44:06,972:INFO:             kaleido: 0.2.1
2025-03-29 18:44:06,972:INFO:         statsmodels: 0.14.4
2025-03-29 18:44:06,972:INFO:              sktime: 0.36.0
2025-03-29 18:44:06,972:INFO:               tbats: 1.1.3
2025-03-29 18:44:06,972:INFO:            pmdarima: 2.0.4
2025-03-29 18:44:06,972:INFO:              psutil: 7.0.0
2025-03-29 18:44:06,972:INFO:PyCaret optional dependencies:
2025-03-29 18:44:07,074:INFO:                shap: Not installed
2025-03-29 18:44:07,074:INFO:           interpret: Not installed
2025-03-29 18:44:07,074:INFO:                umap: Not installed
2025-03-29 18:44:07,074:INFO:    pandas_profiling: Not installed
2025-03-29 18:44:07,074:INFO:  explainerdashboard: Not installed
2025-03-29 18:44:07,074:INFO:             autoviz: Not installed
2025-03-29 18:44:07,074:INFO:           fairlearn: Not installed
2025-03-29 18:44:07,074:INFO:             xgboost: Not installed
2025-03-29 18:44:07,074:INFO:            catboost: Not installed
2025-03-29 18:44:07,074:INFO:              kmodes: Not installed
2025-03-29 18:44:07,074:INFO:             mlxtend: Not installed
2025-03-29 18:44:07,074:INFO:       statsforecast: Not installed
2025-03-29 18:44:07,074:INFO:        tune_sklearn: Not installed
2025-03-29 18:44:07,074:INFO:                 ray: Not installed
2025-03-29 18:44:07,074:INFO:            hyperopt: Not installed
2025-03-29 18:44:07,074:INFO:              optuna: Not installed
2025-03-29 18:44:07,074:INFO:               skopt: Not installed
2025-03-29 18:44:07,074:INFO:              mlflow: 2.21.2
2025-03-29 18:44:07,074:INFO:              gradio: Not installed
2025-03-29 18:44:07,074:INFO:             fastapi: 0.115.12
2025-03-29 18:44:07,074:INFO:             uvicorn: 0.34.0
2025-03-29 18:44:07,074:INFO:              m2cgen: Not installed
2025-03-29 18:44:07,074:INFO:           evidently: Not installed
2025-03-29 18:44:07,074:INFO:               fugue: Not installed
2025-03-29 18:44:07,074:INFO:           streamlit: 1.44.0
2025-03-29 18:44:07,074:INFO:             prophet: Not installed
2025-03-29 18:44:07,074:INFO:None
2025-03-29 18:44:07,074:INFO:Set up data.
2025-03-29 18:44:07,078:INFO:Set up train/test split.
2025-03-29 18:44:07,081:INFO:Set up index.
2025-03-29 18:44:07,081:INFO:Set up folding strategy.
2025-03-29 18:44:07,081:INFO:Assigning column types.
2025-03-29 18:44:07,083:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 18:44:07,101:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:44:07,102:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:07,114:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,114:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,132:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:44:07,133:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:07,143:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,144:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 18:44:07,163:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:07,175:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,194:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:07,207:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,207:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,207:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-29 18:44:07,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,267:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,268:INFO:Preparing preprocessing pipeline...
2025-03-29 18:44:07,269:INFO:Set up simple imputation.
2025-03-29 18:44:07,278:INFO:Finished creating preprocessing pipeline.
2025-03-29 18:44:07,280:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-03-29 18:44:07,280:INFO:Creating final display dataframe.
2025-03-29 18:44:07,306:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              b9ab
2025-03-29 18:44:07,337:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,366:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,367:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:07,367:INFO:setup() successfully completed in 0.43s...............
2025-03-29 18:44:07,367:INFO:Initializing create_model()
2025-03-29 18:44:07,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30363ffd0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:44:07,367:INFO:Checking exceptions
2025-03-29 18:44:07,379:INFO:Importing libraries
2025-03-29 18:44:07,379:INFO:Copying training dataset
2025-03-29 18:44:07,382:INFO:Defining folds
2025-03-29 18:44:07,382:INFO:Declaring metric variables
2025-03-29 18:44:07,382:INFO:Importing untrained model
2025-03-29 18:44:07,382:INFO:Logistic Regression Imported successfully
2025-03-29 18:44:07,382:INFO:Starting cross validation
2025-03-29 18:44:07,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:44:10,787:INFO:Calculating mean and std
2025-03-29 18:44:10,789:INFO:Creating metrics dataframe
2025-03-29 18:44:10,794:INFO:Finalizing model
2025-03-29 18:44:10,860:INFO:Uploading results into container
2025-03-29 18:44:10,861:INFO:Uploading model into container now
2025-03-29 18:44:10,869:INFO:_master_model_container: 1
2025-03-29 18:44:10,870:INFO:_display_container: 2
2025-03-29 18:44:10,870:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-29 18:44:10,870:INFO:create_model() successfully completed......................................
2025-03-29 18:44:10,962:INFO:Initializing create_model()
2025-03-29 18:44:10,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30363ffd0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:44:10,962:INFO:Checking exceptions
2025-03-29 18:44:10,964:INFO:Importing libraries
2025-03-29 18:44:10,964:INFO:Copying training dataset
2025-03-29 18:44:10,969:INFO:Defining folds
2025-03-29 18:44:10,969:INFO:Declaring metric variables
2025-03-29 18:44:10,969:INFO:Importing untrained model
2025-03-29 18:44:10,970:INFO:Decision Tree Classifier Imported successfully
2025-03-29 18:44:10,970:INFO:Starting cross validation
2025-03-29 18:44:10,971:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:44:11,127:INFO:Calculating mean and std
2025-03-29 18:44:11,128:INFO:Creating metrics dataframe
2025-03-29 18:44:11,129:INFO:Finalizing model
2025-03-29 18:44:11,163:INFO:Uploading results into container
2025-03-29 18:44:11,163:INFO:Uploading model into container now
2025-03-29 18:44:11,167:INFO:_master_model_container: 2
2025-03-29 18:44:11,167:INFO:_display_container: 3
2025-03-29 18:44:11,167:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-03-29 18:44:11,167:INFO:create_model() successfully completed......................................
2025-03-29 18:44:11,230:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-03-29 18:44:11,232:INFO:Initializing save_model()
2025-03-29 18:44:11,232:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-29 18:44:11,232:INFO:Adding model into prep_pipe
2025-03-29 18:44:11,234:INFO:./data/processed/final_model.pkl saved in current working directory
2025-03-29 18:44:11,236:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-03-29 18:44:11,236:INFO:save_model() successfully completed......................................
2025-03-29 18:44:16,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:16,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:16,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:16,034:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:16,405:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:44:16,673:INFO:Initializing load_model()
2025-03-29 18:44:16,673:INFO:load_model(model_name=./data/processed/final_model.pkl, platform=None, authentication=None, verbose=True)
2025-03-29 18:44:43,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:43,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:43,251:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:43,252:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:43,617:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:44:44,025:INFO:PyCaret ClassificationExperiment
2025-03-29 18:44:44,025:INFO:Logging name: clf-default-name
2025-03-29 18:44:44,025:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-03-29 18:44:44,025:INFO:version 3.0.0
2025-03-29 18:44:44,025:INFO:Initializing setup()
2025-03-29 18:44:44,025:INFO:self.USI: c763
2025-03-29 18:44:44,025:INFO:self._variable_keys: {'logging_param', 'X_test', 'USI', 'gpu_param', 'y_train', 'data', 'fix_imbalance', 'exp_id', '_ml_usecase', 'idx', 'html_param', 'n_jobs_param', 'exp_name_log', 'memory', 'X_train', 'y_test', 'is_multiclass', '_available_plots', 'pipeline', 'y', 'target_param', 'log_plots_param', 'X', 'fold_generator', 'fold_shuffle_param', 'seed', 'gpu_n_jobs_param', 'fold_groups_param'}
2025-03-29 18:44:44,025:INFO:Checking environment
2025-03-29 18:44:44,025:INFO:python_version: 3.10.16
2025-03-29 18:44:44,025:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-03-29 18:44:44,025:INFO:machine: arm64
2025-03-29 18:44:44,037:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-03-29 18:44:44,038:INFO:Memory: svmem(total=17179869184, available=6709526528, percent=60.9, used=7552925696, free=1016610816, active=5698797568, inactive=5666996224, wired=1854128128)
2025-03-29 18:44:44,038:INFO:Physical Core: 8
2025-03-29 18:44:44,038:INFO:Logical Core: 8
2025-03-29 18:44:44,038:INFO:Checking libraries
2025-03-29 18:44:44,038:INFO:System:
2025-03-29 18:44:44,038:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-03-29 18:44:44,038:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-03-29 18:44:44,038:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-03-29 18:44:44,038:INFO:PyCaret required dependencies:
2025-03-29 18:44:44,058:INFO:                 pip: 25.0.1
2025-03-29 18:44:44,058:INFO:          setuptools: 75.8.2
2025-03-29 18:44:44,058:INFO:             pycaret: 3.0.0
2025-03-29 18:44:44,058:INFO:             IPython: 8.34.0
2025-03-29 18:44:44,058:INFO:          ipywidgets: 8.1.5
2025-03-29 18:44:44,058:INFO:                tqdm: 4.67.1
2025-03-29 18:44:44,058:INFO:               numpy: 1.24.4
2025-03-29 18:44:44,058:INFO:              pandas: 1.5.3
2025-03-29 18:44:44,058:INFO:              jinja2: 3.1.6
2025-03-29 18:44:44,058:INFO:               scipy: 1.9.3
2025-03-29 18:44:44,058:INFO:              joblib: 1.2.0
2025-03-29 18:44:44,058:INFO:             sklearn: 1.1.3
2025-03-29 18:44:44,058:INFO:                pyod: 2.0.4
2025-03-29 18:44:44,058:INFO:            imblearn: 0.12.4
2025-03-29 18:44:44,058:INFO:   category_encoders: 2.7.0
2025-03-29 18:44:44,058:INFO:            lightgbm: 4.6.0
2025-03-29 18:44:44,058:INFO:               numba: 0.61.0
2025-03-29 18:44:44,058:INFO:            requests: 2.32.3
2025-03-29 18:44:44,058:INFO:          matplotlib: 3.10.1
2025-03-29 18:44:44,058:INFO:          scikitplot: 0.3.7
2025-03-29 18:44:44,058:INFO:         yellowbrick: 1.5
2025-03-29 18:44:44,058:INFO:              plotly: 5.24.1
2025-03-29 18:44:44,058:INFO:             kaleido: 0.2.1
2025-03-29 18:44:44,058:INFO:         statsmodels: 0.14.4
2025-03-29 18:44:44,058:INFO:              sktime: 0.36.0
2025-03-29 18:44:44,058:INFO:               tbats: 1.1.3
2025-03-29 18:44:44,058:INFO:            pmdarima: 2.0.4
2025-03-29 18:44:44,058:INFO:              psutil: 7.0.0
2025-03-29 18:44:44,058:INFO:PyCaret optional dependencies:
2025-03-29 18:44:44,162:INFO:                shap: Not installed
2025-03-29 18:44:44,162:INFO:           interpret: Not installed
2025-03-29 18:44:44,162:INFO:                umap: Not installed
2025-03-29 18:44:44,162:INFO:    pandas_profiling: Not installed
2025-03-29 18:44:44,162:INFO:  explainerdashboard: Not installed
2025-03-29 18:44:44,162:INFO:             autoviz: Not installed
2025-03-29 18:44:44,162:INFO:           fairlearn: Not installed
2025-03-29 18:44:44,162:INFO:             xgboost: Not installed
2025-03-29 18:44:44,162:INFO:            catboost: Not installed
2025-03-29 18:44:44,162:INFO:              kmodes: Not installed
2025-03-29 18:44:44,162:INFO:             mlxtend: Not installed
2025-03-29 18:44:44,162:INFO:       statsforecast: Not installed
2025-03-29 18:44:44,162:INFO:        tune_sklearn: Not installed
2025-03-29 18:44:44,162:INFO:                 ray: Not installed
2025-03-29 18:44:44,162:INFO:            hyperopt: Not installed
2025-03-29 18:44:44,162:INFO:              optuna: Not installed
2025-03-29 18:44:44,162:INFO:               skopt: Not installed
2025-03-29 18:44:44,162:INFO:              mlflow: 2.21.2
2025-03-29 18:44:44,162:INFO:              gradio: Not installed
2025-03-29 18:44:44,162:INFO:             fastapi: 0.115.12
2025-03-29 18:44:44,162:INFO:             uvicorn: 0.34.0
2025-03-29 18:44:44,162:INFO:              m2cgen: Not installed
2025-03-29 18:44:44,162:INFO:           evidently: Not installed
2025-03-29 18:44:44,162:INFO:               fugue: Not installed
2025-03-29 18:44:44,162:INFO:           streamlit: 1.44.0
2025-03-29 18:44:44,162:INFO:             prophet: Not installed
2025-03-29 18:44:44,162:INFO:None
2025-03-29 18:44:44,162:INFO:Set up data.
2025-03-29 18:44:44,165:INFO:Set up train/test split.
2025-03-29 18:44:44,169:INFO:Set up index.
2025-03-29 18:44:44,169:INFO:Set up folding strategy.
2025-03-29 18:44:44,169:INFO:Assigning column types.
2025-03-29 18:44:44,170:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-03-29 18:44:44,189:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:44:44,190:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:44,202:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,203:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,221:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-03-29 18:44:44,221:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:44,233:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,233:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,233:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-03-29 18:44:44,251:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:44,263:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,263:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,281:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-03-29 18:44:44,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,293:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-03-29 18:44:44,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,353:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,354:INFO:Preparing preprocessing pipeline...
2025-03-29 18:44:44,355:INFO:Set up simple imputation.
2025-03-29 18:44:44,364:INFO:Finished creating preprocessing pipeline.
2025-03-29 18:44:44,366:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-03-29 18:44:44,366:INFO:Creating final display dataframe.
2025-03-29 18:44:44,391:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c763
2025-03-29 18:44:44,423:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,454:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-03-29 18:44:44,454:INFO:setup() successfully completed in 0.43s...............
2025-03-29 18:44:44,454:INFO:Initializing create_model()
2025-03-29 18:44:44,454:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10299fdf0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:44:44,454:INFO:Checking exceptions
2025-03-29 18:44:44,466:INFO:Importing libraries
2025-03-29 18:44:44,466:INFO:Copying training dataset
2025-03-29 18:44:44,469:INFO:Defining folds
2025-03-29 18:44:44,469:INFO:Declaring metric variables
2025-03-29 18:44:44,469:INFO:Importing untrained model
2025-03-29 18:44:44,470:INFO:Logistic Regression Imported successfully
2025-03-29 18:44:44,470:INFO:Starting cross validation
2025-03-29 18:44:44,470:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:44:47,896:INFO:Calculating mean and std
2025-03-29 18:44:47,897:INFO:Creating metrics dataframe
2025-03-29 18:44:47,900:INFO:Finalizing model
2025-03-29 18:44:47,974:INFO:Uploading results into container
2025-03-29 18:44:47,975:INFO:Uploading model into container now
2025-03-29 18:44:47,980:INFO:_master_model_container: 1
2025-03-29 18:44:47,980:INFO:_display_container: 2
2025-03-29 18:44:47,980:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-03-29 18:44:47,980:INFO:create_model() successfully completed......................................
2025-03-29 18:44:48,076:INFO:Initializing create_model()
2025-03-29 18:44:48,076:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x10299fdf0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-03-29 18:44:48,076:INFO:Checking exceptions
2025-03-29 18:44:48,076:INFO:Importing libraries
2025-03-29 18:44:48,076:INFO:Copying training dataset
2025-03-29 18:44:48,078:INFO:Defining folds
2025-03-29 18:44:48,078:INFO:Declaring metric variables
2025-03-29 18:44:48,078:INFO:Importing untrained model
2025-03-29 18:44:48,078:INFO:Decision Tree Classifier Imported successfully
2025-03-29 18:44:48,079:INFO:Starting cross validation
2025-03-29 18:44:48,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-03-29 18:44:48,244:INFO:Calculating mean and std
2025-03-29 18:44:48,244:INFO:Creating metrics dataframe
2025-03-29 18:44:48,245:INFO:Finalizing model
2025-03-29 18:44:48,277:INFO:Uploading results into container
2025-03-29 18:44:48,277:INFO:Uploading model into container now
2025-03-29 18:44:48,281:INFO:_master_model_container: 2
2025-03-29 18:44:48,281:INFO:_display_container: 3
2025-03-29 18:44:48,282:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-03-29 18:44:48,282:INFO:create_model() successfully completed......................................
2025-03-29 18:44:48,341:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-03-29 18:44:48,343:INFO:Initializing save_model()
2025-03-29 18:44:48,343:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-03-29 18:44:48,343:INFO:Adding model into prep_pipe
2025-03-29 18:44:48,345:INFO:./data/processed/final_model.pkl saved in current working directory
2025-03-29 18:44:48,347:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-03-29 18:44:48,347:INFO:save_model() successfully completed......................................
2025-03-29 18:44:53,148:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:53,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:53,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:53,149:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-03-29 18:44:53,522:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-03-29 18:44:53,791:INFO:Initializing load_model()
2025-03-29 18:44:53,791:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-03-29 18:44:53,876:INFO:Initializing predict_model()
2025-03-29 18:44:53,877:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17f4b41c0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x11d02dcf0>)
2025-03-29 18:44:53,877:INFO:Checking exceptions
2025-03-29 18:44:53,877:INFO:Preloading libraries
2025-03-29 18:44:53,877:INFO:Set up data.
2025-03-29 18:44:53,884:INFO:Set up index.
2025-04-01 19:06:48,330:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/sklearn/base.py:493: FutureWarning:

The feature names should match those that were passed during fit. Starting version 1.2, an error will be raised.
Feature names unseen at fit time:
- seconds_remaining



2025-04-01 20:21:49,621:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:21:49,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:21:49,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:21:49,622:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:21:50,418:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:23:15,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:15,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:15,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:15,503:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:15,976:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:23:16,480:INFO:PyCaret ClassificationExperiment
2025-04-01 20:23:16,480:INFO:Logging name: PipelineTreinamento
2025-04-01 20:23:16,480:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 20:23:16,480:INFO:version 3.0.0
2025-04-01 20:23:16,480:INFO:Initializing setup()
2025-04-01 20:23:16,480:INFO:self.USI: e947
2025-04-01 20:23:16,480:INFO:self._variable_keys: {'n_jobs_param', 'X_train', 'USI', 'fold_generator', 'target_param', '_ml_usecase', 'log_plots_param', 'gpu_n_jobs_param', 'X', 'y', 'is_multiclass', 'logging_param', 'fold_shuffle_param', 'seed', 'idx', 'fix_imbalance', 'y_test', 'exp_id', 'X_test', '_available_plots', 'fold_groups_param', 'gpu_param', 'html_param', 'pipeline', 'data', 'exp_name_log', 'y_train', 'memory'}
2025-04-01 20:23:16,480:INFO:Checking environment
2025-04-01 20:23:16,480:INFO:python_version: 3.10.16
2025-04-01 20:23:16,480:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 20:23:16,480:INFO:machine: arm64
2025-04-01 20:23:16,495:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 20:23:16,495:INFO:Memory: svmem(total=17179869184, available=3837526016, percent=77.7, used=5740265472, free=73678848, active=3774431232, inactive=3662790656, wired=1965834240)
2025-04-01 20:23:16,495:INFO:Physical Core: 8
2025-04-01 20:23:16,495:INFO:Logical Core: 8
2025-04-01 20:23:16,495:INFO:Checking libraries
2025-04-01 20:23:16,496:INFO:System:
2025-04-01 20:23:16,496:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 20:23:16,496:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 20:23:16,496:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 20:23:16,496:INFO:PyCaret required dependencies:
2025-04-01 20:23:16,517:INFO:                 pip: 25.0.1
2025-04-01 20:23:16,517:INFO:          setuptools: 75.8.2
2025-04-01 20:23:16,517:INFO:             pycaret: 3.0.0
2025-04-01 20:23:16,517:INFO:             IPython: 8.34.0
2025-04-01 20:23:16,517:INFO:          ipywidgets: 8.1.5
2025-04-01 20:23:16,517:INFO:                tqdm: 4.67.1
2025-04-01 20:23:16,517:INFO:               numpy: 1.24.4
2025-04-01 20:23:16,517:INFO:              pandas: 1.5.3
2025-04-01 20:23:16,517:INFO:              jinja2: 3.1.6
2025-04-01 20:23:16,517:INFO:               scipy: 1.9.3
2025-04-01 20:23:16,517:INFO:              joblib: 1.2.0
2025-04-01 20:23:16,517:INFO:             sklearn: 1.1.3
2025-04-01 20:23:16,517:INFO:                pyod: 2.0.4
2025-04-01 20:23:16,517:INFO:            imblearn: 0.12.4
2025-04-01 20:23:16,517:INFO:   category_encoders: 2.7.0
2025-04-01 20:23:16,517:INFO:            lightgbm: 4.6.0
2025-04-01 20:23:16,517:INFO:               numba: 0.61.0
2025-04-01 20:23:16,517:INFO:            requests: 2.32.3
2025-04-01 20:23:16,517:INFO:          matplotlib: 3.10.1
2025-04-01 20:23:16,517:INFO:          scikitplot: 0.3.7
2025-04-01 20:23:16,517:INFO:         yellowbrick: 1.5
2025-04-01 20:23:16,517:INFO:              plotly: 5.24.1
2025-04-01 20:23:16,517:INFO:             kaleido: 0.2.1
2025-04-01 20:23:16,517:INFO:         statsmodels: 0.14.4
2025-04-01 20:23:16,517:INFO:              sktime: 0.36.0
2025-04-01 20:23:16,517:INFO:               tbats: 1.1.3
2025-04-01 20:23:16,517:INFO:            pmdarima: 2.0.4
2025-04-01 20:23:16,517:INFO:              psutil: 7.0.0
2025-04-01 20:23:16,517:INFO:PyCaret optional dependencies:
2025-04-01 20:23:16,639:INFO:                shap: Not installed
2025-04-01 20:23:16,639:INFO:           interpret: Not installed
2025-04-01 20:23:16,639:INFO:                umap: Not installed
2025-04-01 20:23:16,639:INFO:    pandas_profiling: Not installed
2025-04-01 20:23:16,639:INFO:  explainerdashboard: Not installed
2025-04-01 20:23:16,639:INFO:             autoviz: Not installed
2025-04-01 20:23:16,639:INFO:           fairlearn: Not installed
2025-04-01 20:23:16,639:INFO:             xgboost: Not installed
2025-04-01 20:23:16,639:INFO:            catboost: Not installed
2025-04-01 20:23:16,639:INFO:              kmodes: Not installed
2025-04-01 20:23:16,639:INFO:             mlxtend: Not installed
2025-04-01 20:23:16,639:INFO:       statsforecast: Not installed
2025-04-01 20:23:16,639:INFO:        tune_sklearn: Not installed
2025-04-01 20:23:16,639:INFO:                 ray: Not installed
2025-04-01 20:23:16,639:INFO:            hyperopt: Not installed
2025-04-01 20:23:16,639:INFO:              optuna: Not installed
2025-04-01 20:23:16,639:INFO:               skopt: Not installed
2025-04-01 20:23:16,639:INFO:              mlflow: 2.21.2
2025-04-01 20:23:16,639:INFO:              gradio: Not installed
2025-04-01 20:23:16,639:INFO:             fastapi: 0.115.12
2025-04-01 20:23:16,639:INFO:             uvicorn: 0.34.0
2025-04-01 20:23:16,639:INFO:              m2cgen: Not installed
2025-04-01 20:23:16,639:INFO:           evidently: Not installed
2025-04-01 20:23:16,639:INFO:               fugue: Not installed
2025-04-01 20:23:16,639:INFO:           streamlit: 1.44.0
2025-04-01 20:23:16,639:INFO:             prophet: Not installed
2025-04-01 20:23:16,639:INFO:None
2025-04-01 20:23:16,639:INFO:Set up data.
2025-04-01 20:23:16,644:INFO:Set up train/test split.
2025-04-01 20:23:16,648:INFO:Set up index.
2025-04-01 20:23:16,648:INFO:Set up folding strategy.
2025-04-01 20:23:16,648:INFO:Assigning column types.
2025-04-01 20:23:16,650:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 20:23:16,668:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:23:16,670:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:16,684:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,684:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,702:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:23:16,703:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:16,714:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,714:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,714:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 20:23:16,733:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:16,745:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,745:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,765:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:16,778:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,778:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,779:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 20:23:16,815:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,846:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,848:INFO:Preparing preprocessing pipeline...
2025-04-01 20:23:16,849:INFO:Set up simple imputation.
2025-04-01 20:23:16,861:INFO:Finished creating preprocessing pipeline.
2025-04-01 20:23:16,863:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 20:23:16,863:INFO:Creating final display dataframe.
2025-04-01 20:23:16,890:INFO:Setup _display_container:                     Description                Value
0                    Session id                  123
1                        Target       shot_made_flag
2                   Target type               Binary
3           Original data shape           (16228, 7)
4        Transformed data shape           (16228, 7)
5   Transformed train set shape           (11359, 7)
6    Transformed test set shape            (4869, 7)
7              Numeric features                    6
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12               Fold Generator      StratifiedKFold
13                  Fold Number                   10
14                     CPU Jobs                   -1
15                      Use GPU                False
16               Log Experiment         MlflowLogger
17              Experiment Name  PipelineTreinamento
18                          USI                 e947
2025-04-01 20:23:16,923:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:16,955:INFO:Logging experiment in loggers
2025-04-01 20:23:48,410:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:48,410:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:48,410:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:48,410:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:23:48,877:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:23:49,374:INFO:PyCaret ClassificationExperiment
2025-04-01 20:23:49,374:INFO:Logging name: PipelineTreinamento
2025-04-01 20:23:49,374:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 20:23:49,374:INFO:version 3.0.0
2025-04-01 20:23:49,374:INFO:Initializing setup()
2025-04-01 20:23:49,374:INFO:self.USI: cdb3
2025-04-01 20:23:49,374:INFO:self._variable_keys: {'gpu_n_jobs_param', 'y_test', 'memory', 'X_test', '_ml_usecase', 'exp_id', 'html_param', 'fold_groups_param', 'n_jobs_param', 'X_train', 'USI', 'seed', 'pipeline', 'y', 'data', 'logging_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'y_train', '_available_plots', 'target_param', 'idx', 'X', 'fix_imbalance', 'fold_shuffle_param', 'fold_generator', 'log_plots_param'}
2025-04-01 20:23:49,374:INFO:Checking environment
2025-04-01 20:23:49,374:INFO:python_version: 3.10.16
2025-04-01 20:23:49,374:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 20:23:49,374:INFO:machine: arm64
2025-04-01 20:23:49,385:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 20:23:49,385:INFO:Memory: svmem(total=17179869184, available=3904421888, percent=77.3, used=5811748864, free=61702144, active=3852025856, inactive=3742318592, wired=1959723008)
2025-04-01 20:23:49,385:INFO:Physical Core: 8
2025-04-01 20:23:49,385:INFO:Logical Core: 8
2025-04-01 20:23:49,385:INFO:Checking libraries
2025-04-01 20:23:49,385:INFO:System:
2025-04-01 20:23:49,385:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 20:23:49,385:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 20:23:49,385:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 20:23:49,385:INFO:PyCaret required dependencies:
2025-04-01 20:23:49,408:INFO:                 pip: 25.0.1
2025-04-01 20:23:49,408:INFO:          setuptools: 75.8.2
2025-04-01 20:23:49,408:INFO:             pycaret: 3.0.0
2025-04-01 20:23:49,408:INFO:             IPython: 8.34.0
2025-04-01 20:23:49,408:INFO:          ipywidgets: 8.1.5
2025-04-01 20:23:49,408:INFO:                tqdm: 4.67.1
2025-04-01 20:23:49,408:INFO:               numpy: 1.24.4
2025-04-01 20:23:49,408:INFO:              pandas: 1.5.3
2025-04-01 20:23:49,408:INFO:              jinja2: 3.1.6
2025-04-01 20:23:49,408:INFO:               scipy: 1.9.3
2025-04-01 20:23:49,408:INFO:              joblib: 1.2.0
2025-04-01 20:23:49,408:INFO:             sklearn: 1.1.3
2025-04-01 20:23:49,408:INFO:                pyod: 2.0.4
2025-04-01 20:23:49,408:INFO:            imblearn: 0.12.4
2025-04-01 20:23:49,408:INFO:   category_encoders: 2.7.0
2025-04-01 20:23:49,408:INFO:            lightgbm: 4.6.0
2025-04-01 20:23:49,408:INFO:               numba: 0.61.0
2025-04-01 20:23:49,408:INFO:            requests: 2.32.3
2025-04-01 20:23:49,408:INFO:          matplotlib: 3.10.1
2025-04-01 20:23:49,408:INFO:          scikitplot: 0.3.7
2025-04-01 20:23:49,408:INFO:         yellowbrick: 1.5
2025-04-01 20:23:49,408:INFO:              plotly: 5.24.1
2025-04-01 20:23:49,408:INFO:             kaleido: 0.2.1
2025-04-01 20:23:49,408:INFO:         statsmodels: 0.14.4
2025-04-01 20:23:49,408:INFO:              sktime: 0.36.0
2025-04-01 20:23:49,408:INFO:               tbats: 1.1.3
2025-04-01 20:23:49,408:INFO:            pmdarima: 2.0.4
2025-04-01 20:23:49,408:INFO:              psutil: 7.0.0
2025-04-01 20:23:49,408:INFO:PyCaret optional dependencies:
2025-04-01 20:23:49,525:INFO:                shap: Not installed
2025-04-01 20:23:49,525:INFO:           interpret: Not installed
2025-04-01 20:23:49,525:INFO:                umap: Not installed
2025-04-01 20:23:49,525:INFO:    pandas_profiling: Not installed
2025-04-01 20:23:49,525:INFO:  explainerdashboard: Not installed
2025-04-01 20:23:49,525:INFO:             autoviz: Not installed
2025-04-01 20:23:49,525:INFO:           fairlearn: Not installed
2025-04-01 20:23:49,525:INFO:             xgboost: Not installed
2025-04-01 20:23:49,525:INFO:            catboost: Not installed
2025-04-01 20:23:49,525:INFO:              kmodes: Not installed
2025-04-01 20:23:49,525:INFO:             mlxtend: Not installed
2025-04-01 20:23:49,525:INFO:       statsforecast: Not installed
2025-04-01 20:23:49,525:INFO:        tune_sklearn: Not installed
2025-04-01 20:23:49,525:INFO:                 ray: Not installed
2025-04-01 20:23:49,525:INFO:            hyperopt: Not installed
2025-04-01 20:23:49,525:INFO:              optuna: Not installed
2025-04-01 20:23:49,525:INFO:               skopt: Not installed
2025-04-01 20:23:49,525:INFO:              mlflow: 2.21.2
2025-04-01 20:23:49,525:INFO:              gradio: Not installed
2025-04-01 20:23:49,525:INFO:             fastapi: 0.115.12
2025-04-01 20:23:49,525:INFO:             uvicorn: 0.34.0
2025-04-01 20:23:49,525:INFO:              m2cgen: Not installed
2025-04-01 20:23:49,525:INFO:           evidently: Not installed
2025-04-01 20:23:49,525:INFO:               fugue: Not installed
2025-04-01 20:23:49,525:INFO:           streamlit: 1.44.0
2025-04-01 20:23:49,525:INFO:             prophet: Not installed
2025-04-01 20:23:49,525:INFO:None
2025-04-01 20:23:49,525:INFO:Set up data.
2025-04-01 20:23:49,528:INFO:Set up train/test split.
2025-04-01 20:23:49,532:INFO:Set up index.
2025-04-01 20:23:49,532:INFO:Set up folding strategy.
2025-04-01 20:23:49,532:INFO:Assigning column types.
2025-04-01 20:23:49,534:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 20:23:49,552:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:23:49,553:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:49,567:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,567:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,585:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:23:49,585:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:49,597:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,597:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,597:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 20:23:49,615:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:49,627:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,627:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,647:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:23:49,659:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,659:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 20:23:49,689:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,689:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,721:INFO:Preparing preprocessing pipeline...
2025-04-01 20:23:49,722:INFO:Set up simple imputation.
2025-04-01 20:23:49,732:INFO:Finished creating preprocessing pipeline.
2025-04-01 20:23:49,734:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 20:23:49,734:INFO:Creating final display dataframe.
2025-04-01 20:23:49,760:INFO:Setup _display_container:                     Description                Value
0                    Session id                  123
1                        Target       shot_made_flag
2                   Target type               Binary
3           Original data shape           (16228, 7)
4        Transformed data shape           (16228, 7)
5   Transformed train set shape           (11359, 7)
6    Transformed test set shape            (4869, 7)
7              Numeric features                    6
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12               Fold Generator      StratifiedKFold
13                  Fold Number                   10
14                     CPU Jobs                   -1
15                      Use GPU                False
16               Log Experiment         MlflowLogger
17              Experiment Name  PipelineTreinamento
18                          USI                 cdb3
2025-04-01 20:23:49,793:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,794:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,826:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:23:49,827:INFO:Logging experiment in loggers
2025-04-01 20:25:04,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:04,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:04,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:04,075:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:04,548:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:25:05,050:INFO:PyCaret ClassificationExperiment
2025-04-01 20:25:05,050:INFO:Logging name: PipelineTreinamento
2025-04-01 20:25:05,050:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 20:25:05,050:INFO:version 3.0.0
2025-04-01 20:25:05,050:INFO:Initializing setup()
2025-04-01 20:25:05,050:INFO:self.USI: ccc6
2025-04-01 20:25:05,050:INFO:self._variable_keys: {'memory', 'seed', 'fold_shuffle_param', '_available_plots', 'gpu_param', 'fold_groups_param', 'X_test', '_ml_usecase', 'is_multiclass', 'fix_imbalance', 'USI', 'logging_param', 'pipeline', 'exp_id', 'exp_name_log', 'data', 'html_param', 'n_jobs_param', 'y_train', 'fold_generator', 'log_plots_param', 'target_param', 'X_train', 'y_test', 'X', 'gpu_n_jobs_param', 'idx', 'y'}
2025-04-01 20:25:05,050:INFO:Checking environment
2025-04-01 20:25:05,050:INFO:python_version: 3.10.16
2025-04-01 20:25:05,050:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 20:25:05,050:INFO:machine: arm64
2025-04-01 20:25:05,063:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 20:25:05,063:INFO:Memory: svmem(total=17179869184, available=3980886016, percent=76.8, used=5860491264, free=66912256, active=3924017152, inactive=3813277696, wired=1936474112)
2025-04-01 20:25:05,063:INFO:Physical Core: 8
2025-04-01 20:25:05,063:INFO:Logical Core: 8
2025-04-01 20:25:05,063:INFO:Checking libraries
2025-04-01 20:25:05,063:INFO:System:
2025-04-01 20:25:05,063:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 20:25:05,063:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 20:25:05,063:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 20:25:05,063:INFO:PyCaret required dependencies:
2025-04-01 20:25:05,084:INFO:                 pip: 25.0.1
2025-04-01 20:25:05,084:INFO:          setuptools: 75.8.2
2025-04-01 20:25:05,084:INFO:             pycaret: 3.0.0
2025-04-01 20:25:05,084:INFO:             IPython: 8.34.0
2025-04-01 20:25:05,084:INFO:          ipywidgets: 8.1.5
2025-04-01 20:25:05,084:INFO:                tqdm: 4.67.1
2025-04-01 20:25:05,084:INFO:               numpy: 1.24.4
2025-04-01 20:25:05,084:INFO:              pandas: 1.5.3
2025-04-01 20:25:05,084:INFO:              jinja2: 3.1.6
2025-04-01 20:25:05,084:INFO:               scipy: 1.9.3
2025-04-01 20:25:05,084:INFO:              joblib: 1.2.0
2025-04-01 20:25:05,084:INFO:             sklearn: 1.1.3
2025-04-01 20:25:05,084:INFO:                pyod: 2.0.4
2025-04-01 20:25:05,084:INFO:            imblearn: 0.12.4
2025-04-01 20:25:05,084:INFO:   category_encoders: 2.7.0
2025-04-01 20:25:05,084:INFO:            lightgbm: 4.6.0
2025-04-01 20:25:05,084:INFO:               numba: 0.61.0
2025-04-01 20:25:05,084:INFO:            requests: 2.32.3
2025-04-01 20:25:05,084:INFO:          matplotlib: 3.10.1
2025-04-01 20:25:05,084:INFO:          scikitplot: 0.3.7
2025-04-01 20:25:05,084:INFO:         yellowbrick: 1.5
2025-04-01 20:25:05,084:INFO:              plotly: 5.24.1
2025-04-01 20:25:05,084:INFO:             kaleido: 0.2.1
2025-04-01 20:25:05,084:INFO:         statsmodels: 0.14.4
2025-04-01 20:25:05,084:INFO:              sktime: 0.36.0
2025-04-01 20:25:05,084:INFO:               tbats: 1.1.3
2025-04-01 20:25:05,084:INFO:            pmdarima: 2.0.4
2025-04-01 20:25:05,084:INFO:              psutil: 7.0.0
2025-04-01 20:25:05,084:INFO:PyCaret optional dependencies:
2025-04-01 20:25:05,220:INFO:                shap: Not installed
2025-04-01 20:25:05,220:INFO:           interpret: Not installed
2025-04-01 20:25:05,220:INFO:                umap: Not installed
2025-04-01 20:25:05,220:INFO:    pandas_profiling: Not installed
2025-04-01 20:25:05,220:INFO:  explainerdashboard: Not installed
2025-04-01 20:25:05,220:INFO:             autoviz: Not installed
2025-04-01 20:25:05,220:INFO:           fairlearn: Not installed
2025-04-01 20:25:05,220:INFO:             xgboost: Not installed
2025-04-01 20:25:05,220:INFO:            catboost: Not installed
2025-04-01 20:25:05,220:INFO:              kmodes: Not installed
2025-04-01 20:25:05,220:INFO:             mlxtend: Not installed
2025-04-01 20:25:05,220:INFO:       statsforecast: Not installed
2025-04-01 20:25:05,220:INFO:        tune_sklearn: Not installed
2025-04-01 20:25:05,220:INFO:                 ray: Not installed
2025-04-01 20:25:05,220:INFO:            hyperopt: Not installed
2025-04-01 20:25:05,220:INFO:              optuna: Not installed
2025-04-01 20:25:05,220:INFO:               skopt: Not installed
2025-04-01 20:25:05,220:INFO:              mlflow: 2.21.2
2025-04-01 20:25:05,220:INFO:              gradio: Not installed
2025-04-01 20:25:05,220:INFO:             fastapi: 0.115.12
2025-04-01 20:25:05,220:INFO:             uvicorn: 0.34.0
2025-04-01 20:25:05,220:INFO:              m2cgen: Not installed
2025-04-01 20:25:05,221:INFO:           evidently: Not installed
2025-04-01 20:25:05,221:INFO:               fugue: Not installed
2025-04-01 20:25:05,221:INFO:           streamlit: 1.44.0
2025-04-01 20:25:05,221:INFO:             prophet: Not installed
2025-04-01 20:25:05,221:INFO:None
2025-04-01 20:25:05,221:INFO:Set up data.
2025-04-01 20:25:05,224:INFO:Set up train/test split.
2025-04-01 20:25:05,228:INFO:Set up index.
2025-04-01 20:25:05,228:INFO:Set up folding strategy.
2025-04-01 20:25:05,228:INFO:Assigning column types.
2025-04-01 20:25:05,229:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 20:25:05,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:25:05,248:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:05,261:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,262:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,280:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:25:05,280:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:05,291:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,291:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,291:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 20:25:05,309:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:05,320:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,339:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:05,350:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,350:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,350:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 20:25:05,379:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,409:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,411:INFO:Preparing preprocessing pipeline...
2025-04-01 20:25:05,412:INFO:Set up simple imputation.
2025-04-01 20:25:05,422:INFO:Finished creating preprocessing pipeline.
2025-04-01 20:25:05,424:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 20:25:05,424:INFO:Creating final display dataframe.
2025-04-01 20:25:05,450:INFO:Setup _display_container:                     Description                Value
0                    Session id                  123
1                        Target       shot_made_flag
2                   Target type               Binary
3           Original data shape           (16228, 7)
4        Transformed data shape           (16228, 7)
5   Transformed train set shape           (11359, 7)
6    Transformed test set shape            (4869, 7)
7              Numeric features                    6
8                    Preprocess                 True
9               Imputation type               simple
10           Numeric imputation                 mean
11       Categorical imputation                 mode
12               Fold Generator      StratifiedKFold
13                  Fold Number                   10
14                     CPU Jobs                   -1
15                      Use GPU                False
16               Log Experiment         MlflowLogger
17              Experiment Name  PipelineTreinamento
18                          USI                 ccc6
2025-04-01 20:25:05,483:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,483:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,514:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,514:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:05,514:INFO:Logging experiment in loggers
2025-04-01 20:25:31,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:31,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:31,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:31,050:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:25:31,525:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:25:32,033:INFO:PyCaret ClassificationExperiment
2025-04-01 20:25:32,033:INFO:Logging name: clf-default-name
2025-04-01 20:25:32,033:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 20:25:32,033:INFO:version 3.0.0
2025-04-01 20:25:32,033:INFO:Initializing setup()
2025-04-01 20:25:32,033:INFO:self.USI: f0fd
2025-04-01 20:25:32,033:INFO:self._variable_keys: {'gpu_n_jobs_param', '_available_plots', 'is_multiclass', 'memory', 'USI', 'exp_id', 'html_param', 'target_param', 'fix_imbalance', 'data', 'seed', '_ml_usecase', 'fold_generator', 'X_test', 'y_train', 'X', 'n_jobs_param', 'exp_name_log', 'y', 'log_plots_param', 'gpu_param', 'y_test', 'fold_groups_param', 'logging_param', 'fold_shuffle_param', 'X_train', 'pipeline', 'idx'}
2025-04-01 20:25:32,033:INFO:Checking environment
2025-04-01 20:25:32,033:INFO:python_version: 3.10.16
2025-04-01 20:25:32,033:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 20:25:32,033:INFO:machine: arm64
2025-04-01 20:25:32,047:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 20:25:32,047:INFO:Memory: svmem(total=17179869184, available=3980951552, percent=76.8, used=5828460544, free=70123520, active=3919216640, inactive=3809558528, wired=1909243904)
2025-04-01 20:25:32,047:INFO:Physical Core: 8
2025-04-01 20:25:32,047:INFO:Logical Core: 8
2025-04-01 20:25:32,047:INFO:Checking libraries
2025-04-01 20:25:32,047:INFO:System:
2025-04-01 20:25:32,048:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 20:25:32,048:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 20:25:32,048:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 20:25:32,048:INFO:PyCaret required dependencies:
2025-04-01 20:25:32,069:INFO:                 pip: 25.0.1
2025-04-01 20:25:32,069:INFO:          setuptools: 75.8.2
2025-04-01 20:25:32,069:INFO:             pycaret: 3.0.0
2025-04-01 20:25:32,069:INFO:             IPython: 8.34.0
2025-04-01 20:25:32,069:INFO:          ipywidgets: 8.1.5
2025-04-01 20:25:32,069:INFO:                tqdm: 4.67.1
2025-04-01 20:25:32,070:INFO:               numpy: 1.24.4
2025-04-01 20:25:32,070:INFO:              pandas: 1.5.3
2025-04-01 20:25:32,070:INFO:              jinja2: 3.1.6
2025-04-01 20:25:32,070:INFO:               scipy: 1.9.3
2025-04-01 20:25:32,070:INFO:              joblib: 1.2.0
2025-04-01 20:25:32,070:INFO:             sklearn: 1.1.3
2025-04-01 20:25:32,070:INFO:                pyod: 2.0.4
2025-04-01 20:25:32,070:INFO:            imblearn: 0.12.4
2025-04-01 20:25:32,070:INFO:   category_encoders: 2.7.0
2025-04-01 20:25:32,070:INFO:            lightgbm: 4.6.0
2025-04-01 20:25:32,070:INFO:               numba: 0.61.0
2025-04-01 20:25:32,070:INFO:            requests: 2.32.3
2025-04-01 20:25:32,070:INFO:          matplotlib: 3.10.1
2025-04-01 20:25:32,070:INFO:          scikitplot: 0.3.7
2025-04-01 20:25:32,070:INFO:         yellowbrick: 1.5
2025-04-01 20:25:32,070:INFO:              plotly: 5.24.1
2025-04-01 20:25:32,070:INFO:             kaleido: 0.2.1
2025-04-01 20:25:32,070:INFO:         statsmodels: 0.14.4
2025-04-01 20:25:32,070:INFO:              sktime: 0.36.0
2025-04-01 20:25:32,070:INFO:               tbats: 1.1.3
2025-04-01 20:25:32,070:INFO:            pmdarima: 2.0.4
2025-04-01 20:25:32,070:INFO:              psutil: 7.0.0
2025-04-01 20:25:32,070:INFO:PyCaret optional dependencies:
2025-04-01 20:25:32,187:INFO:                shap: Not installed
2025-04-01 20:25:32,187:INFO:           interpret: Not installed
2025-04-01 20:25:32,187:INFO:                umap: Not installed
2025-04-01 20:25:32,187:INFO:    pandas_profiling: Not installed
2025-04-01 20:25:32,187:INFO:  explainerdashboard: Not installed
2025-04-01 20:25:32,187:INFO:             autoviz: Not installed
2025-04-01 20:25:32,187:INFO:           fairlearn: Not installed
2025-04-01 20:25:32,187:INFO:             xgboost: Not installed
2025-04-01 20:25:32,187:INFO:            catboost: Not installed
2025-04-01 20:25:32,187:INFO:              kmodes: Not installed
2025-04-01 20:25:32,187:INFO:             mlxtend: Not installed
2025-04-01 20:25:32,187:INFO:       statsforecast: Not installed
2025-04-01 20:25:32,187:INFO:        tune_sklearn: Not installed
2025-04-01 20:25:32,187:INFO:                 ray: Not installed
2025-04-01 20:25:32,187:INFO:            hyperopt: Not installed
2025-04-01 20:25:32,187:INFO:              optuna: Not installed
2025-04-01 20:25:32,187:INFO:               skopt: Not installed
2025-04-01 20:25:32,187:INFO:              mlflow: 2.21.2
2025-04-01 20:25:32,187:INFO:              gradio: Not installed
2025-04-01 20:25:32,187:INFO:             fastapi: 0.115.12
2025-04-01 20:25:32,187:INFO:             uvicorn: 0.34.0
2025-04-01 20:25:32,187:INFO:              m2cgen: Not installed
2025-04-01 20:25:32,187:INFO:           evidently: Not installed
2025-04-01 20:25:32,187:INFO:               fugue: Not installed
2025-04-01 20:25:32,188:INFO:           streamlit: 1.44.0
2025-04-01 20:25:32,188:INFO:             prophet: Not installed
2025-04-01 20:25:32,188:INFO:None
2025-04-01 20:25:32,188:INFO:Set up data.
2025-04-01 20:25:32,191:INFO:Set up train/test split.
2025-04-01 20:25:32,195:INFO:Set up index.
2025-04-01 20:25:32,195:INFO:Set up folding strategy.
2025-04-01 20:25:32,195:INFO:Assigning column types.
2025-04-01 20:25:32,196:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 20:25:32,214:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:25:32,215:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:32,228:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,229:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,247:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:25:32,247:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:32,258:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,258:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,258:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 20:25:32,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:32,287:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,306:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:25:32,317:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,317:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 20:25:32,346:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,346:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,377:INFO:Preparing preprocessing pipeline...
2025-04-01 20:25:32,378:INFO:Set up simple imputation.
2025-04-01 20:25:32,388:INFO:Finished creating preprocessing pipeline.
2025-04-01 20:25:32,389:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 20:25:32,389:INFO:Creating final display dataframe.
2025-04-01 20:25:32,415:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              f0fd
2025-04-01 20:25:32,446:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,446:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,476:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,476:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:25:32,476:INFO:setup() successfully completed in 0.44s...............
2025-04-01 20:25:32,476:INFO:Initializing create_model()
2025-04-01 20:25:32,476:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa67e50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 20:25:32,476:INFO:Checking exceptions
2025-04-01 20:25:32,510:INFO:Importing libraries
2025-04-01 20:25:32,510:INFO:Copying training dataset
2025-04-01 20:25:32,513:INFO:Defining folds
2025-04-01 20:25:32,513:INFO:Declaring metric variables
2025-04-01 20:25:32,513:INFO:Importing untrained model
2025-04-01 20:25:32,514:INFO:Logistic Regression Imported successfully
2025-04-01 20:25:32,514:INFO:Starting cross validation
2025-04-01 20:25:32,515:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 20:25:36,213:INFO:Calculating mean and std
2025-04-01 20:25:36,217:INFO:Creating metrics dataframe
2025-04-01 20:25:36,219:INFO:Finalizing model
2025-04-01 20:25:36,279:INFO:Uploading results into container
2025-04-01 20:25:36,279:INFO:Uploading model into container now
2025-04-01 20:25:36,285:INFO:_master_model_container: 1
2025-04-01 20:25:36,285:INFO:_display_container: 2
2025-04-01 20:25:36,288:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 20:25:36,289:INFO:create_model() successfully completed......................................
2025-04-01 20:25:36,392:INFO:Initializing create_model()
2025-04-01 20:25:36,392:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16aa67e50>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 20:25:36,392:INFO:Checking exceptions
2025-04-01 20:25:36,394:INFO:Importing libraries
2025-04-01 20:25:36,394:INFO:Copying training dataset
2025-04-01 20:25:36,399:INFO:Defining folds
2025-04-01 20:25:36,399:INFO:Declaring metric variables
2025-04-01 20:25:36,399:INFO:Importing untrained model
2025-04-01 20:25:36,399:INFO:Decision Tree Classifier Imported successfully
2025-04-01 20:25:36,399:INFO:Starting cross validation
2025-04-01 20:25:36,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 20:25:36,644:INFO:Calculating mean and std
2025-04-01 20:25:36,645:INFO:Creating metrics dataframe
2025-04-01 20:25:36,646:INFO:Finalizing model
2025-04-01 20:25:36,678:INFO:Uploading results into container
2025-04-01 20:25:36,679:INFO:Uploading model into container now
2025-04-01 20:25:36,682:INFO:_master_model_container: 2
2025-04-01 20:25:36,682:INFO:_display_container: 3
2025-04-01 20:25:36,683:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-01 20:25:36,683:INFO:create_model() successfully completed......................................
2025-04-01 20:25:36,743:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-01 20:25:36,745:INFO:Initializing save_model()
2025-04-01 20:25:36,745:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-01 20:25:36,745:INFO:Adding model into prep_pipe
2025-04-01 20:25:36,747:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-01 20:25:36,749:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-01 20:25:36,749:INFO:save_model() successfully completed......................................
2025-04-01 20:29:20,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:29:20,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:29:20,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:29:20,121:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:29:20,626:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:29:21,163:INFO:PyCaret ClassificationExperiment
2025-04-01 20:29:21,163:INFO:Logging name: Treinamento
2025-04-01 20:29:21,164:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 20:29:21,164:INFO:version 3.0.0
2025-04-01 20:29:21,164:INFO:Initializing setup()
2025-04-01 20:29:21,164:INFO:self.USI: 0110
2025-04-01 20:29:21,164:INFO:self._variable_keys: {'_available_plots', 'USI', 'target_param', 'seed', 'pipeline', 'logging_param', 'X', 'X_test', 'n_jobs_param', 'idx', 'fix_imbalance', 'exp_id', 'fold_shuffle_param', 'gpu_param', 'exp_name_log', '_ml_usecase', 'data', 'y_test', 'y_train', 'y', 'X_train', 'is_multiclass', 'log_plots_param', 'fold_groups_param', 'fold_generator', 'memory', 'gpu_n_jobs_param', 'html_param'}
2025-04-01 20:29:21,164:INFO:Checking environment
2025-04-01 20:29:21,164:INFO:python_version: 3.10.16
2025-04-01 20:29:21,164:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 20:29:21,164:INFO:machine: arm64
2025-04-01 20:29:21,179:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 20:29:21,179:INFO:Memory: svmem(total=17179869184, available=4021059584, percent=76.6, used=5853249536, free=65896448, active=3970269184, inactive=3853549568, wired=1882980352)
2025-04-01 20:29:21,179:INFO:Physical Core: 8
2025-04-01 20:29:21,179:INFO:Logical Core: 8
2025-04-01 20:29:21,179:INFO:Checking libraries
2025-04-01 20:29:21,179:INFO:System:
2025-04-01 20:29:21,179:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 20:29:21,179:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 20:29:21,179:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 20:29:21,179:INFO:PyCaret required dependencies:
2025-04-01 20:29:21,201:INFO:                 pip: 25.0.1
2025-04-01 20:29:21,201:INFO:          setuptools: 75.8.2
2025-04-01 20:29:21,201:INFO:             pycaret: 3.0.0
2025-04-01 20:29:21,201:INFO:             IPython: 8.34.0
2025-04-01 20:29:21,201:INFO:          ipywidgets: 8.1.5
2025-04-01 20:29:21,201:INFO:                tqdm: 4.67.1
2025-04-01 20:29:21,201:INFO:               numpy: 1.24.4
2025-04-01 20:29:21,201:INFO:              pandas: 1.5.3
2025-04-01 20:29:21,201:INFO:              jinja2: 3.1.6
2025-04-01 20:29:21,201:INFO:               scipy: 1.9.3
2025-04-01 20:29:21,201:INFO:              joblib: 1.2.0
2025-04-01 20:29:21,201:INFO:             sklearn: 1.1.3
2025-04-01 20:29:21,201:INFO:                pyod: 2.0.4
2025-04-01 20:29:21,201:INFO:            imblearn: 0.12.4
2025-04-01 20:29:21,201:INFO:   category_encoders: 2.7.0
2025-04-01 20:29:21,201:INFO:            lightgbm: 4.6.0
2025-04-01 20:29:21,201:INFO:               numba: 0.61.0
2025-04-01 20:29:21,201:INFO:            requests: 2.32.3
2025-04-01 20:29:21,201:INFO:          matplotlib: 3.10.1
2025-04-01 20:29:21,201:INFO:          scikitplot: 0.3.7
2025-04-01 20:29:21,201:INFO:         yellowbrick: 1.5
2025-04-01 20:29:21,201:INFO:              plotly: 5.24.1
2025-04-01 20:29:21,201:INFO:             kaleido: 0.2.1
2025-04-01 20:29:21,201:INFO:         statsmodels: 0.14.4
2025-04-01 20:29:21,201:INFO:              sktime: 0.36.0
2025-04-01 20:29:21,201:INFO:               tbats: 1.1.3
2025-04-01 20:29:21,201:INFO:            pmdarima: 2.0.4
2025-04-01 20:29:21,201:INFO:              psutil: 7.0.0
2025-04-01 20:29:21,201:INFO:PyCaret optional dependencies:
2025-04-01 20:29:21,320:INFO:                shap: Not installed
2025-04-01 20:29:21,320:INFO:           interpret: Not installed
2025-04-01 20:29:21,320:INFO:                umap: Not installed
2025-04-01 20:29:21,320:INFO:    pandas_profiling: Not installed
2025-04-01 20:29:21,320:INFO:  explainerdashboard: Not installed
2025-04-01 20:29:21,320:INFO:             autoviz: Not installed
2025-04-01 20:29:21,320:INFO:           fairlearn: Not installed
2025-04-01 20:29:21,320:INFO:             xgboost: Not installed
2025-04-01 20:29:21,320:INFO:            catboost: Not installed
2025-04-01 20:29:21,320:INFO:              kmodes: Not installed
2025-04-01 20:29:21,320:INFO:             mlxtend: Not installed
2025-04-01 20:29:21,320:INFO:       statsforecast: Not installed
2025-04-01 20:29:21,320:INFO:        tune_sklearn: Not installed
2025-04-01 20:29:21,320:INFO:                 ray: Not installed
2025-04-01 20:29:21,320:INFO:            hyperopt: Not installed
2025-04-01 20:29:21,320:INFO:              optuna: Not installed
2025-04-01 20:29:21,320:INFO:               skopt: Not installed
2025-04-01 20:29:21,320:INFO:              mlflow: 2.21.2
2025-04-01 20:29:21,320:INFO:              gradio: Not installed
2025-04-01 20:29:21,320:INFO:             fastapi: 0.115.12
2025-04-01 20:29:21,320:INFO:             uvicorn: 0.34.0
2025-04-01 20:29:21,320:INFO:              m2cgen: Not installed
2025-04-01 20:29:21,320:INFO:           evidently: Not installed
2025-04-01 20:29:21,320:INFO:               fugue: Not installed
2025-04-01 20:29:21,320:INFO:           streamlit: 1.44.0
2025-04-01 20:29:21,320:INFO:             prophet: Not installed
2025-04-01 20:29:21,320:INFO:None
2025-04-01 20:29:21,320:INFO:Set up data.
2025-04-01 20:29:21,323:INFO:Set up train/test split.
2025-04-01 20:29:21,327:INFO:Set up index.
2025-04-01 20:29:21,327:INFO:Set up folding strategy.
2025-04-01 20:29:21,327:INFO:Assigning column types.
2025-04-01 20:29:21,328:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 20:29:21,347:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:29:21,348:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:29:21,361:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,362:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,380:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:29:21,380:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:29:21,391:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,391:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,391:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 20:29:21,410:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:29:21,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,440:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:29:21,452:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,452:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,452:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 20:29:21,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,515:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,515:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,516:INFO:Preparing preprocessing pipeline...
2025-04-01 20:29:21,517:INFO:Set up simple imputation.
2025-04-01 20:29:21,526:INFO:Finished creating preprocessing pipeline.
2025-04-01 20:29:21,528:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 20:29:21,528:INFO:Creating final display dataframe.
2025-04-01 20:29:21,554:INFO:Setup _display_container:                     Description            Value
0                    Session id              123
1                        Target   shot_made_flag
2                   Target type           Binary
3           Original data shape       (16228, 7)
4        Transformed data shape       (16228, 7)
5   Transformed train set shape       (11359, 7)
6    Transformed test set shape        (4869, 7)
7              Numeric features                6
8                    Preprocess             True
9               Imputation type           simple
10           Numeric imputation             mean
11       Categorical imputation             mode
12               Fold Generator  StratifiedKFold
13                  Fold Number               10
14                     CPU Jobs               -1
15                      Use GPU            False
16               Log Experiment     MlflowLogger
17              Experiment Name      Treinamento
18                          USI             0110
2025-04-01 20:29:21,585:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,585:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,615:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,616:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:29:21,616:INFO:Logging experiment in loggers
2025-04-01 20:31:55,888:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:31:55,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:31:55,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:31:55,889:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:31:56,392:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:31:56,924:INFO:PyCaret ClassificationExperiment
2025-04-01 20:31:56,924:INFO:Logging name: clf-default-name
2025-04-01 20:31:56,924:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 20:31:56,924:INFO:version 3.0.0
2025-04-01 20:31:56,924:INFO:Initializing setup()
2025-04-01 20:31:56,924:INFO:self.USI: 4122
2025-04-01 20:31:56,924:INFO:self._variable_keys: {'data', 'exp_name_log', '_ml_usecase', 'USI', 'X_train', 'gpu_n_jobs_param', 'is_multiclass', 'idx', 'logging_param', 'n_jobs_param', 'exp_id', '_available_plots', 'y', 'y_train', 'html_param', 'y_test', 'fix_imbalance', 'fold_generator', 'seed', 'target_param', 'gpu_param', 'X', 'log_plots_param', 'X_test', 'fold_groups_param', 'pipeline', 'fold_shuffle_param', 'memory'}
2025-04-01 20:31:56,924:INFO:Checking environment
2025-04-01 20:31:56,924:INFO:python_version: 3.10.16
2025-04-01 20:31:56,924:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 20:31:56,924:INFO:machine: arm64
2025-04-01 20:31:56,944:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 20:31:56,944:INFO:Memory: svmem(total=17179869184, available=3868688384, percent=77.5, used=5689442304, free=81985536, active=3798138880, inactive=3687284736, wired=1891303424)
2025-04-01 20:31:56,944:INFO:Physical Core: 8
2025-04-01 20:31:56,944:INFO:Logical Core: 8
2025-04-01 20:31:56,944:INFO:Checking libraries
2025-04-01 20:31:56,944:INFO:System:
2025-04-01 20:31:56,944:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 20:31:56,944:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 20:31:56,944:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 20:31:56,944:INFO:PyCaret required dependencies:
2025-04-01 20:31:56,966:INFO:                 pip: 25.0.1
2025-04-01 20:31:56,966:INFO:          setuptools: 75.8.2
2025-04-01 20:31:56,966:INFO:             pycaret: 3.0.0
2025-04-01 20:31:56,966:INFO:             IPython: 8.34.0
2025-04-01 20:31:56,966:INFO:          ipywidgets: 8.1.5
2025-04-01 20:31:56,966:INFO:                tqdm: 4.67.1
2025-04-01 20:31:56,966:INFO:               numpy: 1.24.4
2025-04-01 20:31:56,966:INFO:              pandas: 1.5.3
2025-04-01 20:31:56,966:INFO:              jinja2: 3.1.6
2025-04-01 20:31:56,966:INFO:               scipy: 1.9.3
2025-04-01 20:31:56,966:INFO:              joblib: 1.2.0
2025-04-01 20:31:56,966:INFO:             sklearn: 1.1.3
2025-04-01 20:31:56,966:INFO:                pyod: 2.0.4
2025-04-01 20:31:56,966:INFO:            imblearn: 0.12.4
2025-04-01 20:31:56,966:INFO:   category_encoders: 2.7.0
2025-04-01 20:31:56,966:INFO:            lightgbm: 4.6.0
2025-04-01 20:31:56,966:INFO:               numba: 0.61.0
2025-04-01 20:31:56,966:INFO:            requests: 2.32.3
2025-04-01 20:31:56,966:INFO:          matplotlib: 3.10.1
2025-04-01 20:31:56,966:INFO:          scikitplot: 0.3.7
2025-04-01 20:31:56,966:INFO:         yellowbrick: 1.5
2025-04-01 20:31:56,966:INFO:              plotly: 5.24.1
2025-04-01 20:31:56,966:INFO:             kaleido: 0.2.1
2025-04-01 20:31:56,966:INFO:         statsmodels: 0.14.4
2025-04-01 20:31:56,966:INFO:              sktime: 0.36.0
2025-04-01 20:31:56,966:INFO:               tbats: 1.1.3
2025-04-01 20:31:56,966:INFO:            pmdarima: 2.0.4
2025-04-01 20:31:56,966:INFO:              psutil: 7.0.0
2025-04-01 20:31:56,966:INFO:PyCaret optional dependencies:
2025-04-01 20:31:57,084:INFO:                shap: Not installed
2025-04-01 20:31:57,084:INFO:           interpret: Not installed
2025-04-01 20:31:57,085:INFO:                umap: Not installed
2025-04-01 20:31:57,085:INFO:    pandas_profiling: Not installed
2025-04-01 20:31:57,085:INFO:  explainerdashboard: Not installed
2025-04-01 20:31:57,085:INFO:             autoviz: Not installed
2025-04-01 20:31:57,085:INFO:           fairlearn: Not installed
2025-04-01 20:31:57,085:INFO:             xgboost: Not installed
2025-04-01 20:31:57,085:INFO:            catboost: Not installed
2025-04-01 20:31:57,085:INFO:              kmodes: Not installed
2025-04-01 20:31:57,085:INFO:             mlxtend: Not installed
2025-04-01 20:31:57,085:INFO:       statsforecast: Not installed
2025-04-01 20:31:57,085:INFO:        tune_sklearn: Not installed
2025-04-01 20:31:57,085:INFO:                 ray: Not installed
2025-04-01 20:31:57,085:INFO:            hyperopt: Not installed
2025-04-01 20:31:57,085:INFO:              optuna: Not installed
2025-04-01 20:31:57,085:INFO:               skopt: Not installed
2025-04-01 20:31:57,085:INFO:              mlflow: 2.21.2
2025-04-01 20:31:57,085:INFO:              gradio: Not installed
2025-04-01 20:31:57,085:INFO:             fastapi: 0.115.12
2025-04-01 20:31:57,085:INFO:             uvicorn: 0.34.0
2025-04-01 20:31:57,085:INFO:              m2cgen: Not installed
2025-04-01 20:31:57,085:INFO:           evidently: Not installed
2025-04-01 20:31:57,085:INFO:               fugue: Not installed
2025-04-01 20:31:57,085:INFO:           streamlit: 1.44.0
2025-04-01 20:31:57,085:INFO:             prophet: Not installed
2025-04-01 20:31:57,085:INFO:None
2025-04-01 20:31:57,085:INFO:Set up data.
2025-04-01 20:31:57,088:INFO:Set up train/test split.
2025-04-01 20:31:57,092:INFO:Set up index.
2025-04-01 20:31:57,092:INFO:Set up folding strategy.
2025-04-01 20:31:57,092:INFO:Assigning column types.
2025-04-01 20:31:57,093:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 20:31:57,111:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:31:57,112:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:31:57,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,144:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:31:57,144:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:31:57,156:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,156:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,156:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 20:31:57,174:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:31:57,185:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,185:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,203:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:31:57,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,215:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 20:31:57,244:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,245:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,274:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,276:INFO:Preparing preprocessing pipeline...
2025-04-01 20:31:57,276:INFO:Set up simple imputation.
2025-04-01 20:31:57,286:INFO:Finished creating preprocessing pipeline.
2025-04-01 20:31:57,288:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 20:31:57,288:INFO:Creating final display dataframe.
2025-04-01 20:31:57,315:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4122
2025-04-01 20:31:57,349:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,349:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:31:57,380:INFO:setup() successfully completed in 0.46s...............
2025-04-01 20:31:57,380:INFO:Initializing create_model()
2025-04-01 20:31:57,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cc91e0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 20:31:57,380:INFO:Checking exceptions
2025-04-01 20:31:57,394:INFO:Importing libraries
2025-04-01 20:31:57,394:INFO:Copying training dataset
2025-04-01 20:31:57,397:INFO:Defining folds
2025-04-01 20:31:57,397:INFO:Declaring metric variables
2025-04-01 20:31:57,397:INFO:Importing untrained model
2025-04-01 20:31:57,397:INFO:Logistic Regression Imported successfully
2025-04-01 20:31:57,398:INFO:Starting cross validation
2025-04-01 20:31:57,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 20:32:01,060:INFO:Calculating mean and std
2025-04-01 20:32:01,061:INFO:Creating metrics dataframe
2025-04-01 20:32:01,063:INFO:Finalizing model
2025-04-01 20:32:01,121:INFO:Uploading results into container
2025-04-01 20:32:01,121:INFO:Uploading model into container now
2025-04-01 20:32:01,125:INFO:_master_model_container: 1
2025-04-01 20:32:01,126:INFO:_display_container: 2
2025-04-01 20:32:01,126:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 20:32:01,126:INFO:create_model() successfully completed......................................
2025-04-01 20:32:01,225:INFO:Initializing predict_model()
2025-04-01 20:32:01,225:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x177cc91e0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x17afb1480>)
2025-04-01 20:32:01,225:INFO:Checking exceptions
2025-04-01 20:32:01,225:INFO:Preloading libraries
2025-04-01 20:32:01,225:INFO:Set up data.
2025-04-01 20:32:01,231:INFO:Set up index.
2025-04-01 20:33:22,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:33:22,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:33:22,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:33:22,094:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 20:33:22,592:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 20:33:23,227:INFO:PyCaret ClassificationExperiment
2025-04-01 20:33:23,227:INFO:Logging name: clf-default-name
2025-04-01 20:33:23,227:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 20:33:23,227:INFO:version 3.0.0
2025-04-01 20:33:23,227:INFO:Initializing setup()
2025-04-01 20:33:23,227:INFO:self.USI: d962
2025-04-01 20:33:23,227:INFO:self._variable_keys: {'X_test', 'memory', 'gpu_param', 'n_jobs_param', 'target_param', 'html_param', 'fold_generator', 'y_test', 'y', 'seed', 'data', 'X_train', 'fold_shuffle_param', 'idx', 'USI', 'fold_groups_param', 'pipeline', 'logging_param', 'exp_name_log', 'exp_id', 'log_plots_param', 'X', '_ml_usecase', 'y_train', 'is_multiclass', '_available_plots', 'gpu_n_jobs_param', 'fix_imbalance'}
2025-04-01 20:33:23,227:INFO:Checking environment
2025-04-01 20:33:23,227:INFO:python_version: 3.10.16
2025-04-01 20:33:23,227:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 20:33:23,227:INFO:machine: arm64
2025-04-01 20:33:23,242:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 20:33:23,242:INFO:Memory: svmem(total=17179869184, available=3878961152, percent=77.4, used=5847220224, free=66830336, active=3829219328, inactive=3678535680, wired=2018000896)
2025-04-01 20:33:23,242:INFO:Physical Core: 8
2025-04-01 20:33:23,242:INFO:Logical Core: 8
2025-04-01 20:33:23,242:INFO:Checking libraries
2025-04-01 20:33:23,242:INFO:System:
2025-04-01 20:33:23,242:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 20:33:23,242:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 20:33:23,242:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 20:33:23,242:INFO:PyCaret required dependencies:
2025-04-01 20:33:23,264:INFO:                 pip: 25.0.1
2025-04-01 20:33:23,264:INFO:          setuptools: 75.8.2
2025-04-01 20:33:23,264:INFO:             pycaret: 3.0.0
2025-04-01 20:33:23,264:INFO:             IPython: 8.34.0
2025-04-01 20:33:23,264:INFO:          ipywidgets: 8.1.5
2025-04-01 20:33:23,264:INFO:                tqdm: 4.67.1
2025-04-01 20:33:23,264:INFO:               numpy: 1.24.4
2025-04-01 20:33:23,264:INFO:              pandas: 1.5.3
2025-04-01 20:33:23,264:INFO:              jinja2: 3.1.6
2025-04-01 20:33:23,264:INFO:               scipy: 1.9.3
2025-04-01 20:33:23,264:INFO:              joblib: 1.2.0
2025-04-01 20:33:23,264:INFO:             sklearn: 1.1.3
2025-04-01 20:33:23,264:INFO:                pyod: 2.0.4
2025-04-01 20:33:23,264:INFO:            imblearn: 0.12.4
2025-04-01 20:33:23,264:INFO:   category_encoders: 2.7.0
2025-04-01 20:33:23,265:INFO:            lightgbm: 4.6.0
2025-04-01 20:33:23,265:INFO:               numba: 0.61.0
2025-04-01 20:33:23,265:INFO:            requests: 2.32.3
2025-04-01 20:33:23,265:INFO:          matplotlib: 3.10.1
2025-04-01 20:33:23,265:INFO:          scikitplot: 0.3.7
2025-04-01 20:33:23,265:INFO:         yellowbrick: 1.5
2025-04-01 20:33:23,265:INFO:              plotly: 5.24.1
2025-04-01 20:33:23,265:INFO:             kaleido: 0.2.1
2025-04-01 20:33:23,265:INFO:         statsmodels: 0.14.4
2025-04-01 20:33:23,265:INFO:              sktime: 0.36.0
2025-04-01 20:33:23,265:INFO:               tbats: 1.1.3
2025-04-01 20:33:23,265:INFO:            pmdarima: 2.0.4
2025-04-01 20:33:23,265:INFO:              psutil: 7.0.0
2025-04-01 20:33:23,265:INFO:PyCaret optional dependencies:
2025-04-01 20:33:23,386:INFO:                shap: Not installed
2025-04-01 20:33:23,386:INFO:           interpret: Not installed
2025-04-01 20:33:23,386:INFO:                umap: Not installed
2025-04-01 20:33:23,386:INFO:    pandas_profiling: Not installed
2025-04-01 20:33:23,386:INFO:  explainerdashboard: Not installed
2025-04-01 20:33:23,386:INFO:             autoviz: Not installed
2025-04-01 20:33:23,386:INFO:           fairlearn: Not installed
2025-04-01 20:33:23,386:INFO:             xgboost: Not installed
2025-04-01 20:33:23,386:INFO:            catboost: Not installed
2025-04-01 20:33:23,386:INFO:              kmodes: Not installed
2025-04-01 20:33:23,386:INFO:             mlxtend: Not installed
2025-04-01 20:33:23,386:INFO:       statsforecast: Not installed
2025-04-01 20:33:23,386:INFO:        tune_sklearn: Not installed
2025-04-01 20:33:23,386:INFO:                 ray: Not installed
2025-04-01 20:33:23,386:INFO:            hyperopt: Not installed
2025-04-01 20:33:23,386:INFO:              optuna: Not installed
2025-04-01 20:33:23,386:INFO:               skopt: Not installed
2025-04-01 20:33:23,386:INFO:              mlflow: 2.21.2
2025-04-01 20:33:23,386:INFO:              gradio: Not installed
2025-04-01 20:33:23,386:INFO:             fastapi: 0.115.12
2025-04-01 20:33:23,386:INFO:             uvicorn: 0.34.0
2025-04-01 20:33:23,386:INFO:              m2cgen: Not installed
2025-04-01 20:33:23,386:INFO:           evidently: Not installed
2025-04-01 20:33:23,386:INFO:               fugue: Not installed
2025-04-01 20:33:23,386:INFO:           streamlit: 1.44.0
2025-04-01 20:33:23,386:INFO:             prophet: Not installed
2025-04-01 20:33:23,386:INFO:None
2025-04-01 20:33:23,386:INFO:Set up data.
2025-04-01 20:33:23,389:INFO:Set up train/test split.
2025-04-01 20:33:23,393:INFO:Set up index.
2025-04-01 20:33:23,393:INFO:Set up folding strategy.
2025-04-01 20:33:23,393:INFO:Assigning column types.
2025-04-01 20:33:23,395:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 20:33:23,413:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:33:23,414:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:33:23,429:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,429:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,448:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 20:33:23,449:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:33:23,460:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,460:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 20:33:23,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:33:23,491:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,491:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 20:33:23,521:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,521:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,521:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 20:33:23,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,582:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,582:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,583:INFO:Preparing preprocessing pipeline...
2025-04-01 20:33:23,584:INFO:Set up simple imputation.
2025-04-01 20:33:23,594:INFO:Finished creating preprocessing pipeline.
2025-04-01 20:33:23,596:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 20:33:23,596:INFO:Creating final display dataframe.
2025-04-01 20:33:23,623:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              d962
2025-04-01 20:33:23,655:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,655:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,687:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,687:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 20:33:23,687:INFO:setup() successfully completed in 0.46s...............
2025-04-01 20:33:23,687:INFO:Initializing create_model()
2025-04-01 20:33:23,687:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x162cc5570>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 20:33:23,687:INFO:Checking exceptions
2025-04-01 20:33:23,702:INFO:Importing libraries
2025-04-01 20:33:23,703:INFO:Copying training dataset
2025-04-01 20:33:23,706:INFO:Defining folds
2025-04-01 20:33:23,706:INFO:Declaring metric variables
2025-04-01 20:33:23,706:INFO:Importing untrained model
2025-04-01 20:33:23,706:INFO:Logistic Regression Imported successfully
2025-04-01 20:33:23,706:INFO:Starting cross validation
2025-04-01 20:33:23,707:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 20:33:27,796:INFO:Calculating mean and std
2025-04-01 20:33:27,797:INFO:Creating metrics dataframe
2025-04-01 20:33:27,799:INFO:Finalizing model
2025-04-01 20:33:27,926:INFO:Uploading results into container
2025-04-01 20:33:27,927:INFO:Uploading model into container now
2025-04-01 20:33:27,935:INFO:_master_model_container: 1
2025-04-01 20:33:27,935:INFO:_display_container: 2
2025-04-01 20:33:27,935:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 20:33:27,935:INFO:create_model() successfully completed......................................
2025-04-01 20:33:28,051:INFO:Initializing predict_model()
2025-04-01 20:33:28,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x162cc5570>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x1640b1630>)
2025-04-01 20:33:28,051:INFO:Checking exceptions
2025-04-01 20:33:28,051:INFO:Preloading libraries
2025-04-01 20:33:28,051:INFO:Set up data.
2025-04-01 20:33:28,054:INFO:Set up index.
2025-04-01 21:21:46,465:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:21:46,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:21:46,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:21:46,466:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:21:46,988:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:21:47,572:INFO:PyCaret ClassificationExperiment
2025-04-01 21:21:47,572:INFO:Logging name: clf-default-name
2025-04-01 21:21:47,572:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 21:21:47,572:INFO:version 3.0.0
2025-04-01 21:21:47,572:INFO:Initializing setup()
2025-04-01 21:21:47,572:INFO:self.USI: e94c
2025-04-01 21:21:47,572:INFO:self._variable_keys: {'html_param', 'exp_name_log', 'USI', 'is_multiclass', 'target_param', 'logging_param', 'X_test', 'fold_shuffle_param', 'fold_generator', 'n_jobs_param', 'y_train', 'X', 'gpu_n_jobs_param', 'log_plots_param', 'idx', 'X_train', 'y', 'seed', 'data', 'gpu_param', 'y_test', '_available_plots', 'memory', 'exp_id', 'fold_groups_param', '_ml_usecase', 'pipeline', 'fix_imbalance'}
2025-04-01 21:21:47,572:INFO:Checking environment
2025-04-01 21:21:47,572:INFO:python_version: 3.10.16
2025-04-01 21:21:47,573:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 21:21:47,573:INFO:machine: arm64
2025-04-01 21:21:47,588:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 21:21:47,588:INFO:Memory: svmem(total=17179869184, available=3664478208, percent=78.7, used=5890686976, free=64520192, active=3612196864, inactive=3480666112, wired=2278490112)
2025-04-01 21:21:47,588:INFO:Physical Core: 8
2025-04-01 21:21:47,588:INFO:Logical Core: 8
2025-04-01 21:21:47,588:INFO:Checking libraries
2025-04-01 21:21:47,588:INFO:System:
2025-04-01 21:21:47,588:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 21:21:47,588:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 21:21:47,588:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 21:21:47,588:INFO:PyCaret required dependencies:
2025-04-01 21:21:47,612:INFO:                 pip: 25.0.1
2025-04-01 21:21:47,612:INFO:          setuptools: 75.8.2
2025-04-01 21:21:47,612:INFO:             pycaret: 3.0.0
2025-04-01 21:21:47,612:INFO:             IPython: 8.34.0
2025-04-01 21:21:47,612:INFO:          ipywidgets: 8.1.5
2025-04-01 21:21:47,612:INFO:                tqdm: 4.67.1
2025-04-01 21:21:47,612:INFO:               numpy: 1.24.4
2025-04-01 21:21:47,613:INFO:              pandas: 1.5.3
2025-04-01 21:21:47,613:INFO:              jinja2: 3.1.6
2025-04-01 21:21:47,613:INFO:               scipy: 1.9.3
2025-04-01 21:21:47,613:INFO:              joblib: 1.2.0
2025-04-01 21:21:47,613:INFO:             sklearn: 1.1.3
2025-04-01 21:21:47,613:INFO:                pyod: 2.0.4
2025-04-01 21:21:47,613:INFO:            imblearn: 0.12.4
2025-04-01 21:21:47,613:INFO:   category_encoders: 2.7.0
2025-04-01 21:21:47,613:INFO:            lightgbm: 4.6.0
2025-04-01 21:21:47,613:INFO:               numba: 0.61.0
2025-04-01 21:21:47,613:INFO:            requests: 2.32.3
2025-04-01 21:21:47,613:INFO:          matplotlib: 3.10.1
2025-04-01 21:21:47,613:INFO:          scikitplot: 0.3.7
2025-04-01 21:21:47,613:INFO:         yellowbrick: 1.5
2025-04-01 21:21:47,613:INFO:              plotly: 5.24.1
2025-04-01 21:21:47,613:INFO:             kaleido: 0.2.1
2025-04-01 21:21:47,613:INFO:         statsmodels: 0.14.4
2025-04-01 21:21:47,613:INFO:              sktime: 0.36.0
2025-04-01 21:21:47,613:INFO:               tbats: 1.1.3
2025-04-01 21:21:47,613:INFO:            pmdarima: 2.0.4
2025-04-01 21:21:47,613:INFO:              psutil: 7.0.0
2025-04-01 21:21:47,613:INFO:PyCaret optional dependencies:
2025-04-01 21:21:47,736:INFO:                shap: Not installed
2025-04-01 21:21:47,736:INFO:           interpret: Not installed
2025-04-01 21:21:47,736:INFO:                umap: Not installed
2025-04-01 21:21:47,736:INFO:    pandas_profiling: Not installed
2025-04-01 21:21:47,736:INFO:  explainerdashboard: Not installed
2025-04-01 21:21:47,736:INFO:             autoviz: Not installed
2025-04-01 21:21:47,736:INFO:           fairlearn: Not installed
2025-04-01 21:21:47,736:INFO:             xgboost: Not installed
2025-04-01 21:21:47,736:INFO:            catboost: Not installed
2025-04-01 21:21:47,736:INFO:              kmodes: Not installed
2025-04-01 21:21:47,736:INFO:             mlxtend: Not installed
2025-04-01 21:21:47,736:INFO:       statsforecast: Not installed
2025-04-01 21:21:47,736:INFO:        tune_sklearn: Not installed
2025-04-01 21:21:47,736:INFO:                 ray: Not installed
2025-04-01 21:21:47,736:INFO:            hyperopt: Not installed
2025-04-01 21:21:47,736:INFO:              optuna: Not installed
2025-04-01 21:21:47,736:INFO:               skopt: Not installed
2025-04-01 21:21:47,736:INFO:              mlflow: 2.21.2
2025-04-01 21:21:47,736:INFO:              gradio: Not installed
2025-04-01 21:21:47,736:INFO:             fastapi: 0.115.12
2025-04-01 21:21:47,736:INFO:             uvicorn: 0.34.0
2025-04-01 21:21:47,736:INFO:              m2cgen: Not installed
2025-04-01 21:21:47,737:INFO:           evidently: Not installed
2025-04-01 21:21:47,737:INFO:               fugue: Not installed
2025-04-01 21:21:47,737:INFO:           streamlit: 1.44.0
2025-04-01 21:21:47,737:INFO:             prophet: Not installed
2025-04-01 21:21:47,737:INFO:None
2025-04-01 21:21:47,737:INFO:Set up data.
2025-04-01 21:21:47,742:INFO:Set up train/test split.
2025-04-01 21:21:47,747:INFO:Set up index.
2025-04-01 21:21:47,747:INFO:Set up folding strategy.
2025-04-01 21:21:47,747:INFO:Assigning column types.
2025-04-01 21:21:47,748:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 21:21:47,767:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:21:47,768:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:21:47,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,800:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:21:47,800:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:21:47,812:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,812:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 21:21:47,831:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:21:47,842:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,843:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,861:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:21:47,873:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,873:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,873:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 21:21:47,903:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,934:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,934:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:47,936:INFO:Preparing preprocessing pipeline...
2025-04-01 21:21:47,937:INFO:Set up simple imputation.
2025-04-01 21:21:47,947:INFO:Finished creating preprocessing pipeline.
2025-04-01 21:21:47,949:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 21:21:47,949:INFO:Creating final display dataframe.
2025-04-01 21:21:47,977:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              e94c
2025-04-01 21:21:48,009:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:48,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:48,040:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:48,041:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:21:48,041:INFO:setup() successfully completed in 0.47s...............
2025-04-01 21:21:48,041:INFO:Initializing create_model()
2025-04-01 21:21:48,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x165dd9450>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:21:48,041:INFO:Checking exceptions
2025-04-01 21:21:48,055:INFO:Importing libraries
2025-04-01 21:21:48,055:INFO:Copying training dataset
2025-04-01 21:21:48,058:INFO:Defining folds
2025-04-01 21:21:48,058:INFO:Declaring metric variables
2025-04-01 21:21:48,058:INFO:Importing untrained model
2025-04-01 21:21:48,059:INFO:Logistic Regression Imported successfully
2025-04-01 21:21:48,059:INFO:Starting cross validation
2025-04-01 21:21:48,059:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:21:51,839:INFO:Calculating mean and std
2025-04-01 21:21:51,841:INFO:Creating metrics dataframe
2025-04-01 21:21:51,843:INFO:Finalizing model
2025-04-01 21:21:51,860:INFO:Uploading results into container
2025-04-01 21:21:51,860:INFO:Uploading model into container now
2025-04-01 21:21:51,865:INFO:_master_model_container: 1
2025-04-01 21:21:51,866:INFO:_display_container: 2
2025-04-01 21:21:51,866:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 21:21:51,866:INFO:create_model() successfully completed......................................
2025-04-01 21:21:51,935:INFO:Initializing predict_model()
2025-04-01 21:21:51,935:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x165dd9450>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x167131510>)
2025-04-01 21:21:51,935:INFO:Checking exceptions
2025-04-01 21:21:51,935:INFO:Preloading libraries
2025-04-01 21:21:51,936:INFO:Set up data.
2025-04-01 21:21:51,938:INFO:Set up index.
2025-04-01 21:21:52,089:INFO:Initializing create_model()
2025-04-01 21:21:52,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x165dd9450>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:21:52,089:INFO:Checking exceptions
2025-04-01 21:21:52,089:INFO:Importing libraries
2025-04-01 21:21:52,089:INFO:Copying training dataset
2025-04-01 21:21:52,092:INFO:Defining folds
2025-04-01 21:21:52,092:INFO:Declaring metric variables
2025-04-01 21:21:52,092:INFO:Importing untrained model
2025-04-01 21:21:52,092:INFO:Decision Tree Classifier Imported successfully
2025-04-01 21:21:52,092:INFO:Starting cross validation
2025-04-01 21:21:52,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:21:52,257:INFO:Calculating mean and std
2025-04-01 21:21:52,258:INFO:Creating metrics dataframe
2025-04-01 21:21:52,259:INFO:Finalizing model
2025-04-01 21:21:52,292:INFO:Uploading results into container
2025-04-01 21:21:52,292:INFO:Uploading model into container now
2025-04-01 21:21:52,296:INFO:_master_model_container: 2
2025-04-01 21:21:52,296:INFO:_display_container: 4
2025-04-01 21:21:52,296:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-01 21:21:52,296:INFO:create_model() successfully completed......................................
2025-04-01 21:21:52,353:INFO:Initializing predict_model()
2025-04-01 21:21:52,353:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x165dd9450>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x167131510>)
2025-04-01 21:21:52,353:INFO:Checking exceptions
2025-04-01 21:21:52,354:INFO:Preloading libraries
2025-04-01 21:21:52,354:INFO:Set up data.
2025-04-01 21:21:52,356:INFO:Set up index.
2025-04-01 21:21:52,437:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-01 21:22:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:37,957:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:38,425:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:22:38,874:INFO:PyCaret ClassificationExperiment
2025-04-01 21:22:38,874:INFO:Logging name: clf-default-name
2025-04-01 21:22:38,874:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 21:22:38,874:INFO:version 3.0.0
2025-04-01 21:22:38,874:INFO:Initializing setup()
2025-04-01 21:22:38,874:INFO:self.USI: 29ac
2025-04-01 21:22:38,874:INFO:self._variable_keys: {'fix_imbalance', 'idx', '_available_plots', 'y_test', 'target_param', 'X_train', 'exp_id', '_ml_usecase', 'memory', 'logging_param', 'log_plots_param', 'exp_name_log', 'gpu_param', 'y_train', 'fold_groups_param', 'html_param', 'y', 'pipeline', 'is_multiclass', 'X_test', 'data', 'n_jobs_param', 'fold_shuffle_param', 'fold_generator', 'gpu_n_jobs_param', 'X', 'seed', 'USI'}
2025-04-01 21:22:38,874:INFO:Checking environment
2025-04-01 21:22:38,874:INFO:python_version: 3.10.16
2025-04-01 21:22:38,874:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 21:22:38,874:INFO:machine: arm64
2025-04-01 21:22:38,888:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 21:22:38,888:INFO:Memory: svmem(total=17179869184, available=3877650432, percent=77.4, used=5534171136, free=367640576, active=3516481536, inactive=3452370944, wired=2017689600)
2025-04-01 21:22:38,888:INFO:Physical Core: 8
2025-04-01 21:22:38,888:INFO:Logical Core: 8
2025-04-01 21:22:38,888:INFO:Checking libraries
2025-04-01 21:22:38,888:INFO:System:
2025-04-01 21:22:38,888:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 21:22:38,888:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 21:22:38,888:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 21:22:38,888:INFO:PyCaret required dependencies:
2025-04-01 21:22:38,910:INFO:                 pip: 25.0.1
2025-04-01 21:22:38,910:INFO:          setuptools: 75.8.2
2025-04-01 21:22:38,910:INFO:             pycaret: 3.0.0
2025-04-01 21:22:38,910:INFO:             IPython: 8.34.0
2025-04-01 21:22:38,910:INFO:          ipywidgets: 8.1.5
2025-04-01 21:22:38,910:INFO:                tqdm: 4.67.1
2025-04-01 21:22:38,910:INFO:               numpy: 1.24.4
2025-04-01 21:22:38,910:INFO:              pandas: 1.5.3
2025-04-01 21:22:38,910:INFO:              jinja2: 3.1.6
2025-04-01 21:22:38,910:INFO:               scipy: 1.9.3
2025-04-01 21:22:38,910:INFO:              joblib: 1.2.0
2025-04-01 21:22:38,910:INFO:             sklearn: 1.1.3
2025-04-01 21:22:38,910:INFO:                pyod: 2.0.4
2025-04-01 21:22:38,910:INFO:            imblearn: 0.12.4
2025-04-01 21:22:38,910:INFO:   category_encoders: 2.7.0
2025-04-01 21:22:38,910:INFO:            lightgbm: 4.6.0
2025-04-01 21:22:38,910:INFO:               numba: 0.61.0
2025-04-01 21:22:38,910:INFO:            requests: 2.32.3
2025-04-01 21:22:38,910:INFO:          matplotlib: 3.10.1
2025-04-01 21:22:38,910:INFO:          scikitplot: 0.3.7
2025-04-01 21:22:38,910:INFO:         yellowbrick: 1.5
2025-04-01 21:22:38,910:INFO:              plotly: 5.24.1
2025-04-01 21:22:38,910:INFO:             kaleido: 0.2.1
2025-04-01 21:22:38,910:INFO:         statsmodels: 0.14.4
2025-04-01 21:22:38,910:INFO:              sktime: 0.36.0
2025-04-01 21:22:38,910:INFO:               tbats: 1.1.3
2025-04-01 21:22:38,910:INFO:            pmdarima: 2.0.4
2025-04-01 21:22:38,910:INFO:              psutil: 7.0.0
2025-04-01 21:22:38,910:INFO:PyCaret optional dependencies:
2025-04-01 21:22:39,026:INFO:                shap: Not installed
2025-04-01 21:22:39,026:INFO:           interpret: Not installed
2025-04-01 21:22:39,026:INFO:                umap: Not installed
2025-04-01 21:22:39,026:INFO:    pandas_profiling: Not installed
2025-04-01 21:22:39,026:INFO:  explainerdashboard: Not installed
2025-04-01 21:22:39,026:INFO:             autoviz: Not installed
2025-04-01 21:22:39,026:INFO:           fairlearn: Not installed
2025-04-01 21:22:39,026:INFO:             xgboost: Not installed
2025-04-01 21:22:39,026:INFO:            catboost: Not installed
2025-04-01 21:22:39,026:INFO:              kmodes: Not installed
2025-04-01 21:22:39,026:INFO:             mlxtend: Not installed
2025-04-01 21:22:39,026:INFO:       statsforecast: Not installed
2025-04-01 21:22:39,026:INFO:        tune_sklearn: Not installed
2025-04-01 21:22:39,026:INFO:                 ray: Not installed
2025-04-01 21:22:39,026:INFO:            hyperopt: Not installed
2025-04-01 21:22:39,026:INFO:              optuna: Not installed
2025-04-01 21:22:39,026:INFO:               skopt: Not installed
2025-04-01 21:22:39,026:INFO:              mlflow: 2.21.2
2025-04-01 21:22:39,026:INFO:              gradio: Not installed
2025-04-01 21:22:39,026:INFO:             fastapi: 0.115.12
2025-04-01 21:22:39,026:INFO:             uvicorn: 0.34.0
2025-04-01 21:22:39,026:INFO:              m2cgen: Not installed
2025-04-01 21:22:39,026:INFO:           evidently: Not installed
2025-04-01 21:22:39,026:INFO:               fugue: Not installed
2025-04-01 21:22:39,026:INFO:           streamlit: 1.44.0
2025-04-01 21:22:39,026:INFO:             prophet: Not installed
2025-04-01 21:22:39,026:INFO:None
2025-04-01 21:22:39,026:INFO:Set up data.
2025-04-01 21:22:39,029:INFO:Set up train/test split.
2025-04-01 21:22:39,033:INFO:Set up index.
2025-04-01 21:22:39,033:INFO:Set up folding strategy.
2025-04-01 21:22:39,033:INFO:Assigning column types.
2025-04-01 21:22:39,034:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 21:22:39,053:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:22:39,054:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:22:39,068:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,068:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:22:39,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:22:39,099:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,099:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,099:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 21:22:39,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:22:39,130:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,130:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,149:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:22:39,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,160:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,160:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 21:22:39,190:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,221:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,221:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,222:INFO:Preparing preprocessing pipeline...
2025-04-01 21:22:39,223:INFO:Set up simple imputation.
2025-04-01 21:22:39,232:INFO:Finished creating preprocessing pipeline.
2025-04-01 21:22:39,234:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 21:22:39,234:INFO:Creating final display dataframe.
2025-04-01 21:22:39,260:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              29ac
2025-04-01 21:22:39,292:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,292:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,323:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,323:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:22:39,323:INFO:setup() successfully completed in 0.45s...............
2025-04-01 21:22:39,323:INFO:Initializing create_model()
2025-04-01 21:22:39,323:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3059c9270>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:22:39,323:INFO:Checking exceptions
2025-04-01 21:22:39,337:INFO:Importing libraries
2025-04-01 21:22:39,338:INFO:Copying training dataset
2025-04-01 21:22:39,340:INFO:Defining folds
2025-04-01 21:22:39,340:INFO:Declaring metric variables
2025-04-01 21:22:39,341:INFO:Importing untrained model
2025-04-01 21:22:39,341:INFO:Logistic Regression Imported successfully
2025-04-01 21:22:39,341:INFO:Starting cross validation
2025-04-01 21:22:39,342:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:22:43,208:INFO:Calculating mean and std
2025-04-01 21:22:43,209:INFO:Creating metrics dataframe
2025-04-01 21:22:43,212:INFO:Finalizing model
2025-04-01 21:22:43,232:INFO:Uploading results into container
2025-04-01 21:22:43,233:INFO:Uploading model into container now
2025-04-01 21:22:43,238:INFO:_master_model_container: 1
2025-04-01 21:22:43,238:INFO:_display_container: 2
2025-04-01 21:22:43,238:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 21:22:43,239:INFO:create_model() successfully completed......................................
2025-04-01 21:22:43,361:INFO:Initializing predict_model()
2025-04-01 21:22:43,361:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3059c9270>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x308cb1510>)
2025-04-01 21:22:43,362:INFO:Checking exceptions
2025-04-01 21:22:43,362:INFO:Preloading libraries
2025-04-01 21:22:43,362:INFO:Set up data.
2025-04-01 21:22:43,364:INFO:Set up index.
2025-04-01 21:22:43,516:INFO:Initializing create_model()
2025-04-01 21:22:43,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3059c9270>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:22:43,516:INFO:Checking exceptions
2025-04-01 21:22:43,517:INFO:Importing libraries
2025-04-01 21:22:43,517:INFO:Copying training dataset
2025-04-01 21:22:43,518:INFO:Defining folds
2025-04-01 21:22:43,519:INFO:Declaring metric variables
2025-04-01 21:22:43,519:INFO:Importing untrained model
2025-04-01 21:22:43,519:INFO:Decision Tree Classifier Imported successfully
2025-04-01 21:22:43,519:INFO:Starting cross validation
2025-04-01 21:22:43,519:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:22:43,723:INFO:Calculating mean and std
2025-04-01 21:22:43,723:INFO:Creating metrics dataframe
2025-04-01 21:22:43,724:INFO:Finalizing model
2025-04-01 21:22:43,757:INFO:Uploading results into container
2025-04-01 21:22:43,758:INFO:Uploading model into container now
2025-04-01 21:22:43,761:INFO:_master_model_container: 2
2025-04-01 21:22:43,761:INFO:_display_container: 4
2025-04-01 21:22:43,762:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-01 21:22:43,762:INFO:create_model() successfully completed......................................
2025-04-01 21:22:43,827:INFO:Initializing predict_model()
2025-04-01 21:22:43,827:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3059c9270>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x308cb1510>)
2025-04-01 21:22:43,827:INFO:Checking exceptions
2025-04-01 21:22:43,827:INFO:Preloading libraries
2025-04-01 21:22:43,827:INFO:Set up data.
2025-04-01 21:22:43,829:INFO:Set up index.
2025-04-01 21:22:43,917:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-01 21:22:48,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:48,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:48,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:48,892:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:22:49,372:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:22:49,663:INFO:Initializing load_model()
2025-04-01 21:22:49,663:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-01 21:22:49,765:INFO:Initializing predict_model()
2025-04-01 21:22:49,765:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307af7130>, estimator=DecisionTreeClassifier(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x124c2dd80>)
2025-04-01 21:22:49,765:INFO:Checking exceptions
2025-04-01 21:22:49,765:INFO:Preloading libraries
2025-04-01 21:24:23,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:23,263:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:23,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:23,264:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:23,774:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:24:24,243:INFO:PyCaret ClassificationExperiment
2025-04-01 21:24:24,243:INFO:Logging name: clf-default-name
2025-04-01 21:24:24,243:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 21:24:24,243:INFO:version 3.0.0
2025-04-01 21:24:24,243:INFO:Initializing setup()
2025-04-01 21:24:24,243:INFO:self.USI: 4aa5
2025-04-01 21:24:24,243:INFO:self._variable_keys: {'y_train', 'gpu_param', 'html_param', 'data', 'fold_generator', 'pipeline', '_available_plots', 'logging_param', 'memory', 'target_param', 'is_multiclass', 'idx', 'gpu_n_jobs_param', '_ml_usecase', 'y_test', 'fold_groups_param', 'X', 'seed', 'exp_id', 'exp_name_log', 'n_jobs_param', 'fold_shuffle_param', 'X_test', 'log_plots_param', 'y', 'fix_imbalance', 'USI', 'X_train'}
2025-04-01 21:24:24,243:INFO:Checking environment
2025-04-01 21:24:24,243:INFO:python_version: 3.10.16
2025-04-01 21:24:24,243:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 21:24:24,243:INFO:machine: arm64
2025-04-01 21:24:24,258:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 21:24:24,258:INFO:Memory: svmem(total=17179869184, available=3842588672, percent=77.6, used=5817663488, free=63963136, active=3788570624, inactive=3731226624, wired=2029092864)
2025-04-01 21:24:24,258:INFO:Physical Core: 8
2025-04-01 21:24:24,258:INFO:Logical Core: 8
2025-04-01 21:24:24,258:INFO:Checking libraries
2025-04-01 21:24:24,258:INFO:System:
2025-04-01 21:24:24,258:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 21:24:24,258:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 21:24:24,258:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 21:24:24,258:INFO:PyCaret required dependencies:
2025-04-01 21:24:24,280:INFO:                 pip: 25.0.1
2025-04-01 21:24:24,280:INFO:          setuptools: 75.8.2
2025-04-01 21:24:24,280:INFO:             pycaret: 3.0.0
2025-04-01 21:24:24,280:INFO:             IPython: 8.34.0
2025-04-01 21:24:24,280:INFO:          ipywidgets: 8.1.5
2025-04-01 21:24:24,280:INFO:                tqdm: 4.67.1
2025-04-01 21:24:24,280:INFO:               numpy: 1.24.4
2025-04-01 21:24:24,280:INFO:              pandas: 1.5.3
2025-04-01 21:24:24,280:INFO:              jinja2: 3.1.6
2025-04-01 21:24:24,280:INFO:               scipy: 1.9.3
2025-04-01 21:24:24,281:INFO:              joblib: 1.2.0
2025-04-01 21:24:24,281:INFO:             sklearn: 1.1.3
2025-04-01 21:24:24,281:INFO:                pyod: 2.0.4
2025-04-01 21:24:24,281:INFO:            imblearn: 0.12.4
2025-04-01 21:24:24,281:INFO:   category_encoders: 2.7.0
2025-04-01 21:24:24,281:INFO:            lightgbm: 4.6.0
2025-04-01 21:24:24,281:INFO:               numba: 0.61.0
2025-04-01 21:24:24,281:INFO:            requests: 2.32.3
2025-04-01 21:24:24,281:INFO:          matplotlib: 3.10.1
2025-04-01 21:24:24,281:INFO:          scikitplot: 0.3.7
2025-04-01 21:24:24,281:INFO:         yellowbrick: 1.5
2025-04-01 21:24:24,281:INFO:              plotly: 5.24.1
2025-04-01 21:24:24,281:INFO:             kaleido: 0.2.1
2025-04-01 21:24:24,281:INFO:         statsmodels: 0.14.4
2025-04-01 21:24:24,281:INFO:              sktime: 0.36.0
2025-04-01 21:24:24,281:INFO:               tbats: 1.1.3
2025-04-01 21:24:24,281:INFO:            pmdarima: 2.0.4
2025-04-01 21:24:24,281:INFO:              psutil: 7.0.0
2025-04-01 21:24:24,281:INFO:PyCaret optional dependencies:
2025-04-01 21:24:24,399:INFO:                shap: Not installed
2025-04-01 21:24:24,399:INFO:           interpret: Not installed
2025-04-01 21:24:24,399:INFO:                umap: Not installed
2025-04-01 21:24:24,399:INFO:    pandas_profiling: Not installed
2025-04-01 21:24:24,399:INFO:  explainerdashboard: Not installed
2025-04-01 21:24:24,399:INFO:             autoviz: Not installed
2025-04-01 21:24:24,399:INFO:           fairlearn: Not installed
2025-04-01 21:24:24,399:INFO:             xgboost: Not installed
2025-04-01 21:24:24,399:INFO:            catboost: Not installed
2025-04-01 21:24:24,399:INFO:              kmodes: Not installed
2025-04-01 21:24:24,399:INFO:             mlxtend: Not installed
2025-04-01 21:24:24,399:INFO:       statsforecast: Not installed
2025-04-01 21:24:24,399:INFO:        tune_sklearn: Not installed
2025-04-01 21:24:24,399:INFO:                 ray: Not installed
2025-04-01 21:24:24,399:INFO:            hyperopt: Not installed
2025-04-01 21:24:24,399:INFO:              optuna: Not installed
2025-04-01 21:24:24,399:INFO:               skopt: Not installed
2025-04-01 21:24:24,399:INFO:              mlflow: 2.21.2
2025-04-01 21:24:24,399:INFO:              gradio: Not installed
2025-04-01 21:24:24,399:INFO:             fastapi: 0.115.12
2025-04-01 21:24:24,399:INFO:             uvicorn: 0.34.0
2025-04-01 21:24:24,399:INFO:              m2cgen: Not installed
2025-04-01 21:24:24,399:INFO:           evidently: Not installed
2025-04-01 21:24:24,399:INFO:               fugue: Not installed
2025-04-01 21:24:24,399:INFO:           streamlit: 1.44.0
2025-04-01 21:24:24,399:INFO:             prophet: Not installed
2025-04-01 21:24:24,399:INFO:None
2025-04-01 21:24:24,399:INFO:Set up data.
2025-04-01 21:24:24,402:INFO:Set up train/test split.
2025-04-01 21:24:24,406:INFO:Set up index.
2025-04-01 21:24:24,406:INFO:Set up folding strategy.
2025-04-01 21:24:24,406:INFO:Assigning column types.
2025-04-01 21:24:24,407:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 21:24:24,426:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:24:24,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:24:24,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,460:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:24:24,460:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:24:24,471:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,472:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,472:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 21:24:24,491:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:24:24,502:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,502:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,521:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:24:24,533:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,533:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,533:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 21:24:24,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,596:INFO:Preparing preprocessing pipeline...
2025-04-01 21:24:24,597:INFO:Set up simple imputation.
2025-04-01 21:24:24,607:INFO:Finished creating preprocessing pipeline.
2025-04-01 21:24:24,609:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 21:24:24,609:INFO:Creating final display dataframe.
2025-04-01 21:24:24,635:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4aa5
2025-04-01 21:24:24,667:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,667:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,699:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:24:24,699:INFO:setup() successfully completed in 0.46s...............
2025-04-01 21:24:24,699:INFO:Initializing create_model()
2025-04-01 21:24:24,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc93c0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:24:24,699:INFO:Checking exceptions
2025-04-01 21:24:24,715:INFO:Importing libraries
2025-04-01 21:24:24,716:INFO:Copying training dataset
2025-04-01 21:24:24,720:INFO:Defining folds
2025-04-01 21:24:24,720:INFO:Declaring metric variables
2025-04-01 21:24:24,721:INFO:Importing untrained model
2025-04-01 21:24:24,721:INFO:Logistic Regression Imported successfully
2025-04-01 21:24:24,721:INFO:Starting cross validation
2025-04-01 21:24:24,722:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:24:28,447:INFO:Calculating mean and std
2025-04-01 21:24:28,448:INFO:Creating metrics dataframe
2025-04-01 21:24:28,452:INFO:Finalizing model
2025-04-01 21:24:28,475:INFO:Uploading results into container
2025-04-01 21:24:28,476:INFO:Uploading model into container now
2025-04-01 21:24:28,481:INFO:_master_model_container: 1
2025-04-01 21:24:28,481:INFO:_display_container: 2
2025-04-01 21:24:28,482:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 21:24:28,482:INFO:create_model() successfully completed......................................
2025-04-01 21:24:28,577:INFO:Initializing predict_model()
2025-04-01 21:24:28,577:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc93c0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30afb1510>)
2025-04-01 21:24:28,577:INFO:Checking exceptions
2025-04-01 21:24:28,577:INFO:Preloading libraries
2025-04-01 21:24:28,578:INFO:Set up data.
2025-04-01 21:24:28,580:INFO:Set up index.
2025-04-01 21:24:28,713:INFO:Initializing create_model()
2025-04-01 21:24:28,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc93c0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:24:28,713:INFO:Checking exceptions
2025-04-01 21:24:28,713:INFO:Importing libraries
2025-04-01 21:24:28,713:INFO:Copying training dataset
2025-04-01 21:24:28,715:INFO:Defining folds
2025-04-01 21:24:28,715:INFO:Declaring metric variables
2025-04-01 21:24:28,715:INFO:Importing untrained model
2025-04-01 21:24:28,716:INFO:Decision Tree Classifier Imported successfully
2025-04-01 21:24:28,716:INFO:Starting cross validation
2025-04-01 21:24:28,716:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:24:28,936:INFO:Calculating mean and std
2025-04-01 21:24:28,936:INFO:Creating metrics dataframe
2025-04-01 21:24:28,937:INFO:Finalizing model
2025-04-01 21:24:28,971:INFO:Uploading results into container
2025-04-01 21:24:28,971:INFO:Uploading model into container now
2025-04-01 21:24:28,975:INFO:_master_model_container: 2
2025-04-01 21:24:28,975:INFO:_display_container: 4
2025-04-01 21:24:28,975:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-01 21:24:28,975:INFO:create_model() successfully completed......................................
2025-04-01 21:24:29,032:INFO:Initializing predict_model()
2025-04-01 21:24:29,032:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc93c0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30afb1510>)
2025-04-01 21:24:29,032:INFO:Checking exceptions
2025-04-01 21:24:29,032:INFO:Preloading libraries
2025-04-01 21:24:29,032:INFO:Set up data.
2025-04-01 21:24:29,034:INFO:Set up index.
2025-04-01 21:24:29,115:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-01 21:24:33,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:33,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:33,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:33,933:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:24:34,364:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:24:34,645:INFO:Initializing load_model()
2025-04-01 21:24:34,645:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-01 21:24:34,711:INFO:Initializing predict_model()
2025-04-01 21:24:34,711:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3082d3730>, estimator=DecisionTreeClassifier(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x12df55d80>)
2025-04-01 21:24:34,711:INFO:Checking exceptions
2025-04-01 21:24:34,711:INFO:Preloading libraries
2025-04-01 21:25:17,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:17,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:17,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:17,111:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:17,605:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:25:18,063:INFO:PyCaret ClassificationExperiment
2025-04-01 21:25:18,063:INFO:Logging name: clf-default-name
2025-04-01 21:25:18,063:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 21:25:18,063:INFO:version 3.0.0
2025-04-01 21:25:18,063:INFO:Initializing setup()
2025-04-01 21:25:18,063:INFO:self.USI: 4b25
2025-04-01 21:25:18,063:INFO:self._variable_keys: {'html_param', 'y_test', 'fold_groups_param', 'gpu_param', 'y_train', 'seed', 'logging_param', 'log_plots_param', 'idx', 'X', 'X_train', 'y', '_available_plots', 'exp_id', 'memory', 'X_test', 'exp_name_log', 'target_param', 'is_multiclass', 'fold_shuffle_param', 'fix_imbalance', 'pipeline', 'fold_generator', '_ml_usecase', 'USI', 'data', 'n_jobs_param', 'gpu_n_jobs_param'}
2025-04-01 21:25:18,063:INFO:Checking environment
2025-04-01 21:25:18,063:INFO:python_version: 3.10.16
2025-04-01 21:25:18,063:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 21:25:18,063:INFO:machine: arm64
2025-04-01 21:25:18,078:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 21:25:18,079:INFO:Memory: svmem(total=17179869184, available=3854401536, percent=77.6, used=5777096704, free=124485632, active=3743039488, inactive=3677650944, wired=2034057216)
2025-04-01 21:25:18,079:INFO:Physical Core: 8
2025-04-01 21:25:18,079:INFO:Logical Core: 8
2025-04-01 21:25:18,079:INFO:Checking libraries
2025-04-01 21:25:18,079:INFO:System:
2025-04-01 21:25:18,079:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 21:25:18,079:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 21:25:18,079:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 21:25:18,079:INFO:PyCaret required dependencies:
2025-04-01 21:25:18,100:INFO:                 pip: 25.0.1
2025-04-01 21:25:18,101:INFO:          setuptools: 75.8.2
2025-04-01 21:25:18,101:INFO:             pycaret: 3.0.0
2025-04-01 21:25:18,101:INFO:             IPython: 8.34.0
2025-04-01 21:25:18,101:INFO:          ipywidgets: 8.1.5
2025-04-01 21:25:18,101:INFO:                tqdm: 4.67.1
2025-04-01 21:25:18,101:INFO:               numpy: 1.24.4
2025-04-01 21:25:18,101:INFO:              pandas: 1.5.3
2025-04-01 21:25:18,101:INFO:              jinja2: 3.1.6
2025-04-01 21:25:18,101:INFO:               scipy: 1.9.3
2025-04-01 21:25:18,101:INFO:              joblib: 1.2.0
2025-04-01 21:25:18,101:INFO:             sklearn: 1.1.3
2025-04-01 21:25:18,101:INFO:                pyod: 2.0.4
2025-04-01 21:25:18,101:INFO:            imblearn: 0.12.4
2025-04-01 21:25:18,101:INFO:   category_encoders: 2.7.0
2025-04-01 21:25:18,101:INFO:            lightgbm: 4.6.0
2025-04-01 21:25:18,101:INFO:               numba: 0.61.0
2025-04-01 21:25:18,101:INFO:            requests: 2.32.3
2025-04-01 21:25:18,101:INFO:          matplotlib: 3.10.1
2025-04-01 21:25:18,101:INFO:          scikitplot: 0.3.7
2025-04-01 21:25:18,101:INFO:         yellowbrick: 1.5
2025-04-01 21:25:18,101:INFO:              plotly: 5.24.1
2025-04-01 21:25:18,101:INFO:             kaleido: 0.2.1
2025-04-01 21:25:18,101:INFO:         statsmodels: 0.14.4
2025-04-01 21:25:18,101:INFO:              sktime: 0.36.0
2025-04-01 21:25:18,101:INFO:               tbats: 1.1.3
2025-04-01 21:25:18,101:INFO:            pmdarima: 2.0.4
2025-04-01 21:25:18,101:INFO:              psutil: 7.0.0
2025-04-01 21:25:18,101:INFO:PyCaret optional dependencies:
2025-04-01 21:25:18,218:INFO:                shap: Not installed
2025-04-01 21:25:18,218:INFO:           interpret: Not installed
2025-04-01 21:25:18,218:INFO:                umap: Not installed
2025-04-01 21:25:18,218:INFO:    pandas_profiling: Not installed
2025-04-01 21:25:18,218:INFO:  explainerdashboard: Not installed
2025-04-01 21:25:18,218:INFO:             autoviz: Not installed
2025-04-01 21:25:18,218:INFO:           fairlearn: Not installed
2025-04-01 21:25:18,218:INFO:             xgboost: Not installed
2025-04-01 21:25:18,218:INFO:            catboost: Not installed
2025-04-01 21:25:18,218:INFO:              kmodes: Not installed
2025-04-01 21:25:18,218:INFO:             mlxtend: Not installed
2025-04-01 21:25:18,218:INFO:       statsforecast: Not installed
2025-04-01 21:25:18,218:INFO:        tune_sklearn: Not installed
2025-04-01 21:25:18,218:INFO:                 ray: Not installed
2025-04-01 21:25:18,218:INFO:            hyperopt: Not installed
2025-04-01 21:25:18,218:INFO:              optuna: Not installed
2025-04-01 21:25:18,218:INFO:               skopt: Not installed
2025-04-01 21:25:18,218:INFO:              mlflow: 2.21.2
2025-04-01 21:25:18,218:INFO:              gradio: Not installed
2025-04-01 21:25:18,218:INFO:             fastapi: 0.115.12
2025-04-01 21:25:18,218:INFO:             uvicorn: 0.34.0
2025-04-01 21:25:18,218:INFO:              m2cgen: Not installed
2025-04-01 21:25:18,218:INFO:           evidently: Not installed
2025-04-01 21:25:18,218:INFO:               fugue: Not installed
2025-04-01 21:25:18,218:INFO:           streamlit: 1.44.0
2025-04-01 21:25:18,218:INFO:             prophet: Not installed
2025-04-01 21:25:18,218:INFO:None
2025-04-01 21:25:18,218:INFO:Set up data.
2025-04-01 21:25:18,221:INFO:Set up train/test split.
2025-04-01 21:25:18,225:INFO:Set up index.
2025-04-01 21:25:18,225:INFO:Set up folding strategy.
2025-04-01 21:25:18,225:INFO:Assigning column types.
2025-04-01 21:25:18,226:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 21:25:18,244:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:25:18,245:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:25:18,259:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,277:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:25:18,278:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:25:18,289:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,289:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,289:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 21:25:18,307:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:25:18,318:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,319:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,337:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:25:18,348:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,348:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,348:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 21:25:18,378:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,378:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,407:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,407:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,409:INFO:Preparing preprocessing pipeline...
2025-04-01 21:25:18,410:INFO:Set up simple imputation.
2025-04-01 21:25:18,419:INFO:Finished creating preprocessing pipeline.
2025-04-01 21:25:18,421:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 21:25:18,421:INFO:Creating final display dataframe.
2025-04-01 21:25:18,447:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4b25
2025-04-01 21:25:18,478:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:25:18,509:INFO:setup() successfully completed in 0.45s...............
2025-04-01 21:25:18,509:INFO:Initializing create_model()
2025-04-01 21:25:18,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x306045660>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:25:18,509:INFO:Checking exceptions
2025-04-01 21:25:18,522:INFO:Importing libraries
2025-04-01 21:25:18,522:INFO:Copying training dataset
2025-04-01 21:25:18,525:INFO:Defining folds
2025-04-01 21:25:18,525:INFO:Declaring metric variables
2025-04-01 21:25:18,525:INFO:Importing untrained model
2025-04-01 21:25:18,525:INFO:Logistic Regression Imported successfully
2025-04-01 21:25:18,526:INFO:Starting cross validation
2025-04-01 21:25:18,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:25:22,416:INFO:Calculating mean and std
2025-04-01 21:25:22,417:INFO:Creating metrics dataframe
2025-04-01 21:25:22,421:INFO:Finalizing model
2025-04-01 21:25:22,440:INFO:Uploading results into container
2025-04-01 21:25:22,440:INFO:Uploading model into container now
2025-04-01 21:25:22,446:INFO:_master_model_container: 1
2025-04-01 21:25:22,446:INFO:_display_container: 2
2025-04-01 21:25:22,446:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 21:25:22,446:INFO:create_model() successfully completed......................................
2025-04-01 21:25:22,568:INFO:Initializing predict_model()
2025-04-01 21:25:22,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x306045660>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3093b1510>)
2025-04-01 21:25:22,568:INFO:Checking exceptions
2025-04-01 21:25:22,568:INFO:Preloading libraries
2025-04-01 21:25:22,568:INFO:Set up data.
2025-04-01 21:25:22,570:INFO:Set up index.
2025-04-01 21:25:22,702:INFO:Initializing create_model()
2025-04-01 21:25:22,702:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x306045660>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:25:22,702:INFO:Checking exceptions
2025-04-01 21:25:22,703:INFO:Importing libraries
2025-04-01 21:25:22,703:INFO:Copying training dataset
2025-04-01 21:25:22,712:INFO:Defining folds
2025-04-01 21:25:22,712:INFO:Declaring metric variables
2025-04-01 21:25:22,712:INFO:Importing untrained model
2025-04-01 21:25:22,713:INFO:Decision Tree Classifier Imported successfully
2025-04-01 21:25:22,713:INFO:Starting cross validation
2025-04-01 21:25:22,713:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:25:22,917:INFO:Calculating mean and std
2025-04-01 21:25:22,917:INFO:Creating metrics dataframe
2025-04-01 21:25:22,918:INFO:Finalizing model
2025-04-01 21:25:22,951:INFO:Uploading results into container
2025-04-01 21:25:22,951:INFO:Uploading model into container now
2025-04-01 21:25:22,955:INFO:_master_model_container: 2
2025-04-01 21:25:22,955:INFO:_display_container: 4
2025-04-01 21:25:22,955:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-01 21:25:22,955:INFO:create_model() successfully completed......................................
2025-04-01 21:25:23,014:INFO:Initializing predict_model()
2025-04-01 21:25:23,014:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x306045660>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3093b1510>)
2025-04-01 21:25:23,014:INFO:Checking exceptions
2025-04-01 21:25:23,014:INFO:Preloading libraries
2025-04-01 21:25:23,014:INFO:Set up data.
2025-04-01 21:25:23,016:INFO:Set up index.
2025-04-01 21:25:23,102:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-01 21:25:28,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:28,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:28,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:28,043:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:25:28,477:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:25:28,758:INFO:Initializing load_model()
2025-04-01 21:25:28,759:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-01 21:25:28,824:INFO:Initializing predict_model()
2025-04-01 21:25:28,824:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b2cf280>, estimator=DecisionTreeClassifier(random_state=123), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137e0dd80>)
2025-04-01 21:25:28,824:INFO:Checking exceptions
2025-04-01 21:25:28,824:INFO:Preloading libraries
2025-04-01 21:36:43,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:43,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:43,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:43,356:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:43,867:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:36:44,339:INFO:PyCaret ClassificationExperiment
2025-04-01 21:36:44,339:INFO:Logging name: clf-default-name
2025-04-01 21:36:44,339:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 21:36:44,339:INFO:version 3.0.0
2025-04-01 21:36:44,339:INFO:Initializing setup()
2025-04-01 21:36:44,339:INFO:self.USI: 32aa
2025-04-01 21:36:44,339:INFO:self._variable_keys: {'exp_id', 'seed', 'logging_param', '_ml_usecase', 'memory', 'data', 'y', 'X_test', 'log_plots_param', 'fold_generator', 'exp_name_log', 'idx', 'pipeline', 'fix_imbalance', 'y_test', 'X_train', 'is_multiclass', 'USI', 'gpu_param', 'y_train', 'gpu_n_jobs_param', 'html_param', 'target_param', 'fold_groups_param', 'fold_shuffle_param', '_available_plots', 'X', 'n_jobs_param'}
2025-04-01 21:36:44,339:INFO:Checking environment
2025-04-01 21:36:44,339:INFO:python_version: 3.10.16
2025-04-01 21:36:44,339:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 21:36:44,339:INFO:machine: arm64
2025-04-01 21:36:44,353:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 21:36:44,353:INFO:Memory: svmem(total=17179869184, available=3745251328, percent=78.2, used=5681823744, free=97140736, active=3656892416, inactive=3603103744, wired=2024931328)
2025-04-01 21:36:44,353:INFO:Physical Core: 8
2025-04-01 21:36:44,353:INFO:Logical Core: 8
2025-04-01 21:36:44,353:INFO:Checking libraries
2025-04-01 21:36:44,354:INFO:System:
2025-04-01 21:36:44,354:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 21:36:44,354:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 21:36:44,354:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 21:36:44,354:INFO:PyCaret required dependencies:
2025-04-01 21:36:44,375:INFO:                 pip: 25.0.1
2025-04-01 21:36:44,376:INFO:          setuptools: 75.8.2
2025-04-01 21:36:44,376:INFO:             pycaret: 3.0.0
2025-04-01 21:36:44,376:INFO:             IPython: 8.34.0
2025-04-01 21:36:44,376:INFO:          ipywidgets: 8.1.5
2025-04-01 21:36:44,376:INFO:                tqdm: 4.67.1
2025-04-01 21:36:44,376:INFO:               numpy: 1.24.4
2025-04-01 21:36:44,376:INFO:              pandas: 1.5.3
2025-04-01 21:36:44,376:INFO:              jinja2: 3.1.6
2025-04-01 21:36:44,376:INFO:               scipy: 1.9.3
2025-04-01 21:36:44,376:INFO:              joblib: 1.2.0
2025-04-01 21:36:44,376:INFO:             sklearn: 1.1.3
2025-04-01 21:36:44,376:INFO:                pyod: 2.0.4
2025-04-01 21:36:44,376:INFO:            imblearn: 0.12.4
2025-04-01 21:36:44,376:INFO:   category_encoders: 2.7.0
2025-04-01 21:36:44,376:INFO:            lightgbm: 4.6.0
2025-04-01 21:36:44,376:INFO:               numba: 0.61.0
2025-04-01 21:36:44,376:INFO:            requests: 2.32.3
2025-04-01 21:36:44,376:INFO:          matplotlib: 3.10.1
2025-04-01 21:36:44,376:INFO:          scikitplot: 0.3.7
2025-04-01 21:36:44,376:INFO:         yellowbrick: 1.5
2025-04-01 21:36:44,376:INFO:              plotly: 5.24.1
2025-04-01 21:36:44,376:INFO:             kaleido: 0.2.1
2025-04-01 21:36:44,376:INFO:         statsmodels: 0.14.4
2025-04-01 21:36:44,376:INFO:              sktime: 0.36.0
2025-04-01 21:36:44,376:INFO:               tbats: 1.1.3
2025-04-01 21:36:44,376:INFO:            pmdarima: 2.0.4
2025-04-01 21:36:44,376:INFO:              psutil: 7.0.0
2025-04-01 21:36:44,376:INFO:PyCaret optional dependencies:
2025-04-01 21:36:44,494:INFO:                shap: Not installed
2025-04-01 21:36:44,494:INFO:           interpret: Not installed
2025-04-01 21:36:44,494:INFO:                umap: Not installed
2025-04-01 21:36:44,495:INFO:    pandas_profiling: Not installed
2025-04-01 21:36:44,495:INFO:  explainerdashboard: Not installed
2025-04-01 21:36:44,495:INFO:             autoviz: Not installed
2025-04-01 21:36:44,495:INFO:           fairlearn: Not installed
2025-04-01 21:36:44,495:INFO:             xgboost: Not installed
2025-04-01 21:36:44,495:INFO:            catboost: Not installed
2025-04-01 21:36:44,495:INFO:              kmodes: Not installed
2025-04-01 21:36:44,495:INFO:             mlxtend: Not installed
2025-04-01 21:36:44,495:INFO:       statsforecast: Not installed
2025-04-01 21:36:44,495:INFO:        tune_sklearn: Not installed
2025-04-01 21:36:44,495:INFO:                 ray: Not installed
2025-04-01 21:36:44,495:INFO:            hyperopt: Not installed
2025-04-01 21:36:44,495:INFO:              optuna: Not installed
2025-04-01 21:36:44,495:INFO:               skopt: Not installed
2025-04-01 21:36:44,495:INFO:              mlflow: 2.21.2
2025-04-01 21:36:44,495:INFO:              gradio: Not installed
2025-04-01 21:36:44,495:INFO:             fastapi: 0.115.12
2025-04-01 21:36:44,495:INFO:             uvicorn: 0.34.0
2025-04-01 21:36:44,495:INFO:              m2cgen: Not installed
2025-04-01 21:36:44,495:INFO:           evidently: Not installed
2025-04-01 21:36:44,495:INFO:               fugue: Not installed
2025-04-01 21:36:44,495:INFO:           streamlit: 1.44.0
2025-04-01 21:36:44,495:INFO:             prophet: Not installed
2025-04-01 21:36:44,495:INFO:None
2025-04-01 21:36:44,495:INFO:Set up data.
2025-04-01 21:36:44,498:INFO:Set up train/test split.
2025-04-01 21:36:44,502:INFO:Set up index.
2025-04-01 21:36:44,502:INFO:Set up folding strategy.
2025-04-01 21:36:44,502:INFO:Assigning column types.
2025-04-01 21:36:44,503:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 21:36:44,521:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:36:44,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:36:44,536:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,536:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 21:36:44,554:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:36:44,565:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,565:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 21:36:44,583:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:36:44,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,613:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 21:36:44,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,624:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 21:36:44,653:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,653:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,682:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,684:INFO:Preparing preprocessing pipeline...
2025-04-01 21:36:44,685:INFO:Set up simple imputation.
2025-04-01 21:36:44,695:INFO:Finished creating preprocessing pipeline.
2025-04-01 21:36:44,696:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 21:36:44,696:INFO:Creating final display dataframe.
2025-04-01 21:36:44,723:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              32aa
2025-04-01 21:36:44,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,784:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,784:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 21:36:44,784:INFO:setup() successfully completed in 0.45s...............
2025-04-01 21:36:44,784:INFO:Initializing create_model()
2025-04-01 21:36:44,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3045bd930>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:36:44,784:INFO:Checking exceptions
2025-04-01 21:36:44,800:INFO:Importing libraries
2025-04-01 21:36:44,801:INFO:Copying training dataset
2025-04-01 21:36:44,803:INFO:Defining folds
2025-04-01 21:36:44,803:INFO:Declaring metric variables
2025-04-01 21:36:44,804:INFO:Importing untrained model
2025-04-01 21:36:44,804:INFO:Logistic Regression Imported successfully
2025-04-01 21:36:44,804:INFO:Starting cross validation
2025-04-01 21:36:44,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:36:48,548:INFO:Calculating mean and std
2025-04-01 21:36:48,549:INFO:Creating metrics dataframe
2025-04-01 21:36:48,551:INFO:Finalizing model
2025-04-01 21:36:48,565:INFO:Uploading results into container
2025-04-01 21:36:48,566:INFO:Uploading model into container now
2025-04-01 21:36:48,571:INFO:_master_model_container: 1
2025-04-01 21:36:48,571:INFO:_display_container: 2
2025-04-01 21:36:48,571:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 21:36:48,571:INFO:create_model() successfully completed......................................
2025-04-01 21:36:48,639:INFO:Initializing predict_model()
2025-04-01 21:36:48,639:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3045bd930>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3078b1510>)
2025-04-01 21:36:48,639:INFO:Checking exceptions
2025-04-01 21:36:48,639:INFO:Preloading libraries
2025-04-01 21:36:48,639:INFO:Set up data.
2025-04-01 21:36:48,641:INFO:Set up index.
2025-04-01 21:36:48,781:INFO:Initializing create_model()
2025-04-01 21:36:48,781:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3045bd930>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 21:36:48,781:INFO:Checking exceptions
2025-04-01 21:36:48,781:INFO:Importing libraries
2025-04-01 21:36:48,781:INFO:Copying training dataset
2025-04-01 21:36:48,787:INFO:Defining folds
2025-04-01 21:36:48,787:INFO:Declaring metric variables
2025-04-01 21:36:48,787:INFO:Importing untrained model
2025-04-01 21:36:48,788:INFO:Decision Tree Classifier Imported successfully
2025-04-01 21:36:48,789:INFO:Starting cross validation
2025-04-01 21:36:48,789:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 21:36:48,948:INFO:Calculating mean and std
2025-04-01 21:36:48,949:INFO:Creating metrics dataframe
2025-04-01 21:36:48,950:INFO:Finalizing model
2025-04-01 21:36:48,982:INFO:Uploading results into container
2025-04-01 21:36:48,982:INFO:Uploading model into container now
2025-04-01 21:36:48,986:INFO:_master_model_container: 2
2025-04-01 21:36:48,986:INFO:_display_container: 4
2025-04-01 21:36:48,987:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-01 21:36:48,987:INFO:create_model() successfully completed......................................
2025-04-01 21:36:49,044:INFO:Initializing predict_model()
2025-04-01 21:36:49,044:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3045bd930>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x304966170>)
2025-04-01 21:36:49,044:INFO:Checking exceptions
2025-04-01 21:36:49,044:INFO:Preloading libraries
2025-04-01 21:36:49,044:INFO:Set up data.
2025-04-01 21:36:49,046:INFO:Set up index.
2025-04-01 21:36:49,127:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-01 21:36:49,128:INFO:Initializing save_model()
2025-04-01 21:36:49,129:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-01 21:36:49,129:INFO:Adding model into prep_pipe
2025-04-01 21:36:49,131:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-01 21:36:49,134:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-01 21:36:49,134:INFO:save_model() successfully completed......................................
2025-04-01 21:36:54,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:54,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:54,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:54,074:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 21:36:54,501:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 21:36:54,781:INFO:Initializing load_model()
2025-04-01 21:36:54,781:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-01 21:36:54,866:INFO:Initializing predict_model()
2025-04-01 21:36:54,866:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x16f4c3430>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x12510dd80>)
2025-04-01 21:36:54,866:INFO:Checking exceptions
2025-04-01 21:36:54,866:INFO:Preloading libraries
2025-04-01 21:36:54,866:INFO:Set up data.
2025-04-01 21:36:54,873:INFO:Set up index.
2025-04-01 22:28:54,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:28:54,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:28:54,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:28:54,380:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:28:54,884:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 22:28:55,342:INFO:PyCaret ClassificationExperiment
2025-04-01 22:28:55,342:INFO:Logging name: clf-default-name
2025-04-01 22:28:55,342:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 22:28:55,343:INFO:version 3.0.0
2025-04-01 22:28:55,343:INFO:Initializing setup()
2025-04-01 22:28:55,343:INFO:self.USI: fbb4
2025-04-01 22:28:55,343:INFO:self._variable_keys: {'y', 'gpu_n_jobs_param', 'X_test', 'html_param', 'memory', 'logging_param', 'fold_shuffle_param', 'n_jobs_param', 'y_train', 'fold_groups_param', 'y_test', 'exp_name_log', 'data', 'USI', 'fold_generator', '_available_plots', 'target_param', 'log_plots_param', 'is_multiclass', 'idx', '_ml_usecase', 'gpu_param', 'pipeline', 'X', 'X_train', 'fix_imbalance', 'seed', 'exp_id'}
2025-04-01 22:28:55,343:INFO:Checking environment
2025-04-01 22:28:55,343:INFO:python_version: 3.10.16
2025-04-01 22:28:55,343:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 22:28:55,343:INFO:machine: arm64
2025-04-01 22:28:55,360:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 22:28:55,360:INFO:Memory: svmem(total=17179869184, available=5016748032, percent=70.8, used=6858735616, free=65585152, active=4968169472, inactive=4877631488, wired=1890566144)
2025-04-01 22:28:55,360:INFO:Physical Core: 8
2025-04-01 22:28:55,360:INFO:Logical Core: 8
2025-04-01 22:28:55,360:INFO:Checking libraries
2025-04-01 22:28:55,360:INFO:System:
2025-04-01 22:28:55,360:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 22:28:55,360:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 22:28:55,360:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 22:28:55,360:INFO:PyCaret required dependencies:
2025-04-01 22:28:55,383:INFO:                 pip: 25.0.1
2025-04-01 22:28:55,383:INFO:          setuptools: 75.8.2
2025-04-01 22:28:55,383:INFO:             pycaret: 3.0.0
2025-04-01 22:28:55,383:INFO:             IPython: 8.34.0
2025-04-01 22:28:55,383:INFO:          ipywidgets: 8.1.5
2025-04-01 22:28:55,383:INFO:                tqdm: 4.67.1
2025-04-01 22:28:55,383:INFO:               numpy: 1.24.4
2025-04-01 22:28:55,383:INFO:              pandas: 1.5.3
2025-04-01 22:28:55,383:INFO:              jinja2: 3.1.6
2025-04-01 22:28:55,383:INFO:               scipy: 1.9.3
2025-04-01 22:28:55,383:INFO:              joblib: 1.2.0
2025-04-01 22:28:55,383:INFO:             sklearn: 1.1.3
2025-04-01 22:28:55,383:INFO:                pyod: 2.0.4
2025-04-01 22:28:55,383:INFO:            imblearn: 0.12.4
2025-04-01 22:28:55,383:INFO:   category_encoders: 2.7.0
2025-04-01 22:28:55,383:INFO:            lightgbm: 4.6.0
2025-04-01 22:28:55,383:INFO:               numba: 0.61.0
2025-04-01 22:28:55,383:INFO:            requests: 2.32.3
2025-04-01 22:28:55,383:INFO:          matplotlib: 3.10.1
2025-04-01 22:28:55,383:INFO:          scikitplot: 0.3.7
2025-04-01 22:28:55,383:INFO:         yellowbrick: 1.5
2025-04-01 22:28:55,383:INFO:              plotly: 5.24.1
2025-04-01 22:28:55,383:INFO:             kaleido: 0.2.1
2025-04-01 22:28:55,383:INFO:         statsmodels: 0.14.4
2025-04-01 22:28:55,383:INFO:              sktime: 0.36.0
2025-04-01 22:28:55,383:INFO:               tbats: 1.1.3
2025-04-01 22:28:55,383:INFO:            pmdarima: 2.0.4
2025-04-01 22:28:55,383:INFO:              psutil: 7.0.0
2025-04-01 22:28:55,383:INFO:PyCaret optional dependencies:
2025-04-01 22:28:55,504:INFO:                shap: Not installed
2025-04-01 22:28:55,504:INFO:           interpret: Not installed
2025-04-01 22:28:55,504:INFO:                umap: Not installed
2025-04-01 22:28:55,504:INFO:    pandas_profiling: Not installed
2025-04-01 22:28:55,504:INFO:  explainerdashboard: Not installed
2025-04-01 22:28:55,504:INFO:             autoviz: Not installed
2025-04-01 22:28:55,504:INFO:           fairlearn: Not installed
2025-04-01 22:28:55,504:INFO:             xgboost: Not installed
2025-04-01 22:28:55,504:INFO:            catboost: Not installed
2025-04-01 22:28:55,504:INFO:              kmodes: Not installed
2025-04-01 22:28:55,504:INFO:             mlxtend: Not installed
2025-04-01 22:28:55,504:INFO:       statsforecast: Not installed
2025-04-01 22:28:55,504:INFO:        tune_sklearn: Not installed
2025-04-01 22:28:55,504:INFO:                 ray: Not installed
2025-04-01 22:28:55,504:INFO:            hyperopt: Not installed
2025-04-01 22:28:55,504:INFO:              optuna: Not installed
2025-04-01 22:28:55,504:INFO:               skopt: Not installed
2025-04-01 22:28:55,504:INFO:              mlflow: 2.21.2
2025-04-01 22:28:55,504:INFO:              gradio: Not installed
2025-04-01 22:28:55,504:INFO:             fastapi: 0.115.12
2025-04-01 22:28:55,504:INFO:             uvicorn: 0.34.0
2025-04-01 22:28:55,504:INFO:              m2cgen: Not installed
2025-04-01 22:28:55,504:INFO:           evidently: Not installed
2025-04-01 22:28:55,504:INFO:               fugue: Not installed
2025-04-01 22:28:55,504:INFO:           streamlit: 1.44.0
2025-04-01 22:28:55,504:INFO:             prophet: Not installed
2025-04-01 22:28:55,504:INFO:None
2025-04-01 22:28:55,504:INFO:Set up data.
2025-04-01 22:28:55,508:INFO:Set up train/test split.
2025-04-01 22:28:55,511:INFO:Set up index.
2025-04-01 22:28:55,511:INFO:Set up folding strategy.
2025-04-01 22:28:55,511:INFO:Assigning column types.
2025-04-01 22:28:55,513:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 22:28:55,531:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 22:28:55,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:28:55,546:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,546:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 22:28:55,565:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:28:55,576:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,576:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,576:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 22:28:55,595:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:28:55,606:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,606:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,625:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:28:55,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,636:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 22:28:55,666:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,696:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,696:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,698:INFO:Preparing preprocessing pipeline...
2025-04-01 22:28:55,698:INFO:Set up simple imputation.
2025-04-01 22:28:55,708:INFO:Finished creating preprocessing pipeline.
2025-04-01 22:28:55,710:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 22:28:55,710:INFO:Creating final display dataframe.
2025-04-01 22:28:55,736:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              fbb4
2025-04-01 22:28:55,767:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,767:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,797:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:28:55,798:INFO:setup() successfully completed in 0.46s...............
2025-04-01 22:28:55,798:INFO:Initializing create_model()
2025-04-01 22:28:55,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3084bda50>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 22:28:55,798:INFO:Checking exceptions
2025-04-01 22:28:55,814:INFO:Importing libraries
2025-04-01 22:28:55,814:INFO:Copying training dataset
2025-04-01 22:28:55,817:INFO:Defining folds
2025-04-01 22:28:55,817:INFO:Declaring metric variables
2025-04-01 22:28:55,817:INFO:Importing untrained model
2025-04-01 22:28:55,818:INFO:Logistic Regression Imported successfully
2025-04-01 22:28:55,818:INFO:Starting cross validation
2025-04-01 22:28:55,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 22:28:59,433:INFO:Calculating mean and std
2025-04-01 22:28:59,434:INFO:Creating metrics dataframe
2025-04-01 22:28:59,440:INFO:Finalizing model
2025-04-01 22:28:59,458:INFO:Uploading results into container
2025-04-01 22:28:59,459:INFO:Uploading model into container now
2025-04-01 22:28:59,465:INFO:_master_model_container: 1
2025-04-01 22:28:59,465:INFO:_display_container: 2
2025-04-01 22:28:59,465:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 22:28:59,465:INFO:create_model() successfully completed......................................
2025-04-01 22:28:59,575:INFO:Initializing predict_model()
2025-04-01 22:28:59,575:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3084bda50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3088f1d80>)
2025-04-01 22:28:59,575:INFO:Checking exceptions
2025-04-01 22:28:59,575:INFO:Preloading libraries
2025-04-01 22:28:59,575:INFO:Set up data.
2025-04-01 22:28:59,577:INFO:Set up index.
2025-04-01 22:29:33,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:33,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:33,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:33,353:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:33,767:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 22:29:34,193:INFO:PyCaret ClassificationExperiment
2025-04-01 22:29:34,193:INFO:Logging name: clf-default-name
2025-04-01 22:29:34,193:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-01 22:29:34,193:INFO:version 3.0.0
2025-04-01 22:29:34,193:INFO:Initializing setup()
2025-04-01 22:29:34,193:INFO:self.USI: 4c1f
2025-04-01 22:29:34,193:INFO:self._variable_keys: {'html_param', 'idx', 'y', 'fold_groups_param', 'is_multiclass', 'fix_imbalance', '_ml_usecase', 'log_plots_param', 'exp_id', 'pipeline', 'target_param', 'gpu_n_jobs_param', 'fold_generator', 'y_train', 'logging_param', 'X_train', 'exp_name_log', 'X', 'y_test', '_available_plots', 'seed', 'USI', 'n_jobs_param', 'fold_shuffle_param', 'gpu_param', 'data', 'memory', 'X_test'}
2025-04-01 22:29:34,193:INFO:Checking environment
2025-04-01 22:29:34,193:INFO:python_version: 3.10.16
2025-04-01 22:29:34,193:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-01 22:29:34,193:INFO:machine: arm64
2025-04-01 22:29:34,205:INFO:platform: macOS-15.4-arm64-arm-64bit
2025-04-01 22:29:34,205:INFO:Memory: svmem(total=17179869184, available=5176655872, percent=69.9, used=6464749568, free=615923712, active=4567203840, inactive=4520247296, wired=1897545728)
2025-04-01 22:29:34,205:INFO:Physical Core: 8
2025-04-01 22:29:34,205:INFO:Logical Core: 8
2025-04-01 22:29:34,205:INFO:Checking libraries
2025-04-01 22:29:34,205:INFO:System:
2025-04-01 22:29:34,205:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-01 22:29:34,205:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-01 22:29:34,205:INFO:   machine: macOS-15.4-arm64-arm-64bit
2025-04-01 22:29:34,205:INFO:PyCaret required dependencies:
2025-04-01 22:29:34,225:INFO:                 pip: 25.0.1
2025-04-01 22:29:34,225:INFO:          setuptools: 75.8.2
2025-04-01 22:29:34,225:INFO:             pycaret: 3.0.0
2025-04-01 22:29:34,225:INFO:             IPython: 8.34.0
2025-04-01 22:29:34,225:INFO:          ipywidgets: 8.1.5
2025-04-01 22:29:34,225:INFO:                tqdm: 4.67.1
2025-04-01 22:29:34,225:INFO:               numpy: 1.24.4
2025-04-01 22:29:34,225:INFO:              pandas: 1.5.3
2025-04-01 22:29:34,225:INFO:              jinja2: 3.1.6
2025-04-01 22:29:34,225:INFO:               scipy: 1.9.3
2025-04-01 22:29:34,225:INFO:              joblib: 1.2.0
2025-04-01 22:29:34,225:INFO:             sklearn: 1.1.3
2025-04-01 22:29:34,225:INFO:                pyod: 2.0.4
2025-04-01 22:29:34,225:INFO:            imblearn: 0.12.4
2025-04-01 22:29:34,225:INFO:   category_encoders: 2.7.0
2025-04-01 22:29:34,225:INFO:            lightgbm: 4.6.0
2025-04-01 22:29:34,225:INFO:               numba: 0.61.0
2025-04-01 22:29:34,225:INFO:            requests: 2.32.3
2025-04-01 22:29:34,225:INFO:          matplotlib: 3.10.1
2025-04-01 22:29:34,225:INFO:          scikitplot: 0.3.7
2025-04-01 22:29:34,225:INFO:         yellowbrick: 1.5
2025-04-01 22:29:34,225:INFO:              plotly: 5.24.1
2025-04-01 22:29:34,225:INFO:             kaleido: 0.2.1
2025-04-01 22:29:34,225:INFO:         statsmodels: 0.14.4
2025-04-01 22:29:34,225:INFO:              sktime: 0.36.0
2025-04-01 22:29:34,225:INFO:               tbats: 1.1.3
2025-04-01 22:29:34,225:INFO:            pmdarima: 2.0.4
2025-04-01 22:29:34,225:INFO:              psutil: 7.0.0
2025-04-01 22:29:34,225:INFO:PyCaret optional dependencies:
2025-04-01 22:29:34,330:INFO:                shap: Not installed
2025-04-01 22:29:34,330:INFO:           interpret: Not installed
2025-04-01 22:29:34,330:INFO:                umap: Not installed
2025-04-01 22:29:34,330:INFO:    pandas_profiling: Not installed
2025-04-01 22:29:34,330:INFO:  explainerdashboard: Not installed
2025-04-01 22:29:34,330:INFO:             autoviz: Not installed
2025-04-01 22:29:34,330:INFO:           fairlearn: Not installed
2025-04-01 22:29:34,331:INFO:             xgboost: Not installed
2025-04-01 22:29:34,331:INFO:            catboost: Not installed
2025-04-01 22:29:34,331:INFO:              kmodes: Not installed
2025-04-01 22:29:34,331:INFO:             mlxtend: Not installed
2025-04-01 22:29:34,331:INFO:       statsforecast: Not installed
2025-04-01 22:29:34,331:INFO:        tune_sklearn: Not installed
2025-04-01 22:29:34,331:INFO:                 ray: Not installed
2025-04-01 22:29:34,331:INFO:            hyperopt: Not installed
2025-04-01 22:29:34,331:INFO:              optuna: Not installed
2025-04-01 22:29:34,331:INFO:               skopt: Not installed
2025-04-01 22:29:34,331:INFO:              mlflow: 2.21.2
2025-04-01 22:29:34,331:INFO:              gradio: Not installed
2025-04-01 22:29:34,331:INFO:             fastapi: 0.115.12
2025-04-01 22:29:34,331:INFO:             uvicorn: 0.34.0
2025-04-01 22:29:34,331:INFO:              m2cgen: Not installed
2025-04-01 22:29:34,331:INFO:           evidently: Not installed
2025-04-01 22:29:34,331:INFO:               fugue: Not installed
2025-04-01 22:29:34,331:INFO:           streamlit: 1.44.0
2025-04-01 22:29:34,331:INFO:             prophet: Not installed
2025-04-01 22:29:34,331:INFO:None
2025-04-01 22:29:34,331:INFO:Set up data.
2025-04-01 22:29:34,334:INFO:Set up train/test split.
2025-04-01 22:29:34,338:INFO:Set up index.
2025-04-01 22:29:34,338:INFO:Set up folding strategy.
2025-04-01 22:29:34,338:INFO:Assigning column types.
2025-04-01 22:29:34,340:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-01 22:29:34,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 22:29:34,360:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:29:34,373:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,373:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,391:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-01 22:29:34,392:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:29:34,403:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,403:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,403:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-01 22:29:34,422:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:29:34,433:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,433:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,452:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-01 22:29:34,463:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,463:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-01 22:29:34,493:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,493:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,523:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,523:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,524:INFO:Preparing preprocessing pipeline...
2025-04-01 22:29:34,525:INFO:Set up simple imputation.
2025-04-01 22:29:34,534:INFO:Finished creating preprocessing pipeline.
2025-04-01 22:29:34,535:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-01 22:29:34,535:INFO:Creating final display dataframe.
2025-04-01 22:29:34,561:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              4c1f
2025-04-01 22:29:34,592:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-01 22:29:34,623:INFO:setup() successfully completed in 0.43s...............
2025-04-01 22:29:34,623:INFO:Initializing create_model()
2025-04-01 22:29:34,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3085bd660>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 22:29:34,623:INFO:Checking exceptions
2025-04-01 22:29:34,635:INFO:Importing libraries
2025-04-01 22:29:34,636:INFO:Copying training dataset
2025-04-01 22:29:34,638:INFO:Defining folds
2025-04-01 22:29:34,638:INFO:Declaring metric variables
2025-04-01 22:29:34,639:INFO:Importing untrained model
2025-04-01 22:29:34,639:INFO:Logistic Regression Imported successfully
2025-04-01 22:29:34,639:INFO:Starting cross validation
2025-04-01 22:29:34,640:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 22:29:38,151:INFO:Calculating mean and std
2025-04-01 22:29:38,152:INFO:Creating metrics dataframe
2025-04-01 22:29:38,154:INFO:Finalizing model
2025-04-01 22:29:38,169:INFO:Uploading results into container
2025-04-01 22:29:38,169:INFO:Uploading model into container now
2025-04-01 22:29:38,174:INFO:_master_model_container: 1
2025-04-01 22:29:38,174:INFO:_display_container: 2
2025-04-01 22:29:38,175:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-01 22:29:38,175:INFO:create_model() successfully completed......................................
2025-04-01 22:29:38,243:INFO:Initializing predict_model()
2025-04-01 22:29:38,243:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3085bd660>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30b70d510>)
2025-04-01 22:29:38,243:INFO:Checking exceptions
2025-04-01 22:29:38,243:INFO:Preloading libraries
2025-04-01 22:29:38,243:INFO:Set up data.
2025-04-01 22:29:38,245:INFO:Set up index.
2025-04-01 22:29:38,365:INFO:Initializing create_model()
2025-04-01 22:29:38,366:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3085bd660>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-01 22:29:38,366:INFO:Checking exceptions
2025-04-01 22:29:38,366:INFO:Importing libraries
2025-04-01 22:29:38,366:INFO:Copying training dataset
2025-04-01 22:29:38,368:INFO:Defining folds
2025-04-01 22:29:38,368:INFO:Declaring metric variables
2025-04-01 22:29:38,368:INFO:Importing untrained model
2025-04-01 22:29:38,368:INFO:Decision Tree Classifier Imported successfully
2025-04-01 22:29:38,368:INFO:Starting cross validation
2025-04-01 22:29:38,369:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-01 22:29:38,580:INFO:Calculating mean and std
2025-04-01 22:29:38,580:INFO:Creating metrics dataframe
2025-04-01 22:29:38,581:INFO:Finalizing model
2025-04-01 22:29:38,614:INFO:Uploading results into container
2025-04-01 22:29:38,615:INFO:Uploading model into container now
2025-04-01 22:29:38,618:INFO:_master_model_container: 2
2025-04-01 22:29:38,619:INFO:_display_container: 4
2025-04-01 22:29:38,619:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-01 22:29:38,619:INFO:create_model() successfully completed......................................
2025-04-01 22:29:38,675:INFO:Initializing predict_model()
2025-04-01 22:29:38,675:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3085bd660>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30b70d510>)
2025-04-01 22:29:38,675:INFO:Checking exceptions
2025-04-01 22:29:38,675:INFO:Preloading libraries
2025-04-01 22:29:38,675:INFO:Set up data.
2025-04-01 22:29:38,677:INFO:Set up index.
2025-04-01 22:29:38,759:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-01 22:29:38,760:INFO:Initializing save_model()
2025-04-01 22:29:38,760:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-01 22:29:38,760:INFO:Adding model into prep_pipe
2025-04-01 22:29:38,763:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-01 22:29:38,765:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-01 22:29:38,765:INFO:save_model() successfully completed......................................
2025-04-01 22:29:43,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:43,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:43,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:43,789:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-01 22:29:44,209:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-01 22:29:44,482:INFO:Initializing load_model()
2025-04-01 22:29:44,482:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-01 22:29:44,568:INFO:Initializing predict_model()
2025-04-01 22:29:44,568:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3031e7ca0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x137c0dd80>)
2025-04-01 22:29:44,568:INFO:Checking exceptions
2025-04-01 22:29:44,568:INFO:Preloading libraries
2025-04-01 22:29:44,568:INFO:Set up data.
2025-04-01 22:29:44,576:INFO:Set up index.
2025-04-05 18:10:11,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:11,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:11,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:11,809:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:13,036:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:10:13,522:INFO:PyCaret ClassificationExperiment
2025-04-05 18:10:13,522:INFO:Logging name: clf-default-name
2025-04-05 18:10:13,522:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-05 18:10:13,522:INFO:version 3.0.0
2025-04-05 18:10:13,522:INFO:Initializing setup()
2025-04-05 18:10:13,522:INFO:self.USI: 9918
2025-04-05 18:10:13,522:INFO:self._variable_keys: {'exp_name_log', 'is_multiclass', 'fold_shuffle_param', 'y_train', '_available_plots', 'X_train', 'fix_imbalance', 'pipeline', 'X_test', 'target_param', 'y', 'X', 'USI', 'html_param', 'memory', 'gpu_param', 'exp_id', 'y_test', 'seed', 'logging_param', 'data', 'idx', 'fold_groups_param', 'fold_generator', 'gpu_n_jobs_param', 'n_jobs_param', 'log_plots_param', '_ml_usecase'}
2025-04-05 18:10:13,522:INFO:Checking environment
2025-04-05 18:10:13,522:INFO:python_version: 3.10.16
2025-04-05 18:10:13,523:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-05 18:10:13,523:INFO:machine: arm64
2025-04-05 18:10:13,538:INFO:platform: macOS-15.5-arm64-arm-64bit
2025-04-05 18:10:13,539:INFO:Memory: svmem(total=17179869184, available=4761714688, percent=72.3, used=6873759744, free=71942144, active=4702781440, inactive=4638834688, wired=2170978304)
2025-04-05 18:10:13,539:INFO:Physical Core: 8
2025-04-05 18:10:13,539:INFO:Logical Core: 8
2025-04-05 18:10:13,539:INFO:Checking libraries
2025-04-05 18:10:13,539:INFO:System:
2025-04-05 18:10:13,539:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-05 18:10:13,539:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-05 18:10:13,539:INFO:   machine: macOS-15.5-arm64-arm-64bit
2025-04-05 18:10:13,539:INFO:PyCaret required dependencies:
2025-04-05 18:10:13,564:INFO:                 pip: 25.0.1
2025-04-05 18:10:13,564:INFO:          setuptools: 75.8.2
2025-04-05 18:10:13,564:INFO:             pycaret: 3.0.0
2025-04-05 18:10:13,564:INFO:             IPython: 8.34.0
2025-04-05 18:10:13,564:INFO:          ipywidgets: 8.1.5
2025-04-05 18:10:13,564:INFO:                tqdm: 4.67.1
2025-04-05 18:10:13,564:INFO:               numpy: 1.24.4
2025-04-05 18:10:13,564:INFO:              pandas: 1.5.3
2025-04-05 18:10:13,564:INFO:              jinja2: 3.1.6
2025-04-05 18:10:13,564:INFO:               scipy: 1.9.3
2025-04-05 18:10:13,564:INFO:              joblib: 1.2.0
2025-04-05 18:10:13,564:INFO:             sklearn: 1.1.3
2025-04-05 18:10:13,564:INFO:                pyod: 2.0.4
2025-04-05 18:10:13,564:INFO:            imblearn: 0.12.4
2025-04-05 18:10:13,564:INFO:   category_encoders: 2.7.0
2025-04-05 18:10:13,564:INFO:            lightgbm: 4.6.0
2025-04-05 18:10:13,564:INFO:               numba: 0.61.0
2025-04-05 18:10:13,564:INFO:            requests: 2.32.3
2025-04-05 18:10:13,564:INFO:          matplotlib: 3.10.1
2025-04-05 18:10:13,564:INFO:          scikitplot: 0.3.7
2025-04-05 18:10:13,564:INFO:         yellowbrick: 1.5
2025-04-05 18:10:13,564:INFO:              plotly: 5.24.1
2025-04-05 18:10:13,564:INFO:             kaleido: 0.2.1
2025-04-05 18:10:13,565:INFO:         statsmodels: 0.14.4
2025-04-05 18:10:13,565:INFO:              sktime: 0.36.0
2025-04-05 18:10:13,565:INFO:               tbats: 1.1.3
2025-04-05 18:10:13,565:INFO:            pmdarima: 2.0.4
2025-04-05 18:10:13,565:INFO:              psutil: 7.0.0
2025-04-05 18:10:13,565:INFO:PyCaret optional dependencies:
2025-04-05 18:10:13,687:INFO:                shap: Not installed
2025-04-05 18:10:13,687:INFO:           interpret: Not installed
2025-04-05 18:10:13,687:INFO:                umap: Not installed
2025-04-05 18:10:13,687:INFO:    pandas_profiling: Not installed
2025-04-05 18:10:13,687:INFO:  explainerdashboard: Not installed
2025-04-05 18:10:13,687:INFO:             autoviz: Not installed
2025-04-05 18:10:13,687:INFO:           fairlearn: Not installed
2025-04-05 18:10:13,687:INFO:             xgboost: Not installed
2025-04-05 18:10:13,687:INFO:            catboost: Not installed
2025-04-05 18:10:13,687:INFO:              kmodes: Not installed
2025-04-05 18:10:13,687:INFO:             mlxtend: Not installed
2025-04-05 18:10:13,687:INFO:       statsforecast: Not installed
2025-04-05 18:10:13,687:INFO:        tune_sklearn: Not installed
2025-04-05 18:10:13,687:INFO:                 ray: Not installed
2025-04-05 18:10:13,687:INFO:            hyperopt: Not installed
2025-04-05 18:10:13,687:INFO:              optuna: Not installed
2025-04-05 18:10:13,687:INFO:               skopt: Not installed
2025-04-05 18:10:13,687:INFO:              mlflow: 2.21.2
2025-04-05 18:10:13,687:INFO:              gradio: Not installed
2025-04-05 18:10:13,687:INFO:             fastapi: 0.115.12
2025-04-05 18:10:13,687:INFO:             uvicorn: 0.34.0
2025-04-05 18:10:13,687:INFO:              m2cgen: Not installed
2025-04-05 18:10:13,687:INFO:           evidently: Not installed
2025-04-05 18:10:13,687:INFO:               fugue: Not installed
2025-04-05 18:10:13,687:INFO:           streamlit: 1.44.0
2025-04-05 18:10:13,687:INFO:             prophet: Not installed
2025-04-05 18:10:13,687:INFO:None
2025-04-05 18:10:13,687:INFO:Set up data.
2025-04-05 18:10:13,692:INFO:Set up train/test split.
2025-04-05 18:10:13,697:INFO:Set up index.
2025-04-05 18:10:13,697:INFO:Set up folding strategy.
2025-04-05 18:10:13,697:INFO:Assigning column types.
2025-04-05 18:10:13,698:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-05 18:10:13,716:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:10:13,718:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:10:13,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,750:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:10:13,750:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:10:13,761:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,761:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,761:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-05 18:10:13,779:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:10:13,791:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,791:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,809:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:10:13,821:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,821:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,821:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-05 18:10:13,851:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,851:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,881:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,881:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,883:INFO:Preparing preprocessing pipeline...
2025-04-05 18:10:13,884:INFO:Set up simple imputation.
2025-04-05 18:10:13,895:INFO:Finished creating preprocessing pipeline.
2025-04-05 18:10:13,897:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-05 18:10:13,897:INFO:Creating final display dataframe.
2025-04-05 18:10:13,924:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              9918
2025-04-05 18:10:13,956:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,956:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,986:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,986:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:10:13,986:INFO:setup() successfully completed in 0.47s...............
2025-04-05 18:10:13,986:INFO:Initializing create_model()
2025-04-05 18:10:13,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3044c1630>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:10:13,986:INFO:Checking exceptions
2025-04-05 18:10:14,021:INFO:Importing libraries
2025-04-05 18:10:14,021:INFO:Copying training dataset
2025-04-05 18:10:14,024:INFO:Defining folds
2025-04-05 18:10:14,024:INFO:Declaring metric variables
2025-04-05 18:10:14,024:INFO:Importing untrained model
2025-04-05 18:10:14,025:INFO:Logistic Regression Imported successfully
2025-04-05 18:10:14,025:INFO:Starting cross validation
2025-04-05 18:10:14,025:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:10:17,852:INFO:Calculating mean and std
2025-04-05 18:10:17,853:INFO:Creating metrics dataframe
2025-04-05 18:10:17,856:INFO:Finalizing model
2025-04-05 18:10:17,918:INFO:Uploading results into container
2025-04-05 18:10:17,919:INFO:Uploading model into container now
2025-04-05 18:10:17,931:INFO:_master_model_container: 1
2025-04-05 18:10:17,931:INFO:_display_container: 2
2025-04-05 18:10:17,931:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-05 18:10:17,932:INFO:create_model() successfully completed......................................
2025-04-05 18:10:18,051:INFO:Initializing predict_model()
2025-04-05 18:10:18,051:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3044c1630>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3077b1510>)
2025-04-05 18:10:18,051:INFO:Checking exceptions
2025-04-05 18:10:18,051:INFO:Preloading libraries
2025-04-05 18:10:18,051:INFO:Set up data.
2025-04-05 18:10:18,057:INFO:Set up index.
2025-04-05 18:10:18,163:INFO:Initializing create_model()
2025-04-05 18:10:18,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3044c1630>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:10:18,163:INFO:Checking exceptions
2025-04-05 18:10:18,164:INFO:Importing libraries
2025-04-05 18:10:18,164:INFO:Copying training dataset
2025-04-05 18:10:18,167:INFO:Defining folds
2025-04-05 18:10:18,167:INFO:Declaring metric variables
2025-04-05 18:10:18,167:INFO:Importing untrained model
2025-04-05 18:10:18,168:INFO:Decision Tree Classifier Imported successfully
2025-04-05 18:10:18,168:INFO:Starting cross validation
2025-04-05 18:10:18,169:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:10:18,339:INFO:Calculating mean and std
2025-04-05 18:10:18,339:INFO:Creating metrics dataframe
2025-04-05 18:10:18,340:INFO:Finalizing model
2025-04-05 18:10:18,378:INFO:Uploading results into container
2025-04-05 18:10:18,378:INFO:Uploading model into container now
2025-04-05 18:10:18,382:INFO:_master_model_container: 2
2025-04-05 18:10:18,382:INFO:_display_container: 4
2025-04-05 18:10:18,383:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-05 18:10:18,383:INFO:create_model() successfully completed......................................
2025-04-05 18:10:18,441:INFO:Initializing predict_model()
2025-04-05 18:10:18,441:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3044c1630>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3077b1510>)
2025-04-05 18:10:18,441:INFO:Checking exceptions
2025-04-05 18:10:18,441:INFO:Preloading libraries
2025-04-05 18:10:18,441:INFO:Set up data.
2025-04-05 18:10:18,443:INFO:Set up index.
2025-04-05 18:10:18,525:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-05 18:10:18,527:INFO:Initializing save_model()
2025-04-05 18:10:18,527:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-05 18:10:18,527:INFO:Adding model into prep_pipe
2025-04-05 18:10:18,529:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-05 18:10:18,532:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-05 18:10:18,532:INFO:save_model() successfully completed......................................
2025-04-05 18:10:23,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:23,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:23,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:23,518:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:10:23,954:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:10:24,246:INFO:Initializing load_model()
2025-04-05 18:10:24,246:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-05 18:10:24,334:INFO:Initializing predict_model()
2025-04-05 18:10:24,334:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x17b0ab730>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x11d3b5cf0>)
2025-04-05 18:10:24,334:INFO:Checking exceptions
2025-04-05 18:10:24,334:INFO:Preloading libraries
2025-04-05 18:10:24,334:INFO:Set up data.
2025-04-05 18:10:24,341:INFO:Set up index.
2025-04-05 18:14:39,275:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:39,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:39,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:39,276:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:39,788:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:14:40,300:INFO:PyCaret ClassificationExperiment
2025-04-05 18:14:40,300:INFO:Logging name: clf-default-name
2025-04-05 18:14:40,300:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-05 18:14:40,300:INFO:version 3.0.0
2025-04-05 18:14:40,300:INFO:Initializing setup()
2025-04-05 18:14:40,300:INFO:self.USI: 0cf8
2025-04-05 18:14:40,300:INFO:self._variable_keys: {'is_multiclass', 'USI', 'gpu_param', 'y', 'y_train', 'fold_groups_param', '_available_plots', 'html_param', 'X', 'fold_generator', 'n_jobs_param', 'idx', 'exp_name_log', 'exp_id', 'X_train', 'logging_param', 'gpu_n_jobs_param', 'seed', 'pipeline', 'target_param', 'fix_imbalance', 'y_test', 'X_test', 'data', 'log_plots_param', '_ml_usecase', 'memory', 'fold_shuffle_param'}
2025-04-05 18:14:40,300:INFO:Checking environment
2025-04-05 18:14:40,300:INFO:python_version: 3.10.16
2025-04-05 18:14:40,300:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-05 18:14:40,300:INFO:machine: arm64
2025-04-05 18:14:40,316:INFO:platform: macOS-15.5-arm64-arm-64bit
2025-04-05 18:14:40,317:INFO:Memory: svmem(total=17179869184, available=4612554752, percent=73.2, used=6681133056, free=66240512, active=4558651392, inactive=4503224320, wired=2122481664)
2025-04-05 18:14:40,317:INFO:Physical Core: 8
2025-04-05 18:14:40,317:INFO:Logical Core: 8
2025-04-05 18:14:40,317:INFO:Checking libraries
2025-04-05 18:14:40,317:INFO:System:
2025-04-05 18:14:40,317:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-05 18:14:40,317:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-05 18:14:40,317:INFO:   machine: macOS-15.5-arm64-arm-64bit
2025-04-05 18:14:40,317:INFO:PyCaret required dependencies:
2025-04-05 18:14:40,339:INFO:                 pip: 25.0.1
2025-04-05 18:14:40,339:INFO:          setuptools: 75.8.2
2025-04-05 18:14:40,339:INFO:             pycaret: 3.0.0
2025-04-05 18:14:40,339:INFO:             IPython: 8.34.0
2025-04-05 18:14:40,339:INFO:          ipywidgets: 8.1.5
2025-04-05 18:14:40,339:INFO:                tqdm: 4.67.1
2025-04-05 18:14:40,339:INFO:               numpy: 1.24.4
2025-04-05 18:14:40,339:INFO:              pandas: 1.5.3
2025-04-05 18:14:40,339:INFO:              jinja2: 3.1.6
2025-04-05 18:14:40,339:INFO:               scipy: 1.9.3
2025-04-05 18:14:40,339:INFO:              joblib: 1.2.0
2025-04-05 18:14:40,339:INFO:             sklearn: 1.1.3
2025-04-05 18:14:40,339:INFO:                pyod: 2.0.4
2025-04-05 18:14:40,339:INFO:            imblearn: 0.12.4
2025-04-05 18:14:40,339:INFO:   category_encoders: 2.7.0
2025-04-05 18:14:40,339:INFO:            lightgbm: 4.6.0
2025-04-05 18:14:40,339:INFO:               numba: 0.61.0
2025-04-05 18:14:40,339:INFO:            requests: 2.32.3
2025-04-05 18:14:40,339:INFO:          matplotlib: 3.10.1
2025-04-05 18:14:40,339:INFO:          scikitplot: 0.3.7
2025-04-05 18:14:40,340:INFO:         yellowbrick: 1.5
2025-04-05 18:14:40,340:INFO:              plotly: 5.24.1
2025-04-05 18:14:40,340:INFO:             kaleido: 0.2.1
2025-04-05 18:14:40,340:INFO:         statsmodels: 0.14.4
2025-04-05 18:14:40,340:INFO:              sktime: 0.36.0
2025-04-05 18:14:40,340:INFO:               tbats: 1.1.3
2025-04-05 18:14:40,340:INFO:            pmdarima: 2.0.4
2025-04-05 18:14:40,340:INFO:              psutil: 7.0.0
2025-04-05 18:14:40,340:INFO:PyCaret optional dependencies:
2025-04-05 18:14:40,460:INFO:                shap: Not installed
2025-04-05 18:14:40,460:INFO:           interpret: Not installed
2025-04-05 18:14:40,460:INFO:                umap: Not installed
2025-04-05 18:14:40,460:INFO:    pandas_profiling: Not installed
2025-04-05 18:14:40,460:INFO:  explainerdashboard: Not installed
2025-04-05 18:14:40,460:INFO:             autoviz: Not installed
2025-04-05 18:14:40,460:INFO:           fairlearn: Not installed
2025-04-05 18:14:40,460:INFO:             xgboost: Not installed
2025-04-05 18:14:40,460:INFO:            catboost: Not installed
2025-04-05 18:14:40,460:INFO:              kmodes: Not installed
2025-04-05 18:14:40,460:INFO:             mlxtend: Not installed
2025-04-05 18:14:40,460:INFO:       statsforecast: Not installed
2025-04-05 18:14:40,460:INFO:        tune_sklearn: Not installed
2025-04-05 18:14:40,460:INFO:                 ray: Not installed
2025-04-05 18:14:40,460:INFO:            hyperopt: Not installed
2025-04-05 18:14:40,460:INFO:              optuna: Not installed
2025-04-05 18:14:40,460:INFO:               skopt: Not installed
2025-04-05 18:14:40,460:INFO:              mlflow: 2.21.2
2025-04-05 18:14:40,460:INFO:              gradio: Not installed
2025-04-05 18:14:40,460:INFO:             fastapi: 0.115.12
2025-04-05 18:14:40,461:INFO:             uvicorn: 0.34.0
2025-04-05 18:14:40,461:INFO:              m2cgen: Not installed
2025-04-05 18:14:40,461:INFO:           evidently: Not installed
2025-04-05 18:14:40,461:INFO:               fugue: Not installed
2025-04-05 18:14:40,461:INFO:           streamlit: 1.44.0
2025-04-05 18:14:40,461:INFO:             prophet: Not installed
2025-04-05 18:14:40,461:INFO:None
2025-04-05 18:14:40,461:INFO:Set up data.
2025-04-05 18:14:40,464:INFO:Set up train/test split.
2025-04-05 18:14:40,468:INFO:Set up index.
2025-04-05 18:14:40,468:INFO:Set up folding strategy.
2025-04-05 18:14:40,468:INFO:Assigning column types.
2025-04-05 18:14:40,469:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-05 18:14:40,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:14:40,489:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:14:40,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,503:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,522:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:14:40,522:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:14:40,534:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,534:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-05 18:14:40,553:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:14:40,564:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,565:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:14:40,595:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,596:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-05 18:14:40,626:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,626:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,657:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,659:INFO:Preparing preprocessing pipeline...
2025-04-05 18:14:40,659:INFO:Set up simple imputation.
2025-04-05 18:14:40,669:INFO:Finished creating preprocessing pipeline.
2025-04-05 18:14:40,671:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-05 18:14:40,671:INFO:Creating final display dataframe.
2025-04-05 18:14:40,698:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              0cf8
2025-04-05 18:14:40,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,763:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,763:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:14:40,763:INFO:setup() successfully completed in 0.47s...............
2025-04-05 18:14:40,763:INFO:Initializing create_model()
2025-04-05 18:14:40,763:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303d49330>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:14:40,763:INFO:Checking exceptions
2025-04-05 18:14:40,779:INFO:Importing libraries
2025-04-05 18:14:40,779:INFO:Copying training dataset
2025-04-05 18:14:40,782:INFO:Defining folds
2025-04-05 18:14:40,782:INFO:Declaring metric variables
2025-04-05 18:14:40,782:INFO:Importing untrained model
2025-04-05 18:14:40,783:INFO:Logistic Regression Imported successfully
2025-04-05 18:14:40,783:INFO:Starting cross validation
2025-04-05 18:14:40,784:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:14:44,518:INFO:Calculating mean and std
2025-04-05 18:14:44,519:INFO:Creating metrics dataframe
2025-04-05 18:14:44,524:INFO:Finalizing model
2025-04-05 18:14:44,620:INFO:Uploading results into container
2025-04-05 18:14:44,620:INFO:Uploading model into container now
2025-04-05 18:14:44,630:INFO:_master_model_container: 1
2025-04-05 18:14:44,630:INFO:_display_container: 2
2025-04-05 18:14:44,630:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-05 18:14:44,630:INFO:create_model() successfully completed......................................
2025-04-05 18:14:44,766:INFO:Initializing predict_model()
2025-04-05 18:14:44,766:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303d49330>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3078b1510>)
2025-04-05 18:14:44,766:INFO:Checking exceptions
2025-04-05 18:14:44,766:INFO:Preloading libraries
2025-04-05 18:14:44,767:INFO:Set up data.
2025-04-05 18:14:44,773:INFO:Set up index.
2025-04-05 18:14:44,915:INFO:Initializing create_model()
2025-04-05 18:14:44,915:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303d49330>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:14:44,915:INFO:Checking exceptions
2025-04-05 18:14:44,916:INFO:Importing libraries
2025-04-05 18:14:44,916:INFO:Copying training dataset
2025-04-05 18:14:44,918:INFO:Defining folds
2025-04-05 18:14:44,918:INFO:Declaring metric variables
2025-04-05 18:14:44,918:INFO:Importing untrained model
2025-04-05 18:14:44,918:INFO:Decision Tree Classifier Imported successfully
2025-04-05 18:14:44,919:INFO:Starting cross validation
2025-04-05 18:14:44,919:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:14:45,114:INFO:Calculating mean and std
2025-04-05 18:14:45,114:INFO:Creating metrics dataframe
2025-04-05 18:14:45,115:INFO:Finalizing model
2025-04-05 18:14:45,148:INFO:Uploading results into container
2025-04-05 18:14:45,148:INFO:Uploading model into container now
2025-04-05 18:14:45,152:INFO:_master_model_container: 2
2025-04-05 18:14:45,152:INFO:_display_container: 4
2025-04-05 18:14:45,152:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-05 18:14:45,152:INFO:create_model() successfully completed......................................
2025-04-05 18:14:45,210:INFO:Initializing predict_model()
2025-04-05 18:14:45,210:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x303d49330>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3078b1510>)
2025-04-05 18:14:45,210:INFO:Checking exceptions
2025-04-05 18:14:45,210:INFO:Preloading libraries
2025-04-05 18:14:45,210:INFO:Set up data.
2025-04-05 18:14:45,212:INFO:Set up index.
2025-04-05 18:14:45,294:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-05 18:14:45,296:INFO:Initializing save_model()
2025-04-05 18:14:45,296:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-05 18:14:45,296:INFO:Adding model into prep_pipe
2025-04-05 18:14:45,299:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-05 18:14:45,301:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-05 18:14:45,301:INFO:save_model() successfully completed......................................
2025-04-05 18:14:50,326:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:50,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:50,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:50,327:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:14:50,779:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:14:51,180:INFO:Initializing load_model()
2025-04-05 18:14:51,180:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-05 18:14:51,301:INFO:Initializing predict_model()
2025-04-05 18:14:51,301:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x30383fd30>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x303863520>)
2025-04-05 18:14:51,301:INFO:Checking exceptions
2025-04-05 18:14:51,301:INFO:Preloading libraries
2025-04-05 18:14:51,301:INFO:Set up data.
2025-04-05 18:14:51,302:INFO:Set up index.
2025-04-05 18:14:51,374:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/sklearn/utils/multiclass.py:330: RuntimeWarning: invalid value encountered in cast
  if y.dtype.kind == "f" and np.any(y != y.astype(int)):

2025-04-05 18:16:44,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:44,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:44,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:44,651:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:45,156:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:16:45,645:INFO:PyCaret ClassificationExperiment
2025-04-05 18:16:45,645:INFO:Logging name: clf-default-name
2025-04-05 18:16:45,645:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-05 18:16:45,645:INFO:version 3.0.0
2025-04-05 18:16:45,645:INFO:Initializing setup()
2025-04-05 18:16:45,645:INFO:self.USI: 72e0
2025-04-05 18:16:45,645:INFO:self._variable_keys: {'data', 'is_multiclass', 'html_param', 'fold_groups_param', 'gpu_n_jobs_param', 'fix_imbalance', 'fold_generator', 'log_plots_param', '_available_plots', 'exp_id', 'X_test', 'n_jobs_param', 'seed', 'X_train', '_ml_usecase', 'pipeline', 'idx', 'USI', 'X', 'y_test', 'fold_shuffle_param', 'memory', 'exp_name_log', 'target_param', 'y_train', 'y', 'logging_param', 'gpu_param'}
2025-04-05 18:16:45,645:INFO:Checking environment
2025-04-05 18:16:45,645:INFO:python_version: 3.10.16
2025-04-05 18:16:45,645:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-05 18:16:45,645:INFO:machine: arm64
2025-04-05 18:16:45,660:INFO:platform: macOS-15.5-arm64-arm-64bit
2025-04-05 18:16:45,661:INFO:Memory: svmem(total=17179869184, available=4515790848, percent=73.7, used=6591348736, free=73826304, active=4453122048, inactive=4389748736, wired=2138226688)
2025-04-05 18:16:45,661:INFO:Physical Core: 8
2025-04-05 18:16:45,661:INFO:Logical Core: 8
2025-04-05 18:16:45,661:INFO:Checking libraries
2025-04-05 18:16:45,661:INFO:System:
2025-04-05 18:16:45,661:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-05 18:16:45,661:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-05 18:16:45,661:INFO:   machine: macOS-15.5-arm64-arm-64bit
2025-04-05 18:16:45,661:INFO:PyCaret required dependencies:
2025-04-05 18:16:45,683:INFO:                 pip: 25.0.1
2025-04-05 18:16:45,684:INFO:          setuptools: 75.8.2
2025-04-05 18:16:45,684:INFO:             pycaret: 3.0.0
2025-04-05 18:16:45,684:INFO:             IPython: 8.34.0
2025-04-05 18:16:45,684:INFO:          ipywidgets: 8.1.5
2025-04-05 18:16:45,684:INFO:                tqdm: 4.67.1
2025-04-05 18:16:45,684:INFO:               numpy: 1.24.4
2025-04-05 18:16:45,684:INFO:              pandas: 1.5.3
2025-04-05 18:16:45,684:INFO:              jinja2: 3.1.6
2025-04-05 18:16:45,684:INFO:               scipy: 1.9.3
2025-04-05 18:16:45,684:INFO:              joblib: 1.2.0
2025-04-05 18:16:45,684:INFO:             sklearn: 1.1.3
2025-04-05 18:16:45,684:INFO:                pyod: 2.0.4
2025-04-05 18:16:45,684:INFO:            imblearn: 0.12.4
2025-04-05 18:16:45,684:INFO:   category_encoders: 2.7.0
2025-04-05 18:16:45,684:INFO:            lightgbm: 4.6.0
2025-04-05 18:16:45,684:INFO:               numba: 0.61.0
2025-04-05 18:16:45,684:INFO:            requests: 2.32.3
2025-04-05 18:16:45,684:INFO:          matplotlib: 3.10.1
2025-04-05 18:16:45,684:INFO:          scikitplot: 0.3.7
2025-04-05 18:16:45,684:INFO:         yellowbrick: 1.5
2025-04-05 18:16:45,684:INFO:              plotly: 5.24.1
2025-04-05 18:16:45,684:INFO:             kaleido: 0.2.1
2025-04-05 18:16:45,684:INFO:         statsmodels: 0.14.4
2025-04-05 18:16:45,684:INFO:              sktime: 0.36.0
2025-04-05 18:16:45,684:INFO:               tbats: 1.1.3
2025-04-05 18:16:45,684:INFO:            pmdarima: 2.0.4
2025-04-05 18:16:45,684:INFO:              psutil: 7.0.0
2025-04-05 18:16:45,684:INFO:PyCaret optional dependencies:
2025-04-05 18:16:45,805:INFO:                shap: Not installed
2025-04-05 18:16:45,805:INFO:           interpret: Not installed
2025-04-05 18:16:45,805:INFO:                umap: Not installed
2025-04-05 18:16:45,805:INFO:    pandas_profiling: Not installed
2025-04-05 18:16:45,805:INFO:  explainerdashboard: Not installed
2025-04-05 18:16:45,805:INFO:             autoviz: Not installed
2025-04-05 18:16:45,805:INFO:           fairlearn: Not installed
2025-04-05 18:16:45,805:INFO:             xgboost: Not installed
2025-04-05 18:16:45,805:INFO:            catboost: Not installed
2025-04-05 18:16:45,805:INFO:              kmodes: Not installed
2025-04-05 18:16:45,805:INFO:             mlxtend: Not installed
2025-04-05 18:16:45,805:INFO:       statsforecast: Not installed
2025-04-05 18:16:45,805:INFO:        tune_sklearn: Not installed
2025-04-05 18:16:45,805:INFO:                 ray: Not installed
2025-04-05 18:16:45,806:INFO:            hyperopt: Not installed
2025-04-05 18:16:45,806:INFO:              optuna: Not installed
2025-04-05 18:16:45,806:INFO:               skopt: Not installed
2025-04-05 18:16:45,806:INFO:              mlflow: 2.21.2
2025-04-05 18:16:45,806:INFO:              gradio: Not installed
2025-04-05 18:16:45,806:INFO:             fastapi: 0.115.12
2025-04-05 18:16:45,806:INFO:             uvicorn: 0.34.0
2025-04-05 18:16:45,806:INFO:              m2cgen: Not installed
2025-04-05 18:16:45,806:INFO:           evidently: Not installed
2025-04-05 18:16:45,806:INFO:               fugue: Not installed
2025-04-05 18:16:45,806:INFO:           streamlit: 1.44.0
2025-04-05 18:16:45,806:INFO:             prophet: Not installed
2025-04-05 18:16:45,806:INFO:None
2025-04-05 18:16:45,806:INFO:Set up data.
2025-04-05 18:16:45,809:INFO:Set up train/test split.
2025-04-05 18:16:45,813:INFO:Set up index.
2025-04-05 18:16:45,813:INFO:Set up folding strategy.
2025-04-05 18:16:45,813:INFO:Assigning column types.
2025-04-05 18:16:45,814:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-05 18:16:45,833:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:16:45,834:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:16:45,848:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,848:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,866:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:16:45,867:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:16:45,878:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,878:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,878:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-05 18:16:45,897:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:16:45,908:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,908:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,927:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:16:45,939:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,939:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,939:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-05 18:16:45,970:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:45,970:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:46,002:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:46,002:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:46,004:INFO:Preparing preprocessing pipeline...
2025-04-05 18:16:46,005:INFO:Set up simple imputation.
2025-04-05 18:16:46,017:INFO:Finished creating preprocessing pipeline.
2025-04-05 18:16:46,019:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-05 18:16:46,019:INFO:Creating final display dataframe.
2025-04-05 18:16:46,051:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              72e0
2025-04-05 18:16:46,085:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:46,085:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:46,117:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:46,117:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:16:46,117:INFO:setup() successfully completed in 0.47s...............
2025-04-05 18:16:46,117:INFO:Initializing create_model()
2025-04-05 18:16:46,117:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081c5630>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:16:46,118:INFO:Checking exceptions
2025-04-05 18:16:46,131:INFO:Importing libraries
2025-04-05 18:16:46,131:INFO:Copying training dataset
2025-04-05 18:16:46,134:INFO:Defining folds
2025-04-05 18:16:46,134:INFO:Declaring metric variables
2025-04-05 18:16:46,134:INFO:Importing untrained model
2025-04-05 18:16:46,134:INFO:Logistic Regression Imported successfully
2025-04-05 18:16:46,134:INFO:Starting cross validation
2025-04-05 18:16:46,135:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:16:49,949:INFO:Calculating mean and std
2025-04-05 18:16:49,950:INFO:Creating metrics dataframe
2025-04-05 18:16:49,954:INFO:Finalizing model
2025-04-05 18:16:50,097:INFO:Uploading results into container
2025-04-05 18:16:50,097:INFO:Uploading model into container now
2025-04-05 18:16:50,102:INFO:_master_model_container: 1
2025-04-05 18:16:50,102:INFO:_display_container: 2
2025-04-05 18:16:50,103:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-05 18:16:50,103:INFO:create_model() successfully completed......................................
2025-04-05 18:16:50,212:INFO:Initializing predict_model()
2025-04-05 18:16:50,212:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081c5630>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30acb1510>)
2025-04-05 18:16:50,212:INFO:Checking exceptions
2025-04-05 18:16:50,212:INFO:Preloading libraries
2025-04-05 18:16:50,212:INFO:Set up data.
2025-04-05 18:16:50,218:INFO:Set up index.
2025-04-05 18:16:50,386:INFO:Initializing create_model()
2025-04-05 18:16:50,386:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081c5630>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:16:50,386:INFO:Checking exceptions
2025-04-05 18:16:50,387:INFO:Importing libraries
2025-04-05 18:16:50,387:INFO:Copying training dataset
2025-04-05 18:16:50,389:INFO:Defining folds
2025-04-05 18:16:50,389:INFO:Declaring metric variables
2025-04-05 18:16:50,389:INFO:Importing untrained model
2025-04-05 18:16:50,389:INFO:Decision Tree Classifier Imported successfully
2025-04-05 18:16:50,389:INFO:Starting cross validation
2025-04-05 18:16:50,389:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:16:50,554:INFO:Calculating mean and std
2025-04-05 18:16:50,554:INFO:Creating metrics dataframe
2025-04-05 18:16:50,555:INFO:Finalizing model
2025-04-05 18:16:50,588:INFO:Uploading results into container
2025-04-05 18:16:50,588:INFO:Uploading model into container now
2025-04-05 18:16:50,592:INFO:_master_model_container: 2
2025-04-05 18:16:50,592:INFO:_display_container: 4
2025-04-05 18:16:50,592:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-05 18:16:50,592:INFO:create_model() successfully completed......................................
2025-04-05 18:16:50,649:INFO:Initializing predict_model()
2025-04-05 18:16:50,649:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081c5630>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3086a2170>)
2025-04-05 18:16:50,649:INFO:Checking exceptions
2025-04-05 18:16:50,649:INFO:Preloading libraries
2025-04-05 18:16:50,649:INFO:Set up data.
2025-04-05 18:16:50,651:INFO:Set up index.
2025-04-05 18:16:50,733:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-05 18:16:50,735:INFO:Initializing save_model()
2025-04-05 18:16:50,735:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-05 18:16:50,735:INFO:Adding model into prep_pipe
2025-04-05 18:16:50,737:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-05 18:16:50,739:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-05 18:16:50,739:INFO:save_model() successfully completed......................................
2025-04-05 18:16:55,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:55,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:55,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:55,632:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:16:56,080:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:16:56,479:INFO:Initializing load_model()
2025-04-05 18:16:56,479:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-05 18:16:56,601:INFO:Initializing predict_model()
2025-04-05 18:16:56,601:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3079711b0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x307967250>)
2025-04-05 18:16:56,601:INFO:Checking exceptions
2025-04-05 18:16:56,601:INFO:Preloading libraries
2025-04-05 18:16:56,601:INFO:Set up data.
2025-04-05 18:16:56,602:INFO:Set up index.
2025-04-05 18:36:06,744:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:06,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:06,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:06,745:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:07,249:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:36:35,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:35,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:35,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:35,650:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:36,126:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:36:36,597:INFO:PyCaret ClassificationExperiment
2025-04-05 18:36:36,597:INFO:Logging name: clf-default-name
2025-04-05 18:36:36,597:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-05 18:36:36,597:INFO:version 3.0.0
2025-04-05 18:36:36,597:INFO:Initializing setup()
2025-04-05 18:36:36,597:INFO:self.USI: 76de
2025-04-05 18:36:36,597:INFO:self._variable_keys: {'fold_groups_param', 'logging_param', 'gpu_n_jobs_param', 'target_param', 'exp_id', 'y', 'n_jobs_param', 'X_test', 'fix_imbalance', 'data', 'html_param', '_available_plots', 'X_train', 'exp_name_log', 'seed', 'idx', 'fold_shuffle_param', 'fold_generator', 'y_train', 'is_multiclass', 'USI', 'memory', 'log_plots_param', 'y_test', 'gpu_param', 'X', 'pipeline', '_ml_usecase'}
2025-04-05 18:36:36,597:INFO:Checking environment
2025-04-05 18:36:36,597:INFO:python_version: 3.10.16
2025-04-05 18:36:36,597:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-05 18:36:36,597:INFO:machine: arm64
2025-04-05 18:36:36,613:INFO:platform: macOS-15.5-arm64-arm-64bit
2025-04-05 18:36:36,613:INFO:Memory: svmem(total=17179869184, available=4573675520, percent=73.4, used=6660751360, free=60096512, active=4526456832, inactive=4469604352, wired=2134294528)
2025-04-05 18:36:36,613:INFO:Physical Core: 8
2025-04-05 18:36:36,613:INFO:Logical Core: 8
2025-04-05 18:36:36,613:INFO:Checking libraries
2025-04-05 18:36:36,613:INFO:System:
2025-04-05 18:36:36,613:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-05 18:36:36,613:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-05 18:36:36,613:INFO:   machine: macOS-15.5-arm64-arm-64bit
2025-04-05 18:36:36,613:INFO:PyCaret required dependencies:
2025-04-05 18:36:36,636:INFO:                 pip: 25.0.1
2025-04-05 18:36:36,636:INFO:          setuptools: 75.8.2
2025-04-05 18:36:36,636:INFO:             pycaret: 3.0.0
2025-04-05 18:36:36,636:INFO:             IPython: 8.34.0
2025-04-05 18:36:36,636:INFO:          ipywidgets: 8.1.5
2025-04-05 18:36:36,636:INFO:                tqdm: 4.67.1
2025-04-05 18:36:36,636:INFO:               numpy: 1.24.4
2025-04-05 18:36:36,636:INFO:              pandas: 1.5.3
2025-04-05 18:36:36,636:INFO:              jinja2: 3.1.6
2025-04-05 18:36:36,636:INFO:               scipy: 1.9.3
2025-04-05 18:36:36,637:INFO:              joblib: 1.2.0
2025-04-05 18:36:36,637:INFO:             sklearn: 1.1.3
2025-04-05 18:36:36,637:INFO:                pyod: 2.0.4
2025-04-05 18:36:36,637:INFO:            imblearn: 0.12.4
2025-04-05 18:36:36,637:INFO:   category_encoders: 2.7.0
2025-04-05 18:36:36,637:INFO:            lightgbm: 4.6.0
2025-04-05 18:36:36,637:INFO:               numba: 0.61.0
2025-04-05 18:36:36,637:INFO:            requests: 2.32.3
2025-04-05 18:36:36,637:INFO:          matplotlib: 3.10.1
2025-04-05 18:36:36,637:INFO:          scikitplot: 0.3.7
2025-04-05 18:36:36,637:INFO:         yellowbrick: 1.5
2025-04-05 18:36:36,637:INFO:              plotly: 5.24.1
2025-04-05 18:36:36,637:INFO:             kaleido: 0.2.1
2025-04-05 18:36:36,637:INFO:         statsmodels: 0.14.4
2025-04-05 18:36:36,637:INFO:              sktime: 0.36.0
2025-04-05 18:36:36,637:INFO:               tbats: 1.1.3
2025-04-05 18:36:36,637:INFO:            pmdarima: 2.0.4
2025-04-05 18:36:36,637:INFO:              psutil: 7.0.0
2025-04-05 18:36:36,637:INFO:PyCaret optional dependencies:
2025-04-05 18:36:36,758:INFO:                shap: Not installed
2025-04-05 18:36:36,758:INFO:           interpret: Not installed
2025-04-05 18:36:36,758:INFO:                umap: Not installed
2025-04-05 18:36:36,758:INFO:    pandas_profiling: Not installed
2025-04-05 18:36:36,758:INFO:  explainerdashboard: Not installed
2025-04-05 18:36:36,758:INFO:             autoviz: Not installed
2025-04-05 18:36:36,758:INFO:           fairlearn: Not installed
2025-04-05 18:36:36,758:INFO:             xgboost: Not installed
2025-04-05 18:36:36,758:INFO:            catboost: Not installed
2025-04-05 18:36:36,758:INFO:              kmodes: Not installed
2025-04-05 18:36:36,758:INFO:             mlxtend: Not installed
2025-04-05 18:36:36,758:INFO:       statsforecast: Not installed
2025-04-05 18:36:36,758:INFO:        tune_sklearn: Not installed
2025-04-05 18:36:36,758:INFO:                 ray: Not installed
2025-04-05 18:36:36,758:INFO:            hyperopt: Not installed
2025-04-05 18:36:36,758:INFO:              optuna: Not installed
2025-04-05 18:36:36,758:INFO:               skopt: Not installed
2025-04-05 18:36:36,758:INFO:              mlflow: 2.21.2
2025-04-05 18:36:36,758:INFO:              gradio: Not installed
2025-04-05 18:36:36,758:INFO:             fastapi: 0.115.12
2025-04-05 18:36:36,758:INFO:             uvicorn: 0.34.0
2025-04-05 18:36:36,758:INFO:              m2cgen: Not installed
2025-04-05 18:36:36,758:INFO:           evidently: Not installed
2025-04-05 18:36:36,759:INFO:               fugue: Not installed
2025-04-05 18:36:36,759:INFO:           streamlit: 1.44.0
2025-04-05 18:36:36,759:INFO:             prophet: Not installed
2025-04-05 18:36:36,759:INFO:None
2025-04-05 18:36:36,759:INFO:Set up data.
2025-04-05 18:36:36,762:INFO:Set up train/test split.
2025-04-05 18:36:36,766:INFO:Set up index.
2025-04-05 18:36:36,766:INFO:Set up folding strategy.
2025-04-05 18:36:36,766:INFO:Assigning column types.
2025-04-05 18:36:36,767:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-05 18:36:36,786:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:36:36,787:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:36:36,801:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,801:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,820:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:36:36,820:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:36:36,832:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,832:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,832:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-05 18:36:36,851:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:36:36,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,863:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:36:36,894:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,894:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-05 18:36:36,924:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,924:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,955:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,955:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:36,957:INFO:Preparing preprocessing pipeline...
2025-04-05 18:36:36,958:INFO:Set up simple imputation.
2025-04-05 18:36:36,968:INFO:Finished creating preprocessing pipeline.
2025-04-05 18:36:36,970:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-05 18:36:36,970:INFO:Creating final display dataframe.
2025-04-05 18:36:36,998:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              76de
2025-04-05 18:36:37,031:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:37,031:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:37,063:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:37,063:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:36:37,063:INFO:setup() successfully completed in 0.47s...............
2025-04-05 18:36:37,063:INFO:Initializing create_model()
2025-04-05 18:36:37,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x305d7d390>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:36:37,063:INFO:Checking exceptions
2025-04-05 18:36:37,078:INFO:Importing libraries
2025-04-05 18:36:37,078:INFO:Copying training dataset
2025-04-05 18:36:37,081:INFO:Defining folds
2025-04-05 18:36:37,081:INFO:Declaring metric variables
2025-04-05 18:36:37,081:INFO:Importing untrained model
2025-04-05 18:36:37,081:INFO:Logistic Regression Imported successfully
2025-04-05 18:36:37,082:INFO:Starting cross validation
2025-04-05 18:36:37,082:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:36:40,909:INFO:Calculating mean and std
2025-04-05 18:36:40,910:INFO:Creating metrics dataframe
2025-04-05 18:36:40,914:INFO:Finalizing model
2025-04-05 18:36:40,932:INFO:Uploading results into container
2025-04-05 18:36:40,932:INFO:Uploading model into container now
2025-04-05 18:36:40,937:INFO:_master_model_container: 1
2025-04-05 18:36:40,937:INFO:_display_container: 2
2025-04-05 18:36:40,938:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-05 18:36:40,938:INFO:create_model() successfully completed......................................
2025-04-05 18:36:41,046:INFO:Initializing predict_model()
2025-04-05 18:36:41,046:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x305d7d390>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3090093f0>)
2025-04-05 18:36:41,046:INFO:Checking exceptions
2025-04-05 18:36:41,046:INFO:Preloading libraries
2025-04-05 18:36:41,046:INFO:Set up data.
2025-04-05 18:36:41,048:INFO:Set up index.
2025-04-05 18:36:41,195:INFO:Initializing create_model()
2025-04-05 18:36:41,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x305d7d390>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:36:41,195:INFO:Checking exceptions
2025-04-05 18:36:41,196:INFO:Importing libraries
2025-04-05 18:36:41,197:INFO:Copying training dataset
2025-04-05 18:36:41,199:INFO:Defining folds
2025-04-05 18:36:41,199:INFO:Declaring metric variables
2025-04-05 18:36:41,199:INFO:Importing untrained model
2025-04-05 18:36:41,199:INFO:Decision Tree Classifier Imported successfully
2025-04-05 18:36:41,199:INFO:Starting cross validation
2025-04-05 18:36:41,199:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:36:41,358:INFO:Calculating mean and std
2025-04-05 18:36:41,358:INFO:Creating metrics dataframe
2025-04-05 18:36:41,359:INFO:Finalizing model
2025-04-05 18:36:41,394:INFO:Uploading results into container
2025-04-05 18:36:41,394:INFO:Uploading model into container now
2025-04-05 18:36:41,398:INFO:_master_model_container: 2
2025-04-05 18:36:41,398:INFO:_display_container: 4
2025-04-05 18:36:41,398:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-05 18:36:41,398:INFO:create_model() successfully completed......................................
2025-04-05 18:36:41,456:INFO:Initializing predict_model()
2025-04-05 18:36:41,456:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x305d7d390>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3090093f0>)
2025-04-05 18:36:41,456:INFO:Checking exceptions
2025-04-05 18:36:41,456:INFO:Preloading libraries
2025-04-05 18:36:41,456:INFO:Set up data.
2025-04-05 18:36:41,458:INFO:Set up index.
2025-04-05 18:36:41,542:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-05 18:36:41,543:INFO:Initializing save_model()
2025-04-05 18:36:41,543:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-05 18:36:41,543:INFO:Adding model into prep_pipe
2025-04-05 18:36:41,545:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-05 18:36:41,547:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-05 18:36:41,547:INFO:save_model() successfully completed......................................
2025-04-05 18:36:46,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:46,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:46,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:46,453:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:36:46,896:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:36:47,288:INFO:Initializing load_model()
2025-04-05 18:36:47,288:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-05 18:36:47,381:INFO:Initializing predict_model()
2025-04-05 18:36:47,381:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x305a44dc0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x305a3b250>)
2025-04-05 18:36:47,381:INFO:Checking exceptions
2025-04-05 18:36:47,381:INFO:Preloading libraries
2025-04-05 18:36:47,381:INFO:Set up data.
2025-04-05 18:36:47,383:INFO:Set up index.
2025-04-05 18:40:01,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:01,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:01,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:01,174:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:01,683:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:40:02,183:INFO:PyCaret ClassificationExperiment
2025-04-05 18:40:02,183:INFO:Logging name: clf-default-name
2025-04-05 18:40:02,183:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-05 18:40:02,183:INFO:version 3.0.0
2025-04-05 18:40:02,183:INFO:Initializing setup()
2025-04-05 18:40:02,183:INFO:self.USI: 959b
2025-04-05 18:40:02,183:INFO:self._variable_keys: {'X', 'fix_imbalance', 'gpu_n_jobs_param', 'is_multiclass', 'idx', 'X_test', 'n_jobs_param', 'seed', 'data', 'pipeline', 'USI', 'logging_param', 'fold_generator', 'log_plots_param', 'fold_shuffle_param', 'gpu_param', 'target_param', 'html_param', '_available_plots', 'exp_id', 'exp_name_log', 'fold_groups_param', 'y', 'y_test', 'memory', 'y_train', '_ml_usecase', 'X_train'}
2025-04-05 18:40:02,183:INFO:Checking environment
2025-04-05 18:40:02,184:INFO:python_version: 3.10.16
2025-04-05 18:40:02,184:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-05 18:40:02,184:INFO:machine: arm64
2025-04-05 18:40:02,199:INFO:platform: macOS-15.5-arm64-arm-64bit
2025-04-05 18:40:02,200:INFO:Memory: svmem(total=17179869184, available=4630937600, percent=73.0, used=6683918336, free=92504064, active=4549378048, inactive=4494393344, wired=2134540288)
2025-04-05 18:40:02,200:INFO:Physical Core: 8
2025-04-05 18:40:02,200:INFO:Logical Core: 8
2025-04-05 18:40:02,200:INFO:Checking libraries
2025-04-05 18:40:02,200:INFO:System:
2025-04-05 18:40:02,200:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-05 18:40:02,200:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-05 18:40:02,200:INFO:   machine: macOS-15.5-arm64-arm-64bit
2025-04-05 18:40:02,200:INFO:PyCaret required dependencies:
2025-04-05 18:40:02,222:INFO:                 pip: 25.0.1
2025-04-05 18:40:02,223:INFO:          setuptools: 75.8.2
2025-04-05 18:40:02,223:INFO:             pycaret: 3.0.0
2025-04-05 18:40:02,223:INFO:             IPython: 8.34.0
2025-04-05 18:40:02,223:INFO:          ipywidgets: 8.1.5
2025-04-05 18:40:02,223:INFO:                tqdm: 4.67.1
2025-04-05 18:40:02,223:INFO:               numpy: 1.24.4
2025-04-05 18:40:02,223:INFO:              pandas: 1.5.3
2025-04-05 18:40:02,223:INFO:              jinja2: 3.1.6
2025-04-05 18:40:02,223:INFO:               scipy: 1.9.3
2025-04-05 18:40:02,223:INFO:              joblib: 1.2.0
2025-04-05 18:40:02,223:INFO:             sklearn: 1.1.3
2025-04-05 18:40:02,223:INFO:                pyod: 2.0.4
2025-04-05 18:40:02,223:INFO:            imblearn: 0.12.4
2025-04-05 18:40:02,223:INFO:   category_encoders: 2.7.0
2025-04-05 18:40:02,223:INFO:            lightgbm: 4.6.0
2025-04-05 18:40:02,223:INFO:               numba: 0.61.0
2025-04-05 18:40:02,223:INFO:            requests: 2.32.3
2025-04-05 18:40:02,223:INFO:          matplotlib: 3.10.1
2025-04-05 18:40:02,223:INFO:          scikitplot: 0.3.7
2025-04-05 18:40:02,223:INFO:         yellowbrick: 1.5
2025-04-05 18:40:02,223:INFO:              plotly: 5.24.1
2025-04-05 18:40:02,223:INFO:             kaleido: 0.2.1
2025-04-05 18:40:02,223:INFO:         statsmodels: 0.14.4
2025-04-05 18:40:02,223:INFO:              sktime: 0.36.0
2025-04-05 18:40:02,223:INFO:               tbats: 1.1.3
2025-04-05 18:40:02,223:INFO:            pmdarima: 2.0.4
2025-04-05 18:40:02,223:INFO:              psutil: 7.0.0
2025-04-05 18:40:02,223:INFO:PyCaret optional dependencies:
2025-04-05 18:40:02,344:INFO:                shap: Not installed
2025-04-05 18:40:02,344:INFO:           interpret: Not installed
2025-04-05 18:40:02,344:INFO:                umap: Not installed
2025-04-05 18:40:02,344:INFO:    pandas_profiling: Not installed
2025-04-05 18:40:02,344:INFO:  explainerdashboard: Not installed
2025-04-05 18:40:02,344:INFO:             autoviz: Not installed
2025-04-05 18:40:02,344:INFO:           fairlearn: Not installed
2025-04-05 18:40:02,344:INFO:             xgboost: Not installed
2025-04-05 18:40:02,344:INFO:            catboost: Not installed
2025-04-05 18:40:02,344:INFO:              kmodes: Not installed
2025-04-05 18:40:02,344:INFO:             mlxtend: Not installed
2025-04-05 18:40:02,344:INFO:       statsforecast: Not installed
2025-04-05 18:40:02,344:INFO:        tune_sklearn: Not installed
2025-04-05 18:40:02,344:INFO:                 ray: Not installed
2025-04-05 18:40:02,344:INFO:            hyperopt: Not installed
2025-04-05 18:40:02,344:INFO:              optuna: Not installed
2025-04-05 18:40:02,344:INFO:               skopt: Not installed
2025-04-05 18:40:02,344:INFO:              mlflow: 2.21.2
2025-04-05 18:40:02,344:INFO:              gradio: Not installed
2025-04-05 18:40:02,344:INFO:             fastapi: 0.115.12
2025-04-05 18:40:02,344:INFO:             uvicorn: 0.34.0
2025-04-05 18:40:02,344:INFO:              m2cgen: Not installed
2025-04-05 18:40:02,344:INFO:           evidently: Not installed
2025-04-05 18:40:02,344:INFO:               fugue: Not installed
2025-04-05 18:40:02,344:INFO:           streamlit: 1.44.0
2025-04-05 18:40:02,344:INFO:             prophet: Not installed
2025-04-05 18:40:02,344:INFO:None
2025-04-05 18:40:02,345:INFO:Set up data.
2025-04-05 18:40:02,348:INFO:Set up train/test split.
2025-04-05 18:40:02,352:INFO:Set up index.
2025-04-05 18:40:02,352:INFO:Set up folding strategy.
2025-04-05 18:40:02,352:INFO:Assigning column types.
2025-04-05 18:40:02,353:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-05 18:40:02,372:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:40:02,373:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:40:02,387:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,388:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,406:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 18:40:02,406:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:40:02,418:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,418:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,418:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-05 18:40:02,437:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:40:02,448:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,467:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 18:40:02,479:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,479:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,479:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-05 18:40:02,509:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,540:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,540:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,541:INFO:Preparing preprocessing pipeline...
2025-04-05 18:40:02,542:INFO:Set up simple imputation.
2025-04-05 18:40:02,552:INFO:Finished creating preprocessing pipeline.
2025-04-05 18:40:02,554:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-05 18:40:02,554:INFO:Creating final display dataframe.
2025-04-05 18:40:02,581:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              959b
2025-04-05 18:40:02,614:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,645:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,645:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 18:40:02,646:INFO:setup() successfully completed in 0.47s...............
2025-04-05 18:40:02,646:INFO:Initializing create_model()
2025-04-05 18:40:02,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081ed600>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:40:02,646:INFO:Checking exceptions
2025-04-05 18:40:02,665:INFO:Importing libraries
2025-04-05 18:40:02,665:INFO:Copying training dataset
2025-04-05 18:40:02,669:INFO:Defining folds
2025-04-05 18:40:02,669:INFO:Declaring metric variables
2025-04-05 18:40:02,669:INFO:Importing untrained model
2025-04-05 18:40:02,669:INFO:Logistic Regression Imported successfully
2025-04-05 18:40:02,669:INFO:Starting cross validation
2025-04-05 18:40:02,670:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:40:06,500:INFO:Calculating mean and std
2025-04-05 18:40:06,500:INFO:Creating metrics dataframe
2025-04-05 18:40:06,504:INFO:Finalizing model
2025-04-05 18:40:06,520:INFO:Uploading results into container
2025-04-05 18:40:06,521:INFO:Uploading model into container now
2025-04-05 18:40:06,530:INFO:_master_model_container: 1
2025-04-05 18:40:06,530:INFO:_display_container: 2
2025-04-05 18:40:06,531:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-05 18:40:06,531:INFO:create_model() successfully completed......................................
2025-04-05 18:40:06,638:INFO:Initializing predict_model()
2025-04-05 18:40:06,638:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081ed600>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30b5b13f0>)
2025-04-05 18:40:06,638:INFO:Checking exceptions
2025-04-05 18:40:06,638:INFO:Preloading libraries
2025-04-05 18:40:06,638:INFO:Set up data.
2025-04-05 18:40:06,640:INFO:Set up index.
2025-04-05 18:40:06,787:INFO:Initializing create_model()
2025-04-05 18:40:06,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081ed600>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 18:40:06,787:INFO:Checking exceptions
2025-04-05 18:40:06,788:INFO:Importing libraries
2025-04-05 18:40:06,788:INFO:Copying training dataset
2025-04-05 18:40:06,790:INFO:Defining folds
2025-04-05 18:40:06,790:INFO:Declaring metric variables
2025-04-05 18:40:06,790:INFO:Importing untrained model
2025-04-05 18:40:06,790:INFO:Decision Tree Classifier Imported successfully
2025-04-05 18:40:06,791:INFO:Starting cross validation
2025-04-05 18:40:06,791:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 18:40:06,995:INFO:Calculating mean and std
2025-04-05 18:40:06,995:INFO:Creating metrics dataframe
2025-04-05 18:40:06,996:INFO:Finalizing model
2025-04-05 18:40:07,029:INFO:Uploading results into container
2025-04-05 18:40:07,029:INFO:Uploading model into container now
2025-04-05 18:40:07,033:INFO:_master_model_container: 2
2025-04-05 18:40:07,033:INFO:_display_container: 4
2025-04-05 18:40:07,033:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-05 18:40:07,033:INFO:create_model() successfully completed......................................
2025-04-05 18:40:07,090:INFO:Initializing predict_model()
2025-04-05 18:40:07,090:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3081ed600>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30b5b13f0>)
2025-04-05 18:40:07,090:INFO:Checking exceptions
2025-04-05 18:40:07,090:INFO:Preloading libraries
2025-04-05 18:40:07,090:INFO:Set up data.
2025-04-05 18:40:07,092:INFO:Set up index.
2025-04-05 18:40:07,176:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-05 18:40:07,178:INFO:Initializing save_model()
2025-04-05 18:40:07,178:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-05 18:40:07,178:INFO:Adding model into prep_pipe
2025-04-05 18:40:07,179:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-05 18:40:07,181:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-05 18:40:07,181:INFO:save_model() successfully completed......................................
2025-04-05 18:40:12,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:12,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:12,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:12,073:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 18:40:12,523:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 18:40:12,918:INFO:Initializing load_model()
2025-04-05 18:40:12,918:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-05 18:40:13,009:INFO:Initializing predict_model()
2025-04-05 18:40:13,009:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3078c3e80>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x3078eb370>)
2025-04-05 18:40:13,009:INFO:Checking exceptions
2025-04-05 18:40:13,009:INFO:Preloading libraries
2025-04-05 18:40:13,009:INFO:Set up data.
2025-04-05 18:40:13,011:INFO:Set up index.
2025-04-05 19:21:11,106:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:11,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:11,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:11,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:11,863:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 19:21:12,352:INFO:PyCaret ClassificationExperiment
2025-04-05 19:21:12,352:INFO:Logging name: clf-default-name
2025-04-05 19:21:12,352:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-04-05 19:21:12,352:INFO:version 3.0.0
2025-04-05 19:21:12,352:INFO:Initializing setup()
2025-04-05 19:21:12,352:INFO:self.USI: 379e
2025-04-05 19:21:12,352:INFO:self._variable_keys: {'seed', '_available_plots', 'fold_groups_param', 'X_train', 'X_test', 'USI', 'fix_imbalance', 'X', 'y_train', 'y', 'gpu_n_jobs_param', 'data', 'fold_shuffle_param', 'fold_generator', 'memory', 'exp_id', 'idx', 'pipeline', '_ml_usecase', 'y_test', 'log_plots_param', 'target_param', 'logging_param', 'exp_name_log', 'gpu_param', 'html_param', 'is_multiclass', 'n_jobs_param'}
2025-04-05 19:21:12,352:INFO:Checking environment
2025-04-05 19:21:12,352:INFO:python_version: 3.10.16
2025-04-05 19:21:12,352:INFO:python_build: ('main', 'Dec  5 2024 14:20:01')
2025-04-05 19:21:12,352:INFO:machine: arm64
2025-04-05 19:21:12,369:INFO:platform: macOS-15.5-arm64-arm-64bit
2025-04-05 19:21:12,369:INFO:Memory: svmem(total=17179869184, available=4553031680, percent=73.5, used=6680297472, free=68075520, active=4499816448, inactive=4438376448, wired=2180481024)
2025-04-05 19:21:12,369:INFO:Physical Core: 8
2025-04-05 19:21:12,369:INFO:Logical Core: 8
2025-04-05 19:21:12,369:INFO:Checking libraries
2025-04-05 19:21:12,369:INFO:System:
2025-04-05 19:21:12,369:INFO:    python: 3.10.16 | packaged by conda-forge | (main, Dec  5 2024, 14:20:01) [Clang 18.1.8 ]
2025-04-05 19:21:12,369:INFO:executable: /Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/bin/python
2025-04-05 19:21:12,369:INFO:   machine: macOS-15.5-arm64-arm-64bit
2025-04-05 19:21:12,369:INFO:PyCaret required dependencies:
2025-04-05 19:21:12,391:INFO:                 pip: 25.0.1
2025-04-05 19:21:12,391:INFO:          setuptools: 75.8.2
2025-04-05 19:21:12,391:INFO:             pycaret: 3.0.0
2025-04-05 19:21:12,392:INFO:             IPython: 8.34.0
2025-04-05 19:21:12,392:INFO:          ipywidgets: 8.1.5
2025-04-05 19:21:12,392:INFO:                tqdm: 4.67.1
2025-04-05 19:21:12,392:INFO:               numpy: 1.24.4
2025-04-05 19:21:12,392:INFO:              pandas: 1.5.3
2025-04-05 19:21:12,392:INFO:              jinja2: 3.1.6
2025-04-05 19:21:12,392:INFO:               scipy: 1.9.3
2025-04-05 19:21:12,392:INFO:              joblib: 1.2.0
2025-04-05 19:21:12,392:INFO:             sklearn: 1.1.3
2025-04-05 19:21:12,392:INFO:                pyod: 2.0.4
2025-04-05 19:21:12,392:INFO:            imblearn: 0.12.4
2025-04-05 19:21:12,392:INFO:   category_encoders: 2.7.0
2025-04-05 19:21:12,392:INFO:            lightgbm: 4.6.0
2025-04-05 19:21:12,392:INFO:               numba: 0.61.0
2025-04-05 19:21:12,392:INFO:            requests: 2.32.3
2025-04-05 19:21:12,392:INFO:          matplotlib: 3.10.1
2025-04-05 19:21:12,392:INFO:          scikitplot: 0.3.7
2025-04-05 19:21:12,392:INFO:         yellowbrick: 1.5
2025-04-05 19:21:12,392:INFO:              plotly: 5.24.1
2025-04-05 19:21:12,392:INFO:             kaleido: 0.2.1
2025-04-05 19:21:12,392:INFO:         statsmodels: 0.14.4
2025-04-05 19:21:12,392:INFO:              sktime: 0.36.0
2025-04-05 19:21:12,392:INFO:               tbats: 1.1.3
2025-04-05 19:21:12,392:INFO:            pmdarima: 2.0.4
2025-04-05 19:21:12,392:INFO:              psutil: 7.0.0
2025-04-05 19:21:12,392:INFO:PyCaret optional dependencies:
2025-04-05 19:21:12,515:INFO:                shap: Not installed
2025-04-05 19:21:12,515:INFO:           interpret: Not installed
2025-04-05 19:21:12,515:INFO:                umap: Not installed
2025-04-05 19:21:12,515:INFO:    pandas_profiling: Not installed
2025-04-05 19:21:12,516:INFO:  explainerdashboard: Not installed
2025-04-05 19:21:12,516:INFO:             autoviz: Not installed
2025-04-05 19:21:12,516:INFO:           fairlearn: Not installed
2025-04-05 19:21:12,516:INFO:             xgboost: Not installed
2025-04-05 19:21:12,516:INFO:            catboost: Not installed
2025-04-05 19:21:12,516:INFO:              kmodes: Not installed
2025-04-05 19:21:12,516:INFO:             mlxtend: Not installed
2025-04-05 19:21:12,516:INFO:       statsforecast: Not installed
2025-04-05 19:21:12,516:INFO:        tune_sklearn: Not installed
2025-04-05 19:21:12,516:INFO:                 ray: Not installed
2025-04-05 19:21:12,516:INFO:            hyperopt: Not installed
2025-04-05 19:21:12,516:INFO:              optuna: Not installed
2025-04-05 19:21:12,516:INFO:               skopt: Not installed
2025-04-05 19:21:12,516:INFO:              mlflow: 2.21.2
2025-04-05 19:21:12,516:INFO:              gradio: Not installed
2025-04-05 19:21:12,516:INFO:             fastapi: 0.115.12
2025-04-05 19:21:12,516:INFO:             uvicorn: 0.34.0
2025-04-05 19:21:12,516:INFO:              m2cgen: Not installed
2025-04-05 19:21:12,516:INFO:           evidently: Not installed
2025-04-05 19:21:12,516:INFO:               fugue: Not installed
2025-04-05 19:21:12,516:INFO:           streamlit: 1.44.0
2025-04-05 19:21:12,516:INFO:             prophet: Not installed
2025-04-05 19:21:12,516:INFO:None
2025-04-05 19:21:12,516:INFO:Set up data.
2025-04-05 19:21:12,519:INFO:Set up train/test split.
2025-04-05 19:21:12,523:INFO:Set up index.
2025-04-05 19:21:12,523:INFO:Set up folding strategy.
2025-04-05 19:21:12,523:INFO:Assigning column types.
2025-04-05 19:21:12,524:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-04-05 19:21:12,543:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 19:21:12,544:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 19:21:12,558:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,576:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-04-05 19:21:12,577:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 19:21:12,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,588:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-04-05 19:21:12,607:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 19:21:12,618:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-04-05 19:21:12,649:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,649:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,649:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-04-05 19:21:12,680:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,680:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,710:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,710:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,712:INFO:Preparing preprocessing pipeline...
2025-04-05 19:21:12,713:INFO:Set up simple imputation.
2025-04-05 19:21:12,722:INFO:Finished creating preprocessing pipeline.
2025-04-05 19:21:12,724:INFO:Pipeline: Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2025-04-05 19:21:12,724:INFO:Creating final display dataframe.
2025-04-05 19:21:12,751:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target    shot_made_flag
2                   Target type            Binary
3           Original data shape        (16228, 7)
4        Transformed data shape        (16228, 7)
5   Transformed train set shape        (11359, 7)
6    Transformed test set shape         (4869, 7)
7              Numeric features                 6
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              379e
2025-04-05 19:21:12,782:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,813:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,813:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2025-04-05 19:21:12,813:INFO:setup() successfully completed in 0.46s...............
2025-04-05 19:21:12,813:INFO:Initializing create_model()
2025-04-05 19:21:12,813:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc5ae0>, estimator=lr, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 19:21:12,813:INFO:Checking exceptions
2025-04-05 19:21:12,826:INFO:Importing libraries
2025-04-05 19:21:12,826:INFO:Copying training dataset
2025-04-05 19:21:12,829:INFO:Defining folds
2025-04-05 19:21:12,829:INFO:Declaring metric variables
2025-04-05 19:21:12,829:INFO:Importing untrained model
2025-04-05 19:21:12,830:INFO:Logistic Regression Imported successfully
2025-04-05 19:21:12,830:INFO:Starting cross validation
2025-04-05 19:21:12,830:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 19:21:16,592:INFO:Calculating mean and std
2025-04-05 19:21:16,594:INFO:Creating metrics dataframe
2025-04-05 19:21:16,598:INFO:Finalizing model
2025-04-05 19:21:16,616:INFO:Uploading results into container
2025-04-05 19:21:16,616:INFO:Uploading model into container now
2025-04-05 19:21:16,621:INFO:_master_model_container: 1
2025-04-05 19:21:16,621:INFO:_display_container: 2
2025-04-05 19:21:16,622:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-04-05 19:21:16,622:INFO:create_model() successfully completed......................................
2025-04-05 19:21:16,699:INFO:Initializing predict_model()
2025-04-05 19:21:16,699:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc5ae0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30aead3f0>)
2025-04-05 19:21:16,700:INFO:Checking exceptions
2025-04-05 19:21:16,700:INFO:Preloading libraries
2025-04-05 19:21:16,700:INFO:Set up data.
2025-04-05 19:21:16,702:INFO:Set up index.
2025-04-05 19:21:16,858:INFO:Initializing create_model()
2025-04-05 19:21:16,858:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc5ae0>, estimator=dt, fold=None, round=4, cross_validation=True, predict=True, fit_kwargs=None, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=True, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2025-04-05 19:21:16,858:INFO:Checking exceptions
2025-04-05 19:21:16,859:INFO:Importing libraries
2025-04-05 19:21:16,859:INFO:Copying training dataset
2025-04-05 19:21:16,861:INFO:Defining folds
2025-04-05 19:21:16,861:INFO:Declaring metric variables
2025-04-05 19:21:16,861:INFO:Importing untrained model
2025-04-05 19:21:16,861:INFO:Decision Tree Classifier Imported successfully
2025-04-05 19:21:16,861:INFO:Starting cross validation
2025-04-05 19:21:16,862:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-04-05 19:21:17,071:INFO:Calculating mean and std
2025-04-05 19:21:17,072:INFO:Creating metrics dataframe
2025-04-05 19:21:17,073:INFO:Finalizing model
2025-04-05 19:21:17,105:INFO:Uploading results into container
2025-04-05 19:21:17,106:INFO:Uploading model into container now
2025-04-05 19:21:17,109:INFO:_master_model_container: 2
2025-04-05 19:21:17,109:INFO:_display_container: 4
2025-04-05 19:21:17,110:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best')
2025-04-05 19:21:17,110:INFO:create_model() successfully completed......................................
2025-04-05 19:21:17,166:INFO:Initializing predict_model()
2025-04-05 19:21:17,166:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x307bc5ae0>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x307fba050>)
2025-04-05 19:21:17,166:INFO:Checking exceptions
2025-04-05 19:21:17,166:INFO:Preloading libraries
2025-04-05 19:21:17,166:INFO:Set up data.
2025-04-05 19:21:17,168:INFO:Set up index.
2025-04-05 19:21:17,252:WARNING:/Users/marcelodeazevedo/miniconda3/envs/kobe_env_trab/lib/python3.10/site-packages/mlflow/types/utils.py:452: UserWarning: Hint: Inferred schema contains integer column(s). Integer columns in Python cannot represent missing values. If your input data contains missing values at inference time, it will be encoded as floats and will cause a schema enforcement error. The best way to avoid this problem is to infer the model schema based on a realistic data sample (training dataset) that includes missing values. Alternatively, you can declare integer columns as doubles (float64) whenever these columns may have missing values. See `Handling Integers With Missing Values <https://www.mlflow.org/docs/latest/models.html#handling-integers-with-missing-values>`_ for more details.
  warnings.warn(

2025-04-05 19:21:17,253:INFO:Initializing save_model()
2025-04-05 19:21:17,253:INFO:save_model(model=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=123, splitter='best'), model_name=./data/processed/final_model, prep_pipe_=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-04-05 19:21:17,254:INFO:Adding model into prep_pipe
2025-04-05 19:21:17,255:INFO:./data/processed/final_model.pkl saved in current working directory
2025-04-05 19:21:17,257:INFO:Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='dep...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('trained_model',
                 DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None,
                                        criterion='gini', max_depth=None,
                                        max_features=None, max_leaf_nodes=None,
                                        min_impurity_decrease=0.0,
                                        min_samples_leaf=1, min_samples_split=2,
                                        min_weight_fraction_leaf=0.0,
                                        random_state=123, splitter='best'))],
         verbose=False)
2025-04-05 19:21:17,257:INFO:save_model() successfully completed......................................
2025-04-05 19:21:22,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:22,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:22,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:22,310:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-04-05 19:21:22,767:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2025-04-05 19:21:23,182:INFO:Initializing load_model()
2025-04-05 19:21:23,182:INFO:load_model(model_name=./data/processed/final_model, platform=None, authentication=None, verbose=True)
2025-04-05 19:21:23,271:INFO:Initializing predict_model()
2025-04-05 19:21:23,271:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x3078109d0>, estimator=Pipeline(memory=FastMemory(location=/var/folders/mq/862sywnn1235f67f3b0pk3c40000gn/T/joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['lat', 'lon', 'minutes_remaining',
                                             'period', 'playoffs',
                                             'shot_distance'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=[],
                                    transformer=SimpleImputer(strategy='most_frequent'))),
                ('trained_model', DecisionTreeClassifier(random_state=123))]), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, replace_labels_in_column=<function _SupervisedExperiment.predict_model.<locals>.replace_labels_in_column at 0x30780b370>)
2025-04-05 19:21:23,271:INFO:Checking exceptions
2025-04-05 19:21:23,271:INFO:Preloading libraries
2025-04-05 19:21:23,271:INFO:Set up data.
2025-04-05 19:21:23,273:INFO:Set up index.
